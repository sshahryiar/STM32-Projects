;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02/12/2017 07:19:09 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x4FFC2000  	536891388
0x0004	0x20610000  	8289
0x0008	0x1F690000  	8041
0x000C	0x1F690000  	8041
0x0010	0x1F690000  	8041
0x0014	0x1F690000  	8041
0x0018	0x1F690000  	8041
0x001C	0x1F690000  	8041
0x0020	0x1F690000  	8041
0x0024	0x1F690000  	8041
0x0028	0x1F690000  	8041
0x002C	0x1F690000  	8041
0x0030	0x1F690000  	8041
0x0034	0x1F690000  	8041
0x0038	0x1F690000  	8041
0x003C	0x1F690000  	8041
0x0040	0x1F690000  	8041
0x0044	0x1F690000  	8041
0x0048	0x1F690000  	8041
0x004C	0x1F690000  	8041
0x0050	0x1F690000  	8041
0x0054	0x1F690000  	8041
0x0058	0x1F690000  	8041
0x005C	0x1F690000  	8041
0x0060	0x1F690000  	8041
0x0064	0x1F690000  	8041
0x0068	0x1F690000  	8041
0x006C	0x1F690000  	8041
0x0070	0x1F690000  	8041
0x0074	0x1F690000  	8041
0x0078	0x1F690000  	8041
0x007C	0x1F690000  	8041
0x0080	0x1F690000  	8041
0x0084	0x1F690000  	8041
0x0088	0x1F690000  	8041
0x008C	0x1F690000  	8041
0x0090	0x1F690000  	8041
0x0094	0x1F690000  	8041
0x0098	0x1F690000  	8041
0x009C	0x1F690000  	8041
0x00A0	0x1F690000  	8041
0x00A4	0x1F690000  	8041
0x00A8	0x1F690000  	8041
0x00AC	0x1F690000  	8041
0x00B0	0x1F690000  	8041
0x00B4	0x1F690000  	8041
0x00B8	0x1F690000  	8041
0x00BC	0x1F690000  	8041
0x00C0	0x1F690000  	8041
0x00C4	0x1F690000  	8041
0x00C8	0x1F690000  	8041
0x00CC	0x1F690000  	8041
0x00D0	0x1F690000  	8041
0x00D4	0x1F690000  	8041
0x00D8	0x1F690000  	8041
0x00DC	0x1F690000  	8041
0x00E0	0x1F690000  	8041
0x00E4	0x1F690000  	8041
0x00E8	0x1F690000  	8041
0x00EC	0x1F690000  	8041
0x00F0	0x1F690000  	8041
0x00F4	0x1F690000  	8041
0x00F8	0x1F690000  	8041
0x00FC	0x1F690000  	8041
0x0100	0x1F690000  	8041
0x0104	0x1F690000  	8041
0x0108	0x1F690000  	8041
0x010C	0x1F690000  	8041
0x0110	0x1F690000  	8041
0x0114	0x1F690000  	8041
0x0118	0x1F690000  	8041
0x011C	0x1F690000  	8041
0x0120	0x1F690000  	8041
0x0124	0x1F690000  	8041
0x0128	0x1F690000  	8041
0x012C	0x1F690000  	8041
; end of ____SysVT
_main:
;oled_demo.c, 9 :: 		void main()
0x2060	0xB083    SUB	SP, SP, #12
0x2062	0xF7FFFF85  BL	8048
0x2066	0xF000FE09  BL	11388
0x206A	0xF7FFFF73  BL	8020
0x206E	0xF000FDC5  BL	11260
;oled_demo.c, 11 :: 		unsigned int m = 0;
;oled_demo.c, 12 :: 		unsigned char n = 0;
;oled_demo.c, 13 :: 		unsigned char o = 0;
;oled_demo.c, 14 :: 		unsigned char p = 0;
;oled_demo.c, 16 :: 		signed int i = -9;
;oled_demo.c, 18 :: 		float f = -10.0;
;oled_demo.c, 20 :: 		setup_MCU();
0x2072	0xF7FFFA6F  BL	_setup_MCU+0
;oled_demo.c, 22 :: 		while(1)
L_main161:
;oled_demo.c, 24 :: 		i = -9;
0x2076	0xF64F70F7  MOVW	R0, #65527
0x207A	0xB200    SXTH	R0, R0
0x207C	0xF8AD0006  STRH	R0, [SP, #6]
;oled_demo.c, 25 :: 		f = -10.0;
0x2080	0x48FC    LDR	R0, [PC, #1008]
0x2082	0x9002    STR	R0, [SP, #8]
;oled_demo.c, 27 :: 		OLED_fill(0x00);
0x2084	0x2000    MOVS	R0, #0
0x2086	0xF7FEF8D3  BL	_OLED_fill+0
;oled_demo.c, 28 :: 		OLED_fill(0xAA);
0x208A	0x20AA    MOVS	R0, #170
0x208C	0xF7FEF8D0  BL	_OLED_fill+0
;oled_demo.c, 29 :: 		delay_ms(600);
0x2090	0xF64D47FF  MOVW	R7, #56575
0x2094	0xF2C0076D  MOVT	R7, #109
L_main163:
0x2098	0x1E7F    SUBS	R7, R7, #1
0x209A	0xD1FD    BNE	L_main163
0x209C	0xBF00    NOP
0x209E	0xBF00    NOP
0x20A0	0xBF00    NOP
0x20A2	0xBF00    NOP
0x20A4	0xBF00    NOP
;oled_demo.c, 31 :: 		OLED_fill(0x55);
0x20A6	0x2055    MOVS	R0, #85
0x20A8	0xF7FEF8C2  BL	_OLED_fill+0
;oled_demo.c, 32 :: 		delay_ms(600);
0x20AC	0xF64D47FF  MOVW	R7, #56575
0x20B0	0xF2C0076D  MOVT	R7, #109
0x20B4	0xBF00    NOP
0x20B6	0xBF00    NOP
L_main165:
0x20B8	0x1E7F    SUBS	R7, R7, #1
0x20BA	0xD1FD    BNE	L_main165
0x20BC	0xBF00    NOP
0x20BE	0xBF00    NOP
0x20C0	0xBF00    NOP
;oled_demo.c, 34 :: 		OLED_clear_buffer();
0x20C2	0xF7FEFADB  BL	_OLED_clear_buffer+0
;oled_demo.c, 35 :: 		OLED_fill(0x00);
0x20C6	0x2000    MOVS	R0, #0
0x20C8	0xF7FEF8B2  BL	_OLED_fill+0
;oled_demo.c, 36 :: 		OLED_print_Image(mikro_logo, OFF);
0x20CC	0x2100    MOVS	R1, #0
0x20CE	0x48EA    LDR	R0, [PC, #936]
0x20D0	0xF7FFFA4A  BL	_OLED_print_Image+0
;oled_demo.c, 37 :: 		delay_ms(2400);
0x20D4	0xF24737FF  MOVW	R7, #29695
0x20D8	0xF2C017B7  MOVT	R7, #439
0x20DC	0xBF00    NOP
0x20DE	0xBF00    NOP
L_main167:
0x20E0	0x1E7F    SUBS	R7, R7, #1
0x20E2	0xD1FD    BNE	L_main167
0x20E4	0xBF00    NOP
0x20E6	0xBF00    NOP
0x20E8	0xBF00    NOP
;oled_demo.c, 39 :: 		OLED_fill(0x00);
0x20EA	0x2000    MOVS	R0, #0
0x20EC	0xF7FEF8A0  BL	_OLED_fill+0
;oled_demo.c, 40 :: 		OLED_clear_buffer();
0x20F0	0xF7FEFAC4  BL	_OLED_clear_buffer+0
;oled_demo.c, 41 :: 		for(m = 1; m < 30; m++)
; m start address is: 12 (R3)
0x20F4	0x2301    MOVS	R3, #1
; m end address is: 12 (R3)
0x20F6	0xB299    UXTH	R1, R3
L_main169:
; m start address is: 4 (R1)
0x20F8	0x291E    CMP	R1, #30
0x20FA	0xD21D    BCS	L_main170
;oled_demo.c, 43 :: 		Draw_Circle(63, 31, m, YES, ON);
0x20FC	0x2001    MOVS	R0, #1
0x20FE	0xF8AD1000  STRH	R1, [SP, #0]
0x2102	0xB401    PUSH	(R0)
0x2104	0x2301    MOVS	R3, #1
0x2106	0xB20A    SXTH	R2, R1
0x2108	0x211F    MOVS	R1, #31
0x210A	0xB209    SXTH	R1, R1
0x210C	0x203F    MOVS	R0, #63
0x210E	0xB200    SXTH	R0, R0
0x2110	0xF7FFFA78  BL	_Draw_Circle+0
0x2114	0xB001    ADD	SP, SP, #4
0x2116	0xF8BD1000  LDRH	R1, [SP, #0]
;oled_demo.c, 44 :: 		delay_ms(10);
0x211A	0xF24D47BF  MOVW	R7, #54463
0x211E	0xF2C00701  MOVT	R7, #1
L_main172:
0x2122	0x1E7F    SUBS	R7, R7, #1
0x2124	0xD1FD    BNE	L_main172
0x2126	0xBF00    NOP
0x2128	0xBF00    NOP
0x212A	0xBF00    NOP
0x212C	0xBF00    NOP
0x212E	0xBF00    NOP
;oled_demo.c, 41 :: 		for(m = 1; m < 30; m++)
0x2130	0x1C4B    ADDS	R3, R1, #1
0x2132	0xB29B    UXTH	R3, R3
; m end address is: 4 (R1)
; m start address is: 12 (R3)
;oled_demo.c, 45 :: 		}
0x2134	0xB299    UXTH	R1, R3
; m end address is: 12 (R3)
0x2136	0xE7DF    B	L_main169
L_main170:
;oled_demo.c, 46 :: 		delay_ms(900);
0x2138	0xF64C377F  MOVW	R7, #52095
0x213C	0xF2C007A4  MOVT	R7, #164
L_main174:
0x2140	0x1E7F    SUBS	R7, R7, #1
0x2142	0xD1FD    BNE	L_main174
0x2144	0xBF00    NOP
0x2146	0xBF00    NOP
0x2148	0xBF00    NOP
0x214A	0xBF00    NOP
0x214C	0xBF00    NOP
;oled_demo.c, 47 :: 		for(m = 1; m < 30; m++)
; m start address is: 12 (R3)
0x214E	0x2301    MOVS	R3, #1
; m end address is: 12 (R3)
0x2150	0xB299    UXTH	R1, R3
L_main176:
; m start address is: 4 (R1)
0x2152	0x291E    CMP	R1, #30
0x2154	0xD21D    BCS	L_main177
;oled_demo.c, 49 :: 		Draw_Circle(63, 31, m, YES, OFF);
0x2156	0x2000    MOVS	R0, #0
0x2158	0xF8AD1000  STRH	R1, [SP, #0]
0x215C	0xB401    PUSH	(R0)
0x215E	0x2301    MOVS	R3, #1
0x2160	0xB20A    SXTH	R2, R1
0x2162	0x211F    MOVS	R1, #31
0x2164	0xB209    SXTH	R1, R1
0x2166	0x203F    MOVS	R0, #63
0x2168	0xB200    SXTH	R0, R0
0x216A	0xF7FFFA4B  BL	_Draw_Circle+0
0x216E	0xB001    ADD	SP, SP, #4
0x2170	0xF8BD1000  LDRH	R1, [SP, #0]
;oled_demo.c, 50 :: 		delay_ms(10);
0x2174	0xF24D47BF  MOVW	R7, #54463
0x2178	0xF2C00701  MOVT	R7, #1
0x217C	0xBF00    NOP
0x217E	0xBF00    NOP
L_main179:
0x2180	0x1E7F    SUBS	R7, R7, #1
0x2182	0xD1FD    BNE	L_main179
0x2184	0xBF00    NOP
0x2186	0xBF00    NOP
0x2188	0xBF00    NOP
;oled_demo.c, 47 :: 		for(m = 1; m < 30; m++)
0x218A	0x1C4B    ADDS	R3, R1, #1
0x218C	0xB29B    UXTH	R3, R3
; m end address is: 4 (R1)
; m start address is: 12 (R3)
;oled_demo.c, 51 :: 		}
0x218E	0xB299    UXTH	R1, R3
; m end address is: 12 (R3)
0x2190	0xE7DF    B	L_main176
L_main177:
;oled_demo.c, 52 :: 		delay_ms(1600);
0x2192	0xF24F77FF  MOVW	R7, #63487
0x2196	0xF2C01724  MOVT	R7, #292
L_main181:
0x219A	0x1E7F    SUBS	R7, R7, #1
0x219C	0xD1FD    BNE	L_main181
0x219E	0xBF00    NOP
0x21A0	0xBF00    NOP
0x21A2	0xBF00    NOP
0x21A4	0xBF00    NOP
0x21A6	0xBF00    NOP
;oled_demo.c, 54 :: 		OLED_fill(0x00);
0x21A8	0x2000    MOVS	R0, #0
0x21AA	0xF7FEF841  BL	_OLED_fill+0
;oled_demo.c, 55 :: 		OLED_clear_buffer();
0x21AE	0xF7FEFA65  BL	_OLED_clear_buffer+0
;oled_demo.c, 56 :: 		for(m = 1; m < 31; m += 2)
; m start address is: 12 (R3)
0x21B2	0x2301    MOVS	R3, #1
; m end address is: 12 (R3)
0x21B4	0xB299    UXTH	R1, R3
L_main183:
; m start address is: 4 (R1)
0x21B6	0x291F    CMP	R1, #31
0x21B8	0xD21D    BCS	L_main184
;oled_demo.c, 58 :: 		Draw_Circle(63, 31, m, NO, ON);
0x21BA	0x2001    MOVS	R0, #1
0x21BC	0xF8AD1000  STRH	R1, [SP, #0]
0x21C0	0xB401    PUSH	(R0)
0x21C2	0x2300    MOVS	R3, #0
0x21C4	0xB20A    SXTH	R2, R1
0x21C6	0x211F    MOVS	R1, #31
0x21C8	0xB209    SXTH	R1, R1
0x21CA	0x203F    MOVS	R0, #63
0x21CC	0xB200    SXTH	R0, R0
0x21CE	0xF7FFFA19  BL	_Draw_Circle+0
0x21D2	0xB001    ADD	SP, SP, #4
0x21D4	0xF8BD1000  LDRH	R1, [SP, #0]
;oled_demo.c, 59 :: 		delay_ms(10);
0x21D8	0xF24D47BF  MOVW	R7, #54463
0x21DC	0xF2C00701  MOVT	R7, #1
L_main186:
0x21E0	0x1E7F    SUBS	R7, R7, #1
0x21E2	0xD1FD    BNE	L_main186
0x21E4	0xBF00    NOP
0x21E6	0xBF00    NOP
0x21E8	0xBF00    NOP
0x21EA	0xBF00    NOP
0x21EC	0xBF00    NOP
;oled_demo.c, 56 :: 		for(m = 1; m < 31; m += 2)
0x21EE	0x1C88    ADDS	R0, R1, #2
; m end address is: 4 (R1)
; m start address is: 12 (R3)
0x21F0	0xB283    UXTH	R3, R0
;oled_demo.c, 60 :: 		}
0x21F2	0xB299    UXTH	R1, R3
; m end address is: 12 (R3)
0x21F4	0xE7DF    B	L_main183
L_main184:
;oled_demo.c, 61 :: 		delay_ms(1600);
0x21F6	0xF24F77FF  MOVW	R7, #63487
0x21FA	0xF2C01724  MOVT	R7, #292
0x21FE	0xBF00    NOP
0x2200	0xBF00    NOP
L_main188:
0x2202	0x1E7F    SUBS	R7, R7, #1
0x2204	0xD1FD    BNE	L_main188
0x2206	0xBF00    NOP
0x2208	0xBF00    NOP
0x220A	0xBF00    NOP
;oled_demo.c, 63 :: 		OLED_fill(0x00);
0x220C	0x2000    MOVS	R0, #0
0x220E	0xF7FEF80F  BL	_OLED_fill+0
;oled_demo.c, 64 :: 		OLED_clear_buffer();
0x2212	0xF7FEFA33  BL	_OLED_clear_buffer+0
;oled_demo.c, 65 :: 		for(m = 1; m < 31; m++)
; m start address is: 32 (R8)
0x2216	0xF2400801  MOVW	R8, #1
; m end address is: 32 (R8)
0x221A	0xFA1FF688  UXTH	R6, R8
L_main190:
; m start address is: 24 (R6)
0x221E	0x2E1F    CMP	R6, #31
0x2220	0xD227    BCS	L_main191
;oled_demo.c, 67 :: 		Draw_Rectangle((1 + m), (1 + m), (126 - m), (62 - m), NO, YES, SQUARE);
0x2222	0x2500    MOVS	R5, #0
0x2224	0x2401    MOVS	R4, #1
0x2226	0x2300    MOVS	R3, #0
0x2228	0xF1C6023E  RSB	R2, R6, #62
0x222C	0xF1C6017E  RSB	R1, R6, #126
0x2230	0x1C70    ADDS	R0, R6, #1
0x2232	0xF8AD6000  STRH	R6, [SP, #0]
0x2236	0xB420    PUSH	(R5)
0x2238	0xB410    PUSH	(R4)
0x223A	0xB408    PUSH	(R3)
0x223C	0xB213    SXTH	R3, R2
0x223E	0xB20A    SXTH	R2, R1
0x2240	0xB201    SXTH	R1, R0
0x2242	0xB200    SXTH	R0, R0
0x2244	0xF7FFFBE2  BL	_Draw_Rectangle+0
0x2248	0xB003    ADD	SP, SP, #12
0x224A	0xF8BD6000  LDRH	R6, [SP, #0]
;oled_demo.c, 68 :: 		delay_ms(10);
0x224E	0xF24D47BF  MOVW	R7, #54463
0x2252	0xF2C00701  MOVT	R7, #1
0x2256	0xBF00    NOP
0x2258	0xBF00    NOP
L_main193:
0x225A	0x1E7F    SUBS	R7, R7, #1
0x225C	0xD1FD    BNE	L_main193
0x225E	0xBF00    NOP
0x2260	0xBF00    NOP
0x2262	0xBF00    NOP
;oled_demo.c, 65 :: 		for(m = 1; m < 31; m++)
0x2264	0xF1060801  ADD	R8, R6, #1
0x2268	0xFA1FF888  UXTH	R8, R8
; m end address is: 24 (R6)
; m start address is: 32 (R8)
;oled_demo.c, 69 :: 		}
0x226C	0xFA1FF688  UXTH	R6, R8
; m end address is: 32 (R8)
0x2270	0xE7D5    B	L_main190
L_main191:
;oled_demo.c, 70 :: 		delay_ms(1600);
0x2272	0xF24F77FF  MOVW	R7, #63487
0x2276	0xF2C01724  MOVT	R7, #292
L_main195:
0x227A	0x1E7F    SUBS	R7, R7, #1
0x227C	0xD1FD    BNE	L_main195
0x227E	0xBF00    NOP
0x2280	0xBF00    NOP
0x2282	0xBF00    NOP
0x2284	0xBF00    NOP
0x2286	0xBF00    NOP
;oled_demo.c, 72 :: 		OLED_fill(0x00);
0x2288	0x2000    MOVS	R0, #0
0x228A	0xF7FDFFD1  BL	_OLED_fill+0
;oled_demo.c, 73 :: 		OLED_clear_buffer();
0x228E	0xF7FEF9F5  BL	_OLED_clear_buffer+0
;oled_demo.c, 74 :: 		for(m = 1; m < 31; m++)
; m start address is: 32 (R8)
0x2292	0xF2400801  MOVW	R8, #1
; m end address is: 32 (R8)
0x2296	0xFA1FF688  UXTH	R6, R8
L_main197:
; m start address is: 24 (R6)
0x229A	0x2E1F    CMP	R6, #31
0x229C	0xD226    BCS	L_main198
;oled_demo.c, 76 :: 		Draw_Rectangle((1 + m), (1 + m), (126 - m), (62 - m), NO, YES, ROUND);
0x229E	0x2501    MOVS	R5, #1
0x22A0	0x2401    MOVS	R4, #1
0x22A2	0x2300    MOVS	R3, #0
0x22A4	0xF1C6023E  RSB	R2, R6, #62
0x22A8	0xF1C6017E  RSB	R1, R6, #126
0x22AC	0x1C70    ADDS	R0, R6, #1
0x22AE	0xF8AD6000  STRH	R6, [SP, #0]
0x22B2	0xB420    PUSH	(R5)
0x22B4	0xB410    PUSH	(R4)
0x22B6	0xB408    PUSH	(R3)
0x22B8	0xB213    SXTH	R3, R2
0x22BA	0xB20A    SXTH	R2, R1
0x22BC	0xB201    SXTH	R1, R0
0x22BE	0xB200    SXTH	R0, R0
0x22C0	0xF7FFFBA4  BL	_Draw_Rectangle+0
0x22C4	0xB003    ADD	SP, SP, #12
0x22C6	0xF8BD6000  LDRH	R6, [SP, #0]
;oled_demo.c, 77 :: 		delay_ms(10);
0x22CA	0xF24D47BF  MOVW	R7, #54463
0x22CE	0xF2C00701  MOVT	R7, #1
L_main200:
0x22D2	0x1E7F    SUBS	R7, R7, #1
0x22D4	0xD1FD    BNE	L_main200
0x22D6	0xBF00    NOP
0x22D8	0xBF00    NOP
0x22DA	0xBF00    NOP
0x22DC	0xBF00    NOP
0x22DE	0xBF00    NOP
;oled_demo.c, 74 :: 		for(m = 1; m < 31; m++)
0x22E0	0x1C70    ADDS	R0, R6, #1
; m end address is: 24 (R6)
; m start address is: 32 (R8)
0x22E2	0xFA1FF880  UXTH	R8, R0
;oled_demo.c, 78 :: 		}
0x22E6	0xFA1FF688  UXTH	R6, R8
; m end address is: 32 (R8)
0x22EA	0xE7D6    B	L_main197
L_main198:
;oled_demo.c, 79 :: 		delay_ms(1600);
0x22EC	0xF24F77FF  MOVW	R7, #63487
0x22F0	0xF2C01724  MOVT	R7, #292
0x22F4	0xBF00    NOP
0x22F6	0xBF00    NOP
L_main202:
0x22F8	0x1E7F    SUBS	R7, R7, #1
0x22FA	0xD1FD    BNE	L_main202
0x22FC	0xBF00    NOP
0x22FE	0xBF00    NOP
0x2300	0xBF00    NOP
;oled_demo.c, 81 :: 		OLED_fill(0x00);
0x2302	0x2000    MOVS	R0, #0
0x2304	0xF7FDFF94  BL	_OLED_fill+0
;oled_demo.c, 82 :: 		OLED_clear_buffer();
0x2308	0xF7FEF9B8  BL	_OLED_clear_buffer+0
;oled_demo.c, 83 :: 		for(m = 0; m < 128; m += 10)
; m start address is: 24 (R6)
0x230C	0x2600    MOVS	R6, #0
; m end address is: 24 (R6)
L_main204:
; m start address is: 24 (R6)
0x230E	0x2E80    CMP	R6, #128
0x2310	0xD240    BCS	L_main205
;oled_demo.c, 85 :: 		for(n = 0; n < 64; n += 8)
; n start address is: 12 (R3)
0x2312	0x2300    MOVS	R3, #0
; n end address is: 12 (R3)
; m end address is: 24 (R6)
0x2314	0xB2B4    UXTH	R4, R6
L_main207:
; n start address is: 12 (R3)
; m start address is: 16 (R4)
0x2316	0x2B40    CMP	R3, #64
0x2318	0xD238    BCS	L_main208
;oled_demo.c, 87 :: 		Draw_Line(m, n, 127, 63, ON);
0x231A	0x2001    MOVS	R0, #1
0x231C	0xF8AD4000  STRH	R4, [SP, #0]
0x2320	0xF88D3002  STRB	R3, [SP, #2]
0x2324	0xB401    PUSH	(R0)
0x2326	0x227F    MOVS	R2, #127
0x2328	0xB212    SXTH	R2, R2
0x232A	0xB2D9    UXTB	R1, R3
0x232C	0x233F    MOVS	R3, #63
0x232E	0xB21B    SXTH	R3, R3
0x2330	0xB220    SXTH	R0, R4
0x2332	0xF7FEFE2F  BL	_Draw_Line+0
0x2336	0xB001    ADD	SP, SP, #4
0x2338	0xF89D3002  LDRB	R3, [SP, #2]
0x233C	0xF8BD4000  LDRH	R4, [SP, #0]
;oled_demo.c, 88 :: 		Draw_Line((127 - m), (63 - n), 0, 0, ON);
0x2340	0x2201    MOVS	R2, #1
0x2342	0xF1C3013F  RSB	R1, R3, #63
0x2346	0xF1C4007F  RSB	R0, R4, #127
0x234A	0xF8AD4000  STRH	R4, [SP, #0]
0x234E	0xF88D3002  STRB	R3, [SP, #2]
0x2352	0xB404    PUSH	(R2)
0x2354	0x2300    MOVS	R3, #0
0x2356	0xB21B    SXTH	R3, R3
0x2358	0x2200    MOVS	R2, #0
0x235A	0xB212    SXTH	R2, R2
0x235C	0xB200    SXTH	R0, R0
0x235E	0xF7FEFE19  BL	_Draw_Line+0
0x2362	0xB001    ADD	SP, SP, #4
0x2364	0xF89D3002  LDRB	R3, [SP, #2]
0x2368	0xF8BD4000  LDRH	R4, [SP, #0]
;oled_demo.c, 89 :: 		delay_ms(10);
0x236C	0xF24D47BF  MOVW	R7, #54463
0x2370	0xF2C00701  MOVT	R7, #1
0x2374	0xBF00    NOP
0x2376	0xBF00    NOP
L_main210:
0x2378	0x1E7F    SUBS	R7, R7, #1
0x237A	0xD1FD    BNE	L_main210
0x237C	0xBF00    NOP
0x237E	0xBF00    NOP
0x2380	0xBF00    NOP
;oled_demo.c, 85 :: 		for(n = 0; n < 64; n += 8)
0x2382	0xF2030008  ADDW	R0, R3, #8
; n end address is: 12 (R3)
; n start address is: 0 (R0)
0x2386	0xB2C0    UXTB	R0, R0
;oled_demo.c, 90 :: 		}
; n end address is: 0 (R0)
0x2388	0xB2C3    UXTB	R3, R0
0x238A	0xE7C4    B	L_main207
L_main208:
;oled_demo.c, 83 :: 		for(m = 0; m < 128; m += 10)
0x238C	0xF204060A  ADDW	R6, R4, #10
0x2390	0xB2B6    UXTH	R6, R6
; m end address is: 16 (R4)
; m start address is: 24 (R6)
;oled_demo.c, 91 :: 		}
; m end address is: 24 (R6)
0x2392	0xE7BC    B	L_main204
L_main205:
;oled_demo.c, 92 :: 		delay_ms(1600);
0x2394	0xF24F77FF  MOVW	R7, #63487
0x2398	0xF2C01724  MOVT	R7, #292
0x239C	0xBF00    NOP
0x239E	0xBF00    NOP
L_main212:
0x23A0	0x1E7F    SUBS	R7, R7, #1
0x23A2	0xD1FD    BNE	L_main212
0x23A4	0xBF00    NOP
0x23A6	0xBF00    NOP
0x23A8	0xBF00    NOP
;oled_demo.c, 94 :: 		OLED_fill(0x00);
0x23AA	0x2000    MOVS	R0, #0
0x23AC	0xF7FDFF40  BL	_OLED_fill+0
;oled_demo.c, 95 :: 		OLED_clear_buffer();
0x23B0	0xF7FEF964  BL	_OLED_clear_buffer+0
;oled_demo.c, 96 :: 		Draw_Triangle(0, 63, 127, 63, 63, 0, NO, ON);
0x23B4	0x2301    MOVS	R3, #1
0x23B6	0x2200    MOVS	R2, #0
0x23B8	0x2100    MOVS	R1, #0
0x23BA	0xB209    SXTH	R1, R1
0x23BC	0x203F    MOVS	R0, #63
0x23BE	0xB200    SXTH	R0, R0
0x23C0	0xB408    PUSH	(R3)
0x23C2	0xB404    PUSH	(R2)
0x23C4	0xB402    PUSH	(R1)
0x23C6	0xB401    PUSH	(R0)
0x23C8	0x233F    MOVS	R3, #63
0x23CA	0xB21B    SXTH	R3, R3
0x23CC	0x227F    MOVS	R2, #127
0x23CE	0xB212    SXTH	R2, R2
0x23D0	0x213F    MOVS	R1, #63
0x23D2	0xB209    SXTH	R1, R1
0x23D4	0x2000    MOVS	R0, #0
0x23D6	0xB200    SXTH	R0, R0
0x23D8	0xF7FFFBF6  BL	_Draw_Triangle+0
0x23DC	0xB004    ADD	SP, SP, #16
;oled_demo.c, 97 :: 		delay_ms(1600);
0x23DE	0xF24F77FF  MOVW	R7, #63487
0x23E2	0xF2C01724  MOVT	R7, #292
0x23E6	0xBF00    NOP
0x23E8	0xBF00    NOP
L_main214:
0x23EA	0x1E7F    SUBS	R7, R7, #1
0x23EC	0xD1FD    BNE	L_main214
0x23EE	0xBF00    NOP
0x23F0	0xBF00    NOP
0x23F2	0xBF00    NOP
;oled_demo.c, 98 :: 		Draw_Triangle(0, 63, 127, 63, 63, 0, YES, ON);
0x23F4	0x2301    MOVS	R3, #1
0x23F6	0x2201    MOVS	R2, #1
0x23F8	0x2100    MOVS	R1, #0
0x23FA	0xB209    SXTH	R1, R1
0x23FC	0x203F    MOVS	R0, #63
0x23FE	0xB200    SXTH	R0, R0
0x2400	0xB408    PUSH	(R3)
0x2402	0xB404    PUSH	(R2)
0x2404	0xB402    PUSH	(R1)
0x2406	0xB401    PUSH	(R0)
0x2408	0x233F    MOVS	R3, #63
0x240A	0xB21B    SXTH	R3, R3
0x240C	0x227F    MOVS	R2, #127
0x240E	0xB212    SXTH	R2, R2
0x2410	0x213F    MOVS	R1, #63
0x2412	0xB209    SXTH	R1, R1
0x2414	0x2000    MOVS	R0, #0
0x2416	0xB200    SXTH	R0, R0
0x2418	0xF7FFFBD6  BL	_Draw_Triangle+0
0x241C	0xB004    ADD	SP, SP, #16
;oled_demo.c, 99 :: 		delay_ms(1600);
0x241E	0xF24F77FF  MOVW	R7, #63487
0x2422	0xF2C01724  MOVT	R7, #292
0x2426	0xBF00    NOP
0x2428	0xBF00    NOP
L_main216:
0x242A	0x1E7F    SUBS	R7, R7, #1
0x242C	0xD1FD    BNE	L_main216
0x242E	0xBF00    NOP
0x2430	0xBF00    NOP
0x2432	0xBF00    NOP
;oled_demo.c, 101 :: 		OLED_fill(0x00);
0x2434	0x2000    MOVS	R0, #0
0x2436	0xF7FDFEFB  BL	_OLED_fill+0
;oled_demo.c, 102 :: 		OLED_clear_buffer();
0x243A	0xF7FEF91F  BL	_OLED_clear_buffer+0
;oled_demo.c, 103 :: 		for(m = 0; m < 128; m += 8)
; m start address is: 24 (R6)
0x243E	0x2600    MOVS	R6, #0
; m end address is: 24 (R6)
L_main218:
; m start address is: 24 (R6)
0x2440	0x2E80    CMP	R6, #128
0x2442	0xD228    BCS	L_main219
;oled_demo.c, 105 :: 		for(n = 0; n < 64; n += 8)
; n start address is: 16 (R4)
0x2444	0x2400    MOVS	R4, #0
; n end address is: 16 (R4)
; m end address is: 24 (R6)
0x2446	0xB2E3    UXTB	R3, R4
0x2448	0xB2B4    UXTH	R4, R6
L_main221:
; n start address is: 12 (R3)
; m start address is: 16 (R4)
0x244A	0x2B40    CMP	R3, #64
0x244C	0xD21F    BCS	L_main222
;oled_demo.c, 107 :: 		Draw_Rectangle(m, 0, 127, n, OFF, ON, ROUND);
0x244E	0x2201    MOVS	R2, #1
0x2450	0x2101    MOVS	R1, #1
0x2452	0x2000    MOVS	R0, #0
0x2454	0xF8AD4000  STRH	R4, [SP, #0]
0x2458	0xF88D3002  STRB	R3, [SP, #2]
0x245C	0xB404    PUSH	(R2)
0x245E	0xB402    PUSH	(R1)
0x2460	0xB401    PUSH	(R0)
0x2462	0x227F    MOVS	R2, #127
0x2464	0xB212    SXTH	R2, R2
0x2466	0x2100    MOVS	R1, #0
0x2468	0xB209    SXTH	R1, R1
0x246A	0xB220    SXTH	R0, R4
0x246C	0xF7FFFACE  BL	_Draw_Rectangle+0
0x2470	0xB003    ADD	SP, SP, #12
0x2472	0xE003    B	#6
0x2474	0x0000C120  	#-1054867456
0x2478	0x25480000  	_mikro_logo+0
0x247C	0xF89D3002  LDRB	R3, [SP, #2]
0x2480	0xF8BD4000  LDRH	R4, [SP, #0]
;oled_demo.c, 105 :: 		for(n = 0; n < 64; n += 8)
0x2484	0xF2030008  ADDW	R0, R3, #8
; n end address is: 12 (R3)
; n start address is: 0 (R0)
0x2488	0xB2C0    UXTB	R0, R0
;oled_demo.c, 108 :: 		}
; n end address is: 0 (R0)
0x248A	0xB2C3    UXTB	R3, R0
0x248C	0xE7DD    B	L_main221
L_main222:
;oled_demo.c, 103 :: 		for(m = 0; m < 128; m += 8)
0x248E	0xF2040008  ADDW	R0, R4, #8
; m end address is: 16 (R4)
; m start address is: 24 (R6)
0x2492	0xB286    UXTH	R6, R0
;oled_demo.c, 109 :: 		}
; m end address is: 24 (R6)
0x2494	0xE7D4    B	L_main218
L_main219:
;oled_demo.c, 110 :: 		delay_ms(1600);
0x2496	0xF24F77FF  MOVW	R7, #63487
0x249A	0xF2C01724  MOVT	R7, #292
0x249E	0xBF00    NOP
0x24A0	0xBF00    NOP
L_main224:
0x24A2	0x1E7F    SUBS	R7, R7, #1
0x24A4	0xD1FD    BNE	L_main224
0x24A6	0xBF00    NOP
0x24A8	0xBF00    NOP
0x24AA	0xBF00    NOP
;oled_demo.c, 113 :: 		OLED_fill(0x00);
0x24AC	0x2000    MOVS	R0, #0
0x24AE	0xF7FDFEBF  BL	_OLED_fill+0
;oled_demo.c, 114 :: 		OLED_print_string(36, 1, "MicroArena");
0x24B2	0x4822    LDR	R0, [PC, #136]
0x24B4	0x4602    MOV	R2, R0
0x24B6	0x2101    MOVS	R1, #1
0x24B8	0x2024    MOVS	R0, #36
0x24BA	0xF7FFF9E1  BL	_OLED_print_string+0
;oled_demo.c, 115 :: 		OLED_print_string(12, 2, "fb.com/MicroArena");
0x24BE	0x4820    LDR	R0, [PC, #128]
0x24C0	0x4602    MOV	R2, R0
0x24C2	0x2102    MOVS	R1, #2
0x24C4	0x200C    MOVS	R0, #12
0x24C6	0xF7FFF9DB  BL	_OLED_print_string+0
;oled_demo.c, 116 :: 		for(p = 0; p < 250; p++)
0x24CA	0x2000    MOVS	R0, #0
0x24CC	0xF88D0004  STRB	R0, [SP, #4]
L_main226:
0x24D0	0xF89D0004  LDRB	R0, [SP, #4]
0x24D4	0x28FA    CMP	R0, #250
0x24D6	0xD22C    BCS	L_main227
;oled_demo.c, 118 :: 		f += 0.1;
0x24D8	0x9A02    LDR	R2, [SP, #8]
0x24DA	0x481A    LDR	R0, [PC, #104]
0x24DC	0xF7FFFA16  BL	__Add_FP+0
0x24E0	0x9002    STR	R0, [SP, #8]
;oled_demo.c, 119 :: 		i += 1;
0x24E2	0xF9BD1006  LDRSH	R1, [SP, #6]
0x24E6	0x1C49    ADDS	R1, R1, #1
0x24E8	0xF8AD1006  STRH	R1, [SP, #6]
;oled_demo.c, 121 :: 		OLED_print_float(52, 5, f, 1);
0x24EC	0x2301    MOVS	R3, #1
0x24EE	0x4602    MOV	R2, R0
0x24F0	0x2105    MOVS	R1, #5
0x24F2	0x2034    MOVS	R0, #52
0x24F4	0xF7FEFF58  BL	_OLED_print_float+0
;oled_demo.c, 122 :: 		OLED_print_int(52, 6, i);
0x24F8	0xF9BD2006  LDRSH	R2, [SP, #6]
0x24FC	0x2106    MOVS	R1, #6
0x24FE	0x2034    MOVS	R0, #52
0x2500	0xF7FEFAA2  BL	_OLED_print_int+0
;oled_demo.c, 123 :: 		OLED_print_chr(52, 7, p);
0x2504	0xF89D2004  LDRB	R2, [SP, #4]
0x2508	0x2107    MOVS	R1, #7
0x250A	0x2034    MOVS	R0, #52
0x250C	0xF7FEFE6C  BL	_OLED_print_chr+0
;oled_demo.c, 125 :: 		delay_ms(99);
0x2510	0xF242079F  MOVW	R7, #8351
0x2514	0xF2C00712  MOVT	R7, #18
L_main229:
0x2518	0x1E7F    SUBS	R7, R7, #1
0x251A	0xD1FD    BNE	L_main229
0x251C	0xBF00    NOP
0x251E	0xBF00    NOP
0x2520	0xBF00    NOP
0x2522	0xBF00    NOP
0x2524	0xBF00    NOP
;oled_demo.c, 116 :: 		for(p = 0; p < 250; p++)
0x2526	0xF89D0004  LDRB	R0, [SP, #4]
0x252A	0x1C40    ADDS	R0, R0, #1
0x252C	0xF88D0004  STRB	R0, [SP, #4]
;oled_demo.c, 126 :: 		}
0x2530	0xE7CE    B	L_main226
L_main227:
;oled_demo.c, 128 :: 		OLED_fill(0xFF);
0x2532	0x20FF    MOVS	R0, #255
0x2534	0xF7FDFE7C  BL	_OLED_fill+0
;oled_demo.c, 129 :: 		};
0x2538	0xE59D    B	L_main161
;oled_demo.c, 130 :: 		}
L_end_main:
L__main_end_loop:
0x253A	0xE7FE    B	L__main_end_loop
0x253C	0x00002000  	?lstr1_oled_demo+0
0x2540	0x000B2000  	?lstr2_oled_demo+0
0x2544	0xCCCD3DCC  	#1036831949
; end of _main
___CC2DW:
;__Lib_System_101_102_103.c, 28 :: 		
0x15B4	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 30 :: 		
L_loopDW:
;__Lib_System_101_102_103.c, 31 :: 		
0x15B6	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_101_102_103.c, 32 :: 		
0x15BA	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_101_102_103.c, 33 :: 		
0x15BE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 34 :: 		
0x15C2	0xD1F8    BNE	L_loopDW
;__Lib_System_101_102_103.c, 36 :: 		
L_end___CC2DW:
0x15C4	0xB001    ADD	SP, SP, #4
0x15C6	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_101_102_103.c, 70 :: 		
0x15C8	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 72 :: 		
0x15CA	0xF04F0900  MOV	R9, #0
;__Lib_System_101_102_103.c, 73 :: 		
0x15CE	0xF04F0C00  MOV	R12, #0
;__Lib_System_101_102_103.c, 74 :: 		
0x15D2	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_101_102_103.c, 75 :: 		
0x15D6	0xDC04    BGT	L_loopFZs
;__Lib_System_101_102_103.c, 76 :: 		
0x15D8	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_101_102_103.c, 77 :: 		
0x15DC	0xDB01    BLT	L_loopFZs
;__Lib_System_101_102_103.c, 78 :: 		
0x15DE	0x46D4    MOV	R12, R10
;__Lib_System_101_102_103.c, 79 :: 		
0x15E0	0x46EA    MOV	R10, SP
;__Lib_System_101_102_103.c, 80 :: 		
L_loopFZs:
;__Lib_System_101_102_103.c, 81 :: 		
0x15E2	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_101_102_103.c, 82 :: 		
0x15E6	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 83 :: 		
0x15EA	0xD1FA    BNE	L_loopFZs
;__Lib_System_101_102_103.c, 84 :: 		
0x15EC	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_101_102_103.c, 85 :: 		
0x15F0	0xDD05    BLE	L_norep
;__Lib_System_101_102_103.c, 86 :: 		
0x15F2	0x46E2    MOV	R10, R12
;__Lib_System_101_102_103.c, 87 :: 		
0x15F4	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_101_102_103.c, 88 :: 		
0x15F8	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_101_102_103.c, 89 :: 		
0x15FC	0xE7F1    B	L_loopFZs
;__Lib_System_101_102_103.c, 90 :: 		
L_norep:
;__Lib_System_101_102_103.c, 92 :: 		
L_end___FillZeros:
0x15FE	0xB001    ADD	SP, SP, #4
0x1600	0x4770    BX	LR
; end of ___FillZeros
_setup_MCU:
;oled_demo.c, 133 :: 		void setup_MCU()
0x1554	0xB081    SUB	SP, SP, #4
0x1556	0xF8CDE000  STR	LR, [SP, #0]
;oled_demo.c, 135 :: 		OLED_init();
0x155A	0xF7FFF9B3  BL	_OLED_init+0
;oled_demo.c, 136 :: 		}
L_end_setup_MCU:
0x155E	0xF8DDE000  LDR	LR, [SP, #0]
0x1562	0xB001    ADD	SP, SP, #4
0x1564	0x4770    BX	LR
; end of _setup_MCU
_OLED_init:
;ssd1309.c, 47 :: 		void OLED_init()
0x08C4	0xB081    SUB	SP, SP, #4
0x08C6	0xF8CDE000  STR	LR, [SP, #0]
;ssd1309.c, 49 :: 		setup_GPIOs();
0x08CA	0xF7FFFF95  BL	_setup_GPIOs+0
;ssd1309.c, 51 :: 		OLED_reset_sequence();
0x08CE	0xF7FFFF6F  BL	_OLED_reset_sequence+0
;ssd1309.c, 53 :: 		OLED_write((Set_Display_ON_or_OFF_CMD + Display_OFF) , CMD);;
0x08D2	0x2100    MOVS	R1, #0
0x08D4	0x20AE    MOVS	R0, #174
0x08D6	0xF7FFFFDB  BL	_OLED_write+0
;ssd1309.c, 55 :: 		OLED_write(Set_Display_Clock_CMD, CMD);
0x08DA	0x2100    MOVS	R1, #0
0x08DC	0x20D5    MOVS	R0, #213
0x08DE	0xF7FFFFD7  BL	_OLED_write+0
;ssd1309.c, 56 :: 		OLED_write(0x80, CMD);
0x08E2	0x2100    MOVS	R1, #0
0x08E4	0x2080    MOVS	R0, #128
0x08E6	0xF7FFFFD3  BL	_OLED_write+0
;ssd1309.c, 58 :: 		OLED_write(Set_Multiplex_Ratio_CMD, CMD);
0x08EA	0x2100    MOVS	R1, #0
0x08EC	0x20A8    MOVS	R0, #168
0x08EE	0xF7FFFFCF  BL	_OLED_write+0
;ssd1309.c, 59 :: 		OLED_write(0x3F, CMD);
0x08F2	0x2100    MOVS	R1, #0
0x08F4	0x203F    MOVS	R0, #63
0x08F6	0xF7FFFFCB  BL	_OLED_write+0
;ssd1309.c, 61 :: 		OLED_write(Set_Display_Offset_CMD, CMD);
0x08FA	0x2100    MOVS	R1, #0
0x08FC	0x20D3    MOVS	R0, #211
0x08FE	0xF7FFFFC7  BL	_OLED_write+0
;ssd1309.c, 62 :: 		OLED_write(0x00, CMD);
0x0902	0x2100    MOVS	R1, #0
0x0904	0x2000    MOVS	R0, #0
0x0906	0xF7FFFFC3  BL	_OLED_write+0
;ssd1309.c, 64 :: 		OLED_write((Set_Display_Start_Line_CMD | 0x00), CMD);
0x090A	0x2100    MOVS	R1, #0
0x090C	0x2040    MOVS	R0, #64
0x090E	0xF7FFFFBF  BL	_OLED_write+0
;ssd1309.c, 66 :: 		OLED_write(Set_Charge_Pump_CMD, CMD);
0x0912	0x2100    MOVS	R1, #0
0x0914	0x208D    MOVS	R0, #141
0x0916	0xF7FFFFBB  BL	_OLED_write+0
;ssd1309.c, 67 :: 		OLED_write((Set_Higher_Column_Start_Address_CMD | Enable_Charge_Pump), CMD);
0x091A	0x2100    MOVS	R1, #0
0x091C	0x2014    MOVS	R0, #20
0x091E	0xF7FFFFB7  BL	_OLED_write+0
;ssd1309.c, 69 :: 		OLED_write(Set_Memory_Addressing_Mode_CMD, CMD);
0x0922	0x2100    MOVS	R1, #0
0x0924	0x2020    MOVS	R0, #32
0x0926	0xF7FFFFB3  BL	_OLED_write+0
;ssd1309.c, 70 :: 		OLED_write(Page_Addressing_Mode, CMD);
0x092A	0x2100    MOVS	R1, #0
0x092C	0x2002    MOVS	R0, #2
0x092E	0xF7FFFFAF  BL	_OLED_write+0
;ssd1309.c, 72 :: 		OLED_write((Set_Segment_Remap_CMD | Column_Address_0_Mapped_to_SEG127), CMD);
0x0932	0x2100    MOVS	R1, #0
0x0934	0x20A1    MOVS	R0, #161
0x0936	0xF7FFFFAB  BL	_OLED_write+0
;ssd1309.c, 74 :: 		OLED_write((Set_COM_Output_Scan_Direction_CMD | Scan_from_COM63_to_0), CMD);
0x093A	0x2100    MOVS	R1, #0
0x093C	0x20C8    MOVS	R0, #200
0x093E	0xF7FFFFA7  BL	_OLED_write+0
;ssd1309.c, 76 :: 		OLED_write(Set_Common_HW_Config_CMD, CMD);
0x0942	0x2100    MOVS	R1, #0
0x0944	0x20DA    MOVS	R0, #218
0x0946	0xF7FFFFA3  BL	_OLED_write+0
;ssd1309.c, 77 :: 		OLED_write(0x12, CMD);
0x094A	0x2100    MOVS	R1, #0
0x094C	0x2012    MOVS	R0, #18
0x094E	0xF7FFFF9F  BL	_OLED_write+0
;ssd1309.c, 79 :: 		OLED_write(Set_Contrast_Control_CMD, CMD);
0x0952	0x2100    MOVS	R1, #0
0x0954	0x2081    MOVS	R0, #129
0x0956	0xF7FFFF9B  BL	_OLED_write+0
;ssd1309.c, 80 :: 		OLED_write(0xCF, CMD);
0x095A	0x2100    MOVS	R1, #0
0x095C	0x20CF    MOVS	R0, #207
0x095E	0xF7FFFF97  BL	_OLED_write+0
;ssd1309.c, 82 :: 		OLED_write(Set_Pre_charge_Period_CMD, CMD);
0x0962	0x2100    MOVS	R1, #0
0x0964	0x20D9    MOVS	R0, #217
0x0966	0xF7FFFF93  BL	_OLED_write+0
;ssd1309.c, 83 :: 		OLED_write(0xF1, CMD);
0x096A	0x2100    MOVS	R1, #0
0x096C	0x20F1    MOVS	R0, #241
0x096E	0xF7FFFF8F  BL	_OLED_write+0
;ssd1309.c, 85 :: 		OLED_write(Set_VCOMH_Level_CMD, CMD);
0x0972	0x2100    MOVS	R1, #0
0x0974	0x20DB    MOVS	R0, #219
0x0976	0xF7FFFF8B  BL	_OLED_write+0
;ssd1309.c, 86 :: 		OLED_write(0x40, CMD);
0x097A	0x2100    MOVS	R1, #0
0x097C	0x2040    MOVS	R0, #64
0x097E	0xF7FFFF87  BL	_OLED_write+0
;ssd1309.c, 88 :: 		OLED_write((Set_Entire_Display_ON_CMD | Normal_Display), CMD);
0x0982	0x2100    MOVS	R1, #0
0x0984	0x20A4    MOVS	R0, #164
0x0986	0xF7FFFF83  BL	_OLED_write+0
;ssd1309.c, 90 :: 		OLED_write((Set_Normal_or_Inverse_Display_CMD | Non_Inverted_Display), CMD);
0x098A	0x2100    MOVS	R1, #0
0x098C	0x20A6    MOVS	R0, #166
0x098E	0xF7FFFF7F  BL	_OLED_write+0
;ssd1309.c, 92 :: 		OLED_write((Set_Display_ON_or_OFF_CMD + Display_ON) , CMD);
0x0992	0x2100    MOVS	R1, #0
0x0994	0x20AF    MOVS	R0, #175
0x0996	0xF7FFFF7B  BL	_OLED_write+0
;ssd1309.c, 94 :: 		OLED_gotoxy(0, 0);
0x099A	0x2100    MOVS	R1, #0
0x099C	0x2000    MOVS	R0, #0
0x099E	0xF7FFFE7B  BL	_OLED_gotoxy+0
;ssd1309.c, 96 :: 		OLED_clear_buffer();
0x09A2	0xF7FFFE6B  BL	_OLED_clear_buffer+0
;ssd1309.c, 97 :: 		OLED_clear_screen();
0x09A6	0xF7FFFE97  BL	_OLED_clear_screen+0
;ssd1309.c, 98 :: 		}
L_end_OLED_init:
0x09AA	0xF8DDE000  LDR	LR, [SP, #0]
0x09AE	0xB001    ADD	SP, SP, #4
0x09B0	0x4770    BX	LR
; end of _OLED_init
_setup_GPIOs:
;ssd1309.c, 5 :: 		void setup_GPIOs()
0x07F8	0xB081    SUB	SP, SP, #4
0x07FA	0xF8CDE000  STR	LR, [SP, #0]
;ssd1309.c, 7 :: 		GPIO_Clk_Enable(&GPIOA_BASE);
0x07FE	0x481D    LDR	R0, [PC, #116]
0x0800	0xF7FFFEF6  BL	_GPIO_Clk_Enable+0
;ssd1309.c, 10 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
0x0804	0x4A1C    LDR	R2, [PC, #112]
;ssd1309.c, 9 :: 		GPIO_Config(&GPIOA_BASE, (_GPIO_PINMASK_4 | _GPIO_PINMASK_10),
0x0806	0xF2404110  MOVW	R1, #1040
0x080A	0x481A    LDR	R0, [PC, #104]
;ssd1309.c, 10 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
0x080C	0xF7FFFDF6  BL	_GPIO_Config+0
;ssd1309.c, 14 :: 		(_GPIO_CFG_MODE_ALT_FUNCTION | _GPIO_CFG_OTYPE_PP | _GPIO_CFG_SPEED_MAX));
0x0810	0x4A1A    LDR	R2, [PC, #104]
;ssd1309.c, 13 :: 		(_GPIO_PINMASK_5 | _GPIO_PINMASK_7),
0x0812	0xF24001A0  MOVW	R1, #160
;ssd1309.c, 12 :: 		GPIO_Config(&GPIOA_BASE,
0x0816	0x4817    LDR	R0, [PC, #92]
;ssd1309.c, 14 :: 		(_GPIO_CFG_MODE_ALT_FUNCTION | _GPIO_CFG_OTYPE_PP | _GPIO_CFG_SPEED_MAX));
0x0818	0xF7FFFDF0  BL	_GPIO_Config+0
;ssd1309.c, 18 :: 		(_GPIO_CFG_MODE_ALT_FUNCTION | _GPIO_CFG_OTYPE_OD | _GPIO_CFG_SPEED_MAX));
0x081C	0x4A18    LDR	R2, [PC, #96]
;ssd1309.c, 17 :: 		_GPIO_PINMASK_6,
0x081E	0xF2400140  MOVW	R1, #64
;ssd1309.c, 16 :: 		GPIO_Config(&GPIOA_BASE,
0x0822	0x4814    LDR	R0, [PC, #80]
;ssd1309.c, 18 :: 		(_GPIO_CFG_MODE_ALT_FUNCTION | _GPIO_CFG_OTYPE_OD | _GPIO_CFG_SPEED_MAX));
0x0824	0xF7FFFDEA  BL	_GPIO_Config+0
;ssd1309.c, 20 :: 		GPIO_Clk_Enable(&GPIOB_BASE);
0x0828	0x4816    LDR	R0, [PC, #88]
0x082A	0xF7FFFEE1  BL	_GPIO_Clk_Enable+0
;ssd1309.c, 23 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
0x082E	0x4A12    LDR	R2, [PC, #72]
;ssd1309.c, 22 :: 		GPIO_Config(&GPIOB_BASE, _GPIO_PINMASK_7,
0x0830	0xF2400180  MOVW	R1, #128
0x0834	0x4813    LDR	R0, [PC, #76]
;ssd1309.c, 23 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
0x0836	0xF7FFFDE1  BL	_GPIO_Config+0
;ssd1309.c, 25 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_SPI1_PA567);
0x083A	0x4813    LDR	R0, [PC, #76]
0x083C	0xF7FFFD1E  BL	_GPIO_Alternate_Function_Enable+0
;ssd1309.c, 27 :: 		RCC_APB2ENRbits.SPI1EN = HIGH;
0x0840	0x2101    MOVS	R1, #1
0x0842	0xB249    SXTB	R1, R1
0x0844	0x4811    LDR	R0, [PC, #68]
0x0846	0x6001    STR	R1, [R0, #0]
;ssd1309.c, 32 :: 		&_GPIO_MODULE_SPI1_PA567);
0x0848	0x4A0F    LDR	R2, [PC, #60]
;ssd1309.c, 31 :: 		| _SPI_SS_ENABLE | _SPI_SSM_ENABLE | _SPI_SSI_0),
0x084A	0xF2402104  MOVW	R1, #516
;ssd1309.c, 29 :: 		SPI1_Init_Advanced(_SPI_FPCLK_DIV8, (_SPI_8_BIT | _SPI_MASTER | _SPI_CLK_IDLE_LOW
0x084E	0x2002    MOVS	R0, #2
;ssd1309.c, 32 :: 		&_GPIO_MODULE_SPI1_PA567);
0x0850	0xF7FFFDAA  BL	_SPI1_Init_Advanced+0
;ssd1309.c, 33 :: 		delay_ms(100);
0x0854	0xF644777F  MOVW	R7, #20351
0x0858	0xF2C00712  MOVT	R7, #18
0x085C	0xBF00    NOP
0x085E	0xBF00    NOP
L_setup_GPIOs0:
0x0860	0x1E7F    SUBS	R7, R7, #1
0x0862	0xD1FD    BNE	L_setup_GPIOs0
0x0864	0xBF00    NOP
0x0866	0xBF00    NOP
0x0868	0xBF00    NOP
;ssd1309.c, 34 :: 		}
L_end_setup_GPIOs:
0x086A	0xF8DDE000  LDR	LR, [SP, #0]
0x086E	0xB001    ADD	SP, SP, #4
0x0870	0x4770    BX	LR
0x0872	0xBF00    NOP
0x0874	0x08004001  	GPIOA_BASE+0
0x0878	0x00140008  	#524308
0x087C	0x00180008  	#524312
0x0880	0x00280008  	#524328
0x0884	0x0C004001  	GPIOB_BASE+0
0x0888	0x2B700000  	__GPIO_MODULE_SPI1_PA567+0
0x088C	0x03304242  	RCC_APB2ENRbits+0
; end of _setup_GPIOs
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x05F0	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x05F2	0x4919    LDR	R1, [PC, #100]
0x05F4	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x05F8	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x05FA	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x05FC	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x05FE	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0600	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0602	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0604	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0606	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0608	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x060A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x060C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x060E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0610	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0612	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0614	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0616	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x061A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x061C	0x490F    LDR	R1, [PC, #60]
0x061E	0x4288    CMP	R0, R1
0x0620	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0622	0x490F    LDR	R1, [PC, #60]
0x0624	0x4288    CMP	R0, R1
0x0626	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0628	0x490E    LDR	R1, [PC, #56]
0x062A	0x4288    CMP	R0, R1
0x062C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x062E	0x490E    LDR	R1, [PC, #56]
0x0630	0x4288    CMP	R0, R1
0x0632	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0634	0x490D    LDR	R1, [PC, #52]
0x0636	0x4288    CMP	R0, R1
0x0638	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x063A	0x490D    LDR	R1, [PC, #52]
0x063C	0x4288    CMP	R0, R1
0x063E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0640	0x490C    LDR	R1, [PC, #48]
0x0642	0x4288    CMP	R0, R1
0x0644	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0646	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0648	0x490B    LDR	R1, [PC, #44]
0x064A	0x6809    LDR	R1, [R1, #0]
0x064C	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0650	0x4909    LDR	R1, [PC, #36]
0x0652	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0654	0xB001    ADD	SP, SP, #4
0x0656	0x4770    BX	LR
0x0658	0xFC00FFFF  	#-1024
0x065C	0x08004001  	#1073809408
0x0660	0x0C004001  	#1073810432
0x0664	0x10004001  	#1073811456
0x0668	0x14004001  	#1073812480
0x066C	0x18004001  	#1073813504
0x0670	0x1C004001  	#1073814528
0x0674	0x20004001  	#1073815552
0x0678	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x03FC	0xB081    SUB	SP, SP, #4
0x03FE	0xF8CDE000  STR	LR, [SP, #0]
0x0402	0xB28C    UXTH	R4, R1
0x0404	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x0406	0x4B77    LDR	R3, [PC, #476]
0x0408	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x040C	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x040E	0x4618    MOV	R0, R3
0x0410	0xF000F8EE  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0414	0xF1B40FFF  CMP	R4, #255
0x0418	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x041A	0x4B73    LDR	R3, [PC, #460]
0x041C	0x429D    CMP	R5, R3
0x041E	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0420	0xF04F3333  MOV	R3, #858993459
0x0424	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0426	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0428	0x2D42    CMP	R5, #66
0x042A	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x042C	0xF04F3344  MOV	R3, #1145324612
0x0430	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0432	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0434	0xF64F73FF  MOVW	R3, #65535
0x0438	0x429C    CMP	R4, R3
0x043A	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x043C	0x4B6A    LDR	R3, [PC, #424]
0x043E	0x429D    CMP	R5, R3
0x0440	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0442	0xF04F3333  MOV	R3, #858993459
0x0446	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0448	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x044A	0xF04F3333  MOV	R3, #858993459
0x044E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0450	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0452	0x2D42    CMP	R5, #66
0x0454	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0456	0xF04F3344  MOV	R3, #1145324612
0x045A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x045C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x045E	0xF04F3344  MOV	R3, #1145324612
0x0462	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0464	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0466	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0468	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x046A	0xF0050301  AND	R3, R5, #1
0x046E	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0470	0x2100    MOVS	R1, #0
0x0472	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0474	0xF0050302  AND	R3, R5, #2
0x0478	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x047A	0xF40573C0  AND	R3, R5, #384
0x047E	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0480	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0482	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0484	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0486	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0488	0xF0050304  AND	R3, R5, #4
0x048C	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x048E	0xF0050320  AND	R3, R5, #32
0x0492	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0494	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0496	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0498	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x049A	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x049C	0xF0050308  AND	R3, R5, #8
0x04A0	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x04A2	0xF0050320  AND	R3, R5, #32
0x04A6	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x04A8	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x04AA	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x04AC	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x04AE	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x04B0	0x4B4E    LDR	R3, [PC, #312]
0x04B2	0xEA050303  AND	R3, R5, R3, LSL #0
0x04B6	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x04B8	0x2003    MOVS	R0, #3
0x04BA	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x04BC	0xF4057300  AND	R3, R5, #512
0x04C0	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x04C2	0x2002    MOVS	R0, #2
0x04C4	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x04C6	0xF4056380  AND	R3, R5, #1024
0x04CA	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x04CC	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x04CE	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x04D0	0xF005030C  AND	R3, R5, #12
0x04D4	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x04D6	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x04D8	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x04DA	0xF00403FF  AND	R3, R4, #255
0x04DE	0xB29B    UXTH	R3, R3
0x04E0	0x2B00    CMP	R3, #0
0x04E2	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x04E4	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x04E6	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x04E8	0xFA1FF884  UXTH	R8, R4
0x04EC	0x4632    MOV	R2, R6
0x04EE	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x04F0	0x2808    CMP	R0, #8
0x04F2	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x04F4	0xF04F0301  MOV	R3, #1
0x04F8	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x04FC	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0500	0x42A3    CMP	R3, R4
0x0502	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0504	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x0506	0xF04F030F  MOV	R3, #15
0x050A	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x050C	0x43DB    MVN	R3, R3
0x050E	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0512	0xFA01F305  LSL	R3, R1, R5
0x0516	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x051A	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x051C	0xF4067381  AND	R3, R6, #258
0x0520	0xF5B37F81  CMP	R3, #258
0x0524	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0526	0xF2020414  ADDW	R4, R2, #20
0x052A	0xF04F0301  MOV	R3, #1
0x052E	0x4083    LSLS	R3, R0
0x0530	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0532	0xF0060382  AND	R3, R6, #130
0x0536	0x2B82    CMP	R3, #130
0x0538	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x053A	0xF2020410  ADDW	R4, R2, #16
0x053E	0xF04F0301  MOV	R3, #1
0x0542	0x4083    LSLS	R3, R0
0x0544	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0546	0x462F    MOV	R7, R5
0x0548	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x054A	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x054C	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x054E	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0550	0xFA1FF088  UXTH	R0, R8
0x0554	0x460F    MOV	R7, R1
0x0556	0x4631    MOV	R1, R6
0x0558	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x055A	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x055C	0x460F    MOV	R7, R1
0x055E	0x4629    MOV	R1, R5
0x0560	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0562	0xF1B00FFF  CMP	R0, #255
0x0566	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0568	0x1D33    ADDS	R3, R6, #4
0x056A	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x056E	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0570	0x2A08    CMP	R2, #8
0x0572	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0574	0xF2020408  ADDW	R4, R2, #8
0x0578	0xF04F0301  MOV	R3, #1
0x057C	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0580	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0584	0x42A3    CMP	R3, R4
0x0586	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0588	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x058A	0xF04F030F  MOV	R3, #15
0x058E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0590	0x43DB    MVN	R3, R3
0x0592	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0596	0xFA07F305  LSL	R3, R7, R5
0x059A	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x059E	0xF4017381  AND	R3, R1, #258
0x05A2	0xF5B37F81  CMP	R3, #258
0x05A6	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x05A8	0xF2060514  ADDW	R5, R6, #20
0x05AC	0xF2020408  ADDW	R4, R2, #8
0x05B0	0xF04F0301  MOV	R3, #1
0x05B4	0x40A3    LSLS	R3, R4
0x05B6	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x05B8	0xF0010382  AND	R3, R1, #130
0x05BC	0x2B82    CMP	R3, #130
0x05BE	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x05C0	0xF2060510  ADDW	R5, R6, #16
0x05C4	0xF2020408  ADDW	R4, R2, #8
0x05C8	0xF04F0301  MOV	R3, #1
0x05CC	0x40A3    LSLS	R3, R4
0x05CE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x05D0	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x05D2	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x05D4	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x05D6	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x05D8	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x05DC	0xF8DDE000  LDR	LR, [SP, #0]
0x05E0	0xB001    ADD	SP, SP, #4
0x05E2	0x4770    BX	LR
0x05E4	0xFC00FFFF  	#-1024
0x05E8	0x00140008  	#524308
0x05EC	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x027C	0xB081    SUB	SP, SP, #4
0x027E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0282	0x2201    MOVS	R2, #1
0x0284	0xB252    SXTB	R2, R2
0x0286	0x493E    LDR	R1, [PC, #248]
0x0288	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x028A	0xF2000168  ADDW	R1, R0, #104
0x028E	0x680B    LDR	R3, [R1, #0]
0x0290	0xF06F6100  MVN	R1, #134217728
0x0294	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x0298	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x029A	0xF0036100  AND	R1, R3, #134217728
0x029E	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x02A0	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x02A2	0xF0024100  AND	R1, R2, #-2147483648
0x02A6	0xF1B14F00  CMP	R1, #-2147483648
0x02AA	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x02AC	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x02AE	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x02B0	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x02B2	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x02B4	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x02B6	0xF4042170  AND	R1, R4, #983040
0x02BA	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x02BC	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x02BE	0xF64F71FF  MOVW	R1, #65535
0x02C2	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x02C6	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x02C8	0xF4041140  AND	R1, R4, #3145728
0x02CC	0xF5B11F40  CMP	R1, #3145728
0x02D0	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x02D2	0xF06F6170  MVN	R1, #251658240
0x02D6	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x02DA	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x02DC	0x492A    LDR	R1, [PC, #168]
0x02DE	0x680A    LDR	R2, [R1, #0]
0x02E0	0xF06F6170  MVN	R1, #251658240
0x02E4	0x400A    ANDS	R2, R1
0x02E6	0x4928    LDR	R1, [PC, #160]
0x02E8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x02EA	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x02EC	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x02EE	0xF4041180  AND	R1, R4, #1048576
0x02F2	0xF5B11F80  CMP	R1, #1048576
0x02F6	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x02F8	0xF04F0103  MOV	R1, #3
0x02FC	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x02FE	0x43C9    MVN	R1, R1
0x0300	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0304	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0308	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x030A	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x030C	0x0D61    LSRS	R1, R4, #21
0x030E	0x0109    LSLS	R1, R1, #4
0x0310	0xFA05F101  LSL	R1, R5, R1
0x0314	0x43C9    MVN	R1, R1
0x0316	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0318	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x031C	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x031E	0x0D61    LSRS	R1, R4, #21
0x0320	0x0109    LSLS	R1, R1, #4
0x0322	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0326	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0328	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x032A	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x032E	0xF1B14F00  CMP	R1, #-2147483648
0x0332	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0334	0x4913    LDR	R1, [PC, #76]
0x0336	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0338	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x033A	0x4913    LDR	R1, [PC, #76]
0x033C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x033E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0342	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0344	0xEA4F018A  LSL	R1, R10, #2
0x0348	0xEB090101  ADD	R1, R9, R1, LSL #0
0x034C	0x6809    LDR	R1, [R1, #0]
0x034E	0xF1B13FFF  CMP	R1, #-1
0x0352	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0354	0xF1090134  ADD	R1, R9, #52
0x0358	0xEA4F038A  LSL	R3, R10, #2
0x035C	0x18C9    ADDS	R1, R1, R3
0x035E	0x6809    LDR	R1, [R1, #0]
0x0360	0x460A    MOV	R2, R1
0x0362	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0366	0x6809    LDR	R1, [R1, #0]
0x0368	0x4608    MOV	R0, R1
0x036A	0x4611    MOV	R1, R2
0x036C	0xF7FFFF02  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0370	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0374	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0376	0xF8DDE000  LDR	LR, [SP, #0]
0x037A	0xB001    ADD	SP, SP, #4
0x037C	0x4770    BX	LR
0x037E	0xBF00    NOP
0x0380	0x03004242  	RCC_APB2ENRbits+0
0x0384	0x001C4001  	AFIO_MAPR2+0
0x0388	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0174	0xB083    SUB	SP, SP, #12
0x0176	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x017A	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x017E	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0180	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x0182	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x0186	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0188	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x018A	0x4A19    LDR	R2, [PC, #100]
0x018C	0x9202    STR	R2, [SP, #8]
0x018E	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0190	0x4A18    LDR	R2, [PC, #96]
0x0192	0x9202    STR	R2, [SP, #8]
0x0194	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0196	0x4A18    LDR	R2, [PC, #96]
0x0198	0x9202    STR	R2, [SP, #8]
0x019A	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x019C	0x4A17    LDR	R2, [PC, #92]
0x019E	0x9202    STR	R2, [SP, #8]
0x01A0	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x01A2	0x4A17    LDR	R2, [PC, #92]
0x01A4	0x9202    STR	R2, [SP, #8]
0x01A6	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x01A8	0x4A16    LDR	R2, [PC, #88]
0x01AA	0x9202    STR	R2, [SP, #8]
0x01AC	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x01AE	0x4A16    LDR	R2, [PC, #88]
0x01B0	0x9202    STR	R2, [SP, #8]
0x01B2	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x01B4	0x2800    CMP	R0, #0
0x01B6	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01B8	0x2801    CMP	R0, #1
0x01BA	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01BC	0x2802    CMP	R0, #2
0x01BE	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01C0	0x2803    CMP	R0, #3
0x01C2	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01C4	0x2804    CMP	R0, #4
0x01C6	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01C8	0x2805    CMP	R0, #5
0x01CA	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01CC	0x2806    CMP	R0, #6
0x01CE	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01D0	0x2201    MOVS	R2, #1
0x01D2	0xB212    SXTH	R2, R2
0x01D4	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01D6	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01DA	0x9802    LDR	R0, [SP, #8]
0x01DC	0x460A    MOV	R2, R1
0x01DE	0xF8BD1004  LDRH	R1, [SP, #4]
0x01E2	0xF000F90B  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x01E6	0xF8DDE000  LDR	LR, [SP, #0]
0x01EA	0xB003    ADD	SP, SP, #12
0x01EC	0x4770    BX	LR
0x01EE	0xBF00    NOP
0x01F0	0x08004001  	#1073809408
0x01F4	0x0C004001  	#1073810432
0x01F8	0x10004001  	#1073811456
0x01FC	0x14004001  	#1073812480
0x0200	0x18004001  	#1073813504
0x0204	0x1C004001  	#1073814528
0x0208	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_SPI1_Init_Advanced:
;__Lib_SPI_123.c, 82 :: 		
; module start address is: 8 (R2)
0x03A8	0xB083    SUB	SP, SP, #12
0x03AA	0xF8CDE000  STR	LR, [SP, #0]
0x03AE	0xF88D0004  STRB	R0, [SP, #4]
0x03B2	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 83 :: 		
0x03B4	0x4C0B    LDR	R4, [PC, #44]
0x03B6	0x4B0C    LDR	R3, [PC, #48]
0x03B8	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 84 :: 		
0x03BA	0x4C0C    LDR	R4, [PC, #48]
0x03BC	0x4B0C    LDR	R3, [PC, #48]
0x03BE	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 86 :: 		
0x03C0	0x2401    MOVS	R4, #1
0x03C2	0xB264    SXTB	R4, R4
0x03C4	0x4B0B    LDR	R3, [PC, #44]
0x03C6	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 87 :: 		
0x03C8	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x03CA	0xF7FFFF57  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 89 :: 		
0x03CE	0x9A02    LDR	R2, [SP, #8]
0x03D0	0xF89D1004  LDRB	R1, [SP, #4]
0x03D4	0x4808    LDR	R0, [PC, #32]
0x03D6	0xF7FFFEAB  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 90 :: 		
L_end_SPI1_Init_Advanced:
0x03DA	0xF8DDE000  LDR	LR, [SP, #0]
0x03DE	0xB003    ADD	SP, SP, #12
0x03E0	0x4770    BX	LR
0x03E2	0xBF00    NOP
0x03E4	0xFFFFFFFF  	_SPI1_Read+0
0x03E8	0x04202000  	_SPI_Rd_Ptr+0
0x03EC	0x038D0000  	_SPI1_Write+0
0x03F0	0x04242000  	_SPI_Wr_Ptr+0
0x03F4	0x03304242  	RCC_APB2ENR+0
0x03F8	0x30004001  	SPI1_CR1+0
; end of _SPI1_Init_Advanced
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x0130	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x0132	0x2300    MOVS	R3, #0
0x0134	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x0136	0x00CB    LSLS	R3, R1, #3
0x0138	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x013A	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x013E	0x6804    LDR	R4, [R0, #0]
0x0140	0xB29B    UXTH	R3, R3
0x0142	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0146	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x0148	0x1D05    ADDS	R5, R0, #4
0x014A	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x014C	0x461C    MOV	R4, R3
0x014E	0x682B    LDR	R3, [R5, #0]
0x0150	0xF3640382  BFI	R3, R4, #2, #1
0x0154	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x0156	0xF200051C  ADDW	R5, R0, #28
0x015A	0x2400    MOVS	R4, #0
0x015C	0x682B    LDR	R3, [R5, #0]
0x015E	0xF36423CB  BFI	R3, R4, #11, #1
0x0162	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x0164	0x2401    MOVS	R4, #1
0x0166	0x6803    LDR	R3, [R0, #0]
0x0168	0xF3641386  BFI	R3, R4, #6, #1
0x016C	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x016E	0xB001    ADD	SP, SP, #4
0x0170	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
_OLED_reset_sequence:
;ssd1309.c, 101 :: 		void OLED_reset_sequence()
;ssd1309.c, 103 :: 		delay_ms(40);
0x07B0	0xF24527FF  MOVW	R7, #21247
0x07B4	0xF2C00707  MOVT	R7, #7
L_OLED_reset_sequence2:
0x07B8	0x1E7F    SUBS	R7, R7, #1
0x07BA	0xD1FD    BNE	L_OLED_reset_sequence2
0x07BC	0xBF00    NOP
0x07BE	0xBF00    NOP
0x07C0	0xBF00    NOP
0x07C2	0xBF00    NOP
0x07C4	0xBF00    NOP
;ssd1309.c, 104 :: 		RST = LOW;
0x07C6	0x2100    MOVS	R1, #0
0x07C8	0xB249    SXTB	R1, R1
0x07CA	0x4809    LDR	R0, [PC, #36]
0x07CC	0x6001    STR	R1, [R0, #0]
;ssd1309.c, 105 :: 		delay_ms(40);
0x07CE	0xF24527FF  MOVW	R7, #21247
0x07D2	0xF2C00707  MOVT	R7, #7
0x07D6	0xBF00    NOP
0x07D8	0xBF00    NOP
L_OLED_reset_sequence4:
0x07DA	0x1E7F    SUBS	R7, R7, #1
0x07DC	0xD1FD    BNE	L_OLED_reset_sequence4
0x07DE	0xBF00    NOP
0x07E0	0xBF00    NOP
0x07E2	0xBF00    NOP
;ssd1309.c, 106 :: 		RST = HIGH;
0x07E4	0x2101    MOVS	R1, #1
0x07E6	0xB249    SXTB	R1, R1
0x07E8	0x4801    LDR	R0, [PC, #4]
0x07EA	0x6001    STR	R1, [R0, #0]
;ssd1309.c, 107 :: 		}
L_end_OLED_reset_sequence:
0x07EC	0x4770    BX	LR
0x07EE	0xBF00    NOP
0x07F0	0x819C4221  	GPIOB_ODRbits+0
; end of _OLED_reset_sequence
_OLED_write:
;ssd1309.c, 110 :: 		void OLED_write(unsigned char value, unsigned char type)
; type start address is: 4 (R1)
; value start address is: 0 (R0)
0x0890	0xB081    SUB	SP, SP, #4
0x0892	0xF8CDE000  STR	LR, [SP, #0]
; type end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
; type start address is: 4 (R1)
;ssd1309.c, 112 :: 		DC = (type & 0x01);
0x0896	0xF0010301  AND	R3, R1, #1
0x089A	0xB2DB    UXTB	R3, R3
; type end address is: 4 (R1)
0x089C	0x4A07    LDR	R2, [PC, #28]
0x089E	0x6013    STR	R3, [R2, #0]
;ssd1309.c, 113 :: 		CS = LOW;
0x08A0	0x2300    MOVS	R3, #0
0x08A2	0xB25B    SXTB	R3, R3
0x08A4	0x4A06    LDR	R2, [PC, #24]
0x08A6	0x6013    STR	R3, [R2, #0]
;ssd1309.c, 114 :: 		SPI1_Write(value);
; value end address is: 0 (R0)
0x08A8	0xF7FFFD70  BL	_SPI1_Write+0
;ssd1309.c, 115 :: 		CS = HIGH;
0x08AC	0x2301    MOVS	R3, #1
0x08AE	0xB25B    SXTB	R3, R3
0x08B0	0x4A03    LDR	R2, [PC, #12]
0x08B2	0x6013    STR	R3, [R2, #0]
;ssd1309.c, 116 :: 		}
L_end_OLED_write:
0x08B4	0xF8DDE000  LDR	LR, [SP, #0]
0x08B8	0xB001    ADD	SP, SP, #4
0x08BA	0x4770    BX	LR
0x08BC	0x01A84221  	GPIOA_ODRbits+0
0x08C0	0x01904221  	GPIOA_ODRbits+0
; end of _OLED_write
_SPI1_Write:
;__Lib_SPI_123.c, 78 :: 		
; data_out start address is: 0 (R0)
0x038C	0xB081    SUB	SP, SP, #4
0x038E	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 79 :: 		
0x0392	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0394	0x4803    LDR	R0, [PC, #12]
0x0396	0xF7FFFF39  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 80 :: 		
L_end_SPI1_Write:
0x039A	0xF8DDE000  LDR	LR, [SP, #0]
0x039E	0xB001    ADD	SP, SP, #4
0x03A0	0x4770    BX	LR
0x03A2	0xBF00    NOP
0x03A4	0x30004001  	SPI1_CR1+0
; end of _SPI1_Write
__Lib_SPI_123_SPIx_Read:
;__Lib_SPI_123.c, 67 :: 		
; data_out start address is: 4 (R1)
; base start address is: 0 (R0)
0x020C	0xB081    SUB	SP, SP, #4
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; data_out start address is: 4 (R1)
;__Lib_SPI_123.c, 68 :: 		
0x020E	0xF200020C  ADDW	R2, R0, #12
0x0212	0x6011    STR	R1, [R2, #0]
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 69 :: 		
L___Lib_SPI_123_SPIx_Read0:
; base start address is: 0 (R0)
0x0214	0xF2000208  ADDW	R2, R0, #8
0x0218	0x6813    LDR	R3, [R2, #0]
0x021A	0xF3C30200  UBFX	R2, R3, #0, #1
0x021E	0xB902    CBNZ	R2, L___Lib_SPI_123_SPIx_Read1
;__Lib_SPI_123.c, 70 :: 		
0x0220	0xE7F8    B	L___Lib_SPI_123_SPIx_Read0
L___Lib_SPI_123_SPIx_Read1:
;__Lib_SPI_123.c, 71 :: 		
0x0222	0xF200020C  ADDW	R2, R0, #12
; base end address is: 0 (R0)
0x0226	0x6812    LDR	R2, [R2, #0]
0x0228	0xB290    UXTH	R0, R2
;__Lib_SPI_123.c, 72 :: 		
L_end_SPIx_Read:
0x022A	0xB001    ADD	SP, SP, #4
0x022C	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Read
_OLED_gotoxy:
;ssd1309.c, 119 :: 		void OLED_gotoxy(unsigned char x_pos, unsigned char y_pos)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0698	0xB081    SUB	SP, SP, #4
0x069A	0xF8CDE000  STR	LR, [SP, #0]
0x069E	0xB2C4    UXTB	R4, R0
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 16 (R4)
; y_pos start address is: 4 (R1)
;ssd1309.c, 121 :: 		OLED_write((Set_Page_Start_Address_CMD + y_pos), CMD);
0x06A0	0xF20102B0  ADDW	R2, R1, #176
; y_pos end address is: 4 (R1)
0x06A4	0x2100    MOVS	R1, #0
0x06A6	0xB2D0    UXTB	R0, R2
0x06A8	0xF000F8F2  BL	_OLED_write+0
;ssd1309.c, 122 :: 		OLED_write(((x_pos & 0x0F) | Set_Lower_Column_Start_Address_CMD), CMD);
0x06AC	0xF004020F  AND	R2, R4, #15
0x06B0	0x2100    MOVS	R1, #0
0x06B2	0xB2D0    UXTB	R0, R2
0x06B4	0xF000F8EC  BL	_OLED_write+0
;ssd1309.c, 123 :: 		OLED_write((((x_pos & 0xF0) >> 0x04) | Set_Higher_Column_Start_Address_CMD), CMD);
0x06B8	0xF00402F0  AND	R2, R4, #240
0x06BC	0xB2D2    UXTB	R2, R2
; x_pos end address is: 16 (R4)
0x06BE	0x0912    LSRS	R2, R2, #4
0x06C0	0xB2D2    UXTB	R2, R2
0x06C2	0xF0420210  ORR	R2, R2, #16
0x06C6	0x2100    MOVS	R1, #0
0x06C8	0xB2D0    UXTB	R0, R2
0x06CA	0xF000F8E1  BL	_OLED_write+0
;ssd1309.c, 124 :: 		}
L_end_OLED_gotoxy:
0x06CE	0xF8DDE000  LDR	LR, [SP, #0]
0x06D2	0xB001    ADD	SP, SP, #4
0x06D4	0x4770    BX	LR
; end of _OLED_gotoxy
_OLED_clear_buffer:
;ssd1309.c, 152 :: 		void OLED_clear_buffer()
;ssd1309.c, 154 :: 		unsigned int s = 0x00;
;ssd1309.c, 156 :: 		for(s = 0; s < buffer_size; s++)
; s start address is: 8 (R2)
0x067C	0x2200    MOVS	R2, #0
; s end address is: 8 (R2)
L_OLED_clear_buffer12:
; s start address is: 8 (R2)
0x067E	0xF5B26F80  CMP	R2, #1024
0x0682	0xD206    BCS	L_OLED_clear_buffer13
;ssd1309.c, 158 :: 		buffer[s] = 0x00;
0x0684	0x4803    LDR	R0, [PC, #12]
0x0686	0x1881    ADDS	R1, R0, R2
0x0688	0x2000    MOVS	R0, #0
0x068A	0x7008    STRB	R0, [R1, #0]
;ssd1309.c, 156 :: 		for(s = 0; s < buffer_size; s++)
0x068C	0x1C52    ADDS	R2, R2, #1
0x068E	0xB292    UXTH	R2, R2
;ssd1309.c, 159 :: 		}
; s end address is: 8 (R2)
0x0690	0xE7F5    B	L_OLED_clear_buffer12
L_OLED_clear_buffer13:
;ssd1309.c, 160 :: 		}
L_end_OLED_clear_buffer:
0x0692	0x4770    BX	LR
0x0694	0x001D2000  	_buffer+0
; end of _OLED_clear_buffer
_OLED_clear_screen:
;ssd1309.c, 146 :: 		void OLED_clear_screen()
0x06D8	0xB081    SUB	SP, SP, #4
0x06DA	0xF8CDE000  STR	LR, [SP, #0]
;ssd1309.c, 148 :: 		OLED_fill(0x00);
0x06DE	0x2000    MOVS	R0, #0
0x06E0	0xF7FFFDA6  BL	_OLED_fill+0
;ssd1309.c, 149 :: 		}
L_end_OLED_clear_screen:
0x06E4	0xF8DDE000  LDR	LR, [SP, #0]
0x06E8	0xB001    ADD	SP, SP, #4
0x06EA	0x4770    BX	LR
; end of _OLED_clear_screen
_OLED_fill:
;ssd1309.c, 127 :: 		void OLED_fill(unsigned char bmp_data)
; bmp_data start address is: 0 (R0)
0x0230	0xB081    SUB	SP, SP, #4
0x0232	0xF8CDE000  STR	LR, [SP, #0]
; bmp_data end address is: 0 (R0)
; bmp_data start address is: 0 (R0)
;ssd1309.c, 129 :: 		unsigned char x_pos = 0x00;
;ssd1309.c, 130 :: 		unsigned char page = 0x00;
;ssd1309.c, 132 :: 		for(page = y_min; page < y_max; page++)
; page start address is: 20 (R5)
0x0236	0x2500    MOVS	R5, #0
; bmp_data end address is: 0 (R0)
; page end address is: 20 (R5)
0x0238	0xB2C4    UXTB	R4, R0
L_OLED_fill6:
; page start address is: 20 (R5)
; bmp_data start address is: 16 (R4)
0x023A	0x2D08    CMP	R5, #8
0x023C	0xD21A    BCS	L_OLED_fill7
;ssd1309.c, 134 :: 		OLED_write((Set_Page_Start_Address_CMD + page), CMD);
0x023E	0xF20501B0  ADDW	R1, R5, #176
0x0242	0xB2C8    UXTB	R0, R1
0x0244	0x2100    MOVS	R1, #0
0x0246	0xF000FB23  BL	_OLED_write+0
;ssd1309.c, 135 :: 		OLED_write(Set_Lower_Column_Start_Address_CMD, CMD);
0x024A	0x2100    MOVS	R1, #0
0x024C	0x2000    MOVS	R0, #0
0x024E	0xF000FB1F  BL	_OLED_write+0
;ssd1309.c, 136 :: 		OLED_write(Set_Higher_Column_Start_Address_CMD, CMD);
0x0252	0x2100    MOVS	R1, #0
0x0254	0x2010    MOVS	R0, #16
0x0256	0xF000FB1B  BL	_OLED_write+0
;ssd1309.c, 138 :: 		for(x_pos = x_min; x_pos < x_max; x_pos++)
; x_pos start address is: 24 (R6)
0x025A	0x2600    MOVS	R6, #0
; bmp_data end address is: 16 (R4)
; x_pos end address is: 24 (R6)
; page end address is: 20 (R5)
L_OLED_fill9:
; x_pos start address is: 24 (R6)
; bmp_data start address is: 16 (R4)
; page start address is: 20 (R5)
0x025C	0x2E80    CMP	R6, #128
0x025E	0xD206    BCS	L_OLED_fill10
;ssd1309.c, 140 :: 		OLED_write(bmp_data, DAT);
0x0260	0x2101    MOVS	R1, #1
0x0262	0xB2E0    UXTB	R0, R4
0x0264	0xF000FB14  BL	_OLED_write+0
;ssd1309.c, 138 :: 		for(x_pos = x_min; x_pos < x_max; x_pos++)
0x0268	0x1C76    ADDS	R6, R6, #1
0x026A	0xB2F6    UXTB	R6, R6
;ssd1309.c, 141 :: 		}
; x_pos end address is: 24 (R6)
0x026C	0xE7F6    B	L_OLED_fill9
L_OLED_fill10:
;ssd1309.c, 132 :: 		for(page = y_min; page < y_max; page++)
0x026E	0x1C6D    ADDS	R5, R5, #1
0x0270	0xB2ED    UXTB	R5, R5
;ssd1309.c, 142 :: 		}
; bmp_data end address is: 16 (R4)
; page end address is: 20 (R5)
0x0272	0xE7E2    B	L_OLED_fill6
L_OLED_fill7:
;ssd1309.c, 143 :: 		}
L_end_OLED_fill:
0x0274	0xF8DDE000  LDR	LR, [SP, #0]
0x0278	0xB001    ADD	SP, SP, #4
0x027A	0x4770    BX	LR
; end of _OLED_fill
_OLED_print_Image:
;ssd1309.c, 186 :: 		void OLED_print_Image(const unsigned char *bmp, unsigned char pixel)
; pixel start address is: 4 (R1)
; bmp start address is: 0 (R0)
0x1568	0xB081    SUB	SP, SP, #4
0x156A	0xF8CDE000  STR	LR, [SP, #0]
; pixel end address is: 4 (R1)
; bmp end address is: 0 (R0)
; bmp start address is: 0 (R0)
; pixel start address is: 4 (R1)
;ssd1309.c, 188 :: 		unsigned char x_pos = 0x00;
;ssd1309.c, 189 :: 		unsigned char page = 0x00;
;ssd1309.c, 191 :: 		if(pixel != OFF)
0x156E	0xB109    CBZ	R1, L_OLED_print_Image21
; pixel end address is: 4 (R1)
;ssd1309.c, 193 :: 		pixel = 0xFF;
; pixel start address is: 24 (R6)
0x1570	0x26FF    MOVS	R6, #255
;ssd1309.c, 194 :: 		}
; pixel end address is: 24 (R6)
0x1572	0xE000    B	L_OLED_print_Image22
L_OLED_print_Image21:
;ssd1309.c, 197 :: 		pixel = 0x00;
; pixel start address is: 24 (R6)
0x1574	0x2600    MOVS	R6, #0
; pixel end address is: 24 (R6)
;ssd1309.c, 198 :: 		}
L_OLED_print_Image22:
;ssd1309.c, 200 :: 		for(page = 0; page < y_max; page++)
; pixel start address is: 24 (R6)
; page start address is: 20 (R5)
0x1576	0x2500    MOVS	R5, #0
; bmp end address is: 0 (R0)
; pixel end address is: 24 (R6)
; page end address is: 20 (R5)
0x1578	0x4607    MOV	R7, R0
L_OLED_print_Image23:
; page start address is: 20 (R5)
; pixel start address is: 24 (R6)
; bmp start address is: 28 (R7)
0x157A	0x2D08    CMP	R5, #8
0x157C	0xD216    BCS	L_OLED_print_Image24
;ssd1309.c, 202 :: 		OLED_gotoxy(x_min, page);
0x157E	0xB2E9    UXTB	R1, R5
0x1580	0x2000    MOVS	R0, #0
0x1582	0xF7FFF889  BL	_OLED_gotoxy+0
;ssd1309.c, 203 :: 		for(x_pos = x_min; x_pos < x_max; x_pos++)
; x_pos start address is: 0 (R0)
0x1586	0x2000    MOVS	R0, #0
; pixel end address is: 24 (R6)
; x_pos end address is: 0 (R0)
; bmp end address is: 28 (R7)
; page end address is: 20 (R5)
0x1588	0xB2F4    UXTB	R4, R6
0x158A	0xB2C6    UXTB	R6, R0
L_OLED_print_Image26:
; x_pos start address is: 24 (R6)
; bmp start address is: 28 (R7)
; pixel start address is: 16 (R4)
; page start address is: 20 (R5)
0x158C	0x2E80    CMP	R6, #128
0x158E	0xD209    BCS	L_OLED_print_Image27
;ssd1309.c, 205 :: 		OLED_write((*bmp++ ^ pixel), DAT);
0x1590	0x783A    LDRB	R2, [R7, #0]
0x1592	0x4062    EORS	R2, R4
0x1594	0x2101    MOVS	R1, #1
0x1596	0xB2D0    UXTB	R0, R2
0x1598	0xF7FFF97A  BL	_OLED_write+0
0x159C	0x1C7F    ADDS	R7, R7, #1
;ssd1309.c, 203 :: 		for(x_pos = x_min; x_pos < x_max; x_pos++)
0x159E	0x1C76    ADDS	R6, R6, #1
0x15A0	0xB2F6    UXTB	R6, R6
;ssd1309.c, 206 :: 		}
; x_pos end address is: 24 (R6)
0x15A2	0xE7F3    B	L_OLED_print_Image26
L_OLED_print_Image27:
;ssd1309.c, 200 :: 		for(page = 0; page < y_max; page++)
0x15A4	0x1C6D    ADDS	R5, R5, #1
0x15A6	0xB2ED    UXTB	R5, R5
;ssd1309.c, 207 :: 		}
; pixel end address is: 16 (R4)
; bmp end address is: 28 (R7)
; page end address is: 20 (R5)
0x15A8	0xB2E6    UXTB	R6, R4
0x15AA	0xE7E6    B	L_OLED_print_Image23
L_OLED_print_Image24:
;ssd1309.c, 208 :: 		}
L_end_OLED_print_Image:
0x15AC	0xF8DDE000  LDR	LR, [SP, #0]
0x15B0	0xB001    ADD	SP, SP, #4
0x15B2	0x4770    BX	LR
; end of _OLED_print_Image
_Draw_Circle:
;ssd1309.c, 792 :: 		void Draw_Circle(signed int xc, signed int yc, signed int radius, unsigned char fill, unsigned char colour)
; radius start address is: 8 (R2)
0x1604	0xB086    SUB	SP, SP, #24
0x1606	0xF8CDE000  STR	LR, [SP, #0]
0x160A	0xF8AD0008  STRH	R0, [SP, #8]
0x160E	0xB210    SXTH	R0, R2
0x1610	0xF8AD100C  STRH	R1, [SP, #12]
0x1614	0xF88D3010  STRB	R3, [SP, #16]
; radius end address is: 8 (R2)
; radius start address is: 0 (R0)
0x1618	0xF89D4018  LDRB	R4, [SP, #24]
0x161C	0xF88D4018  STRB	R4, [SP, #24]
;ssd1309.c, 794 :: 		signed int a = 0x0000;
0x1620	0xF2400400  MOVW	R4, #0
0x1624	0xF8AD4004  STRH	R4, [SP, #4]
;ssd1309.c, 795 :: 		signed int b = 0x0000;
;ssd1309.c, 796 :: 		signed int P = 0x0000;
;ssd1309.c, 798 :: 		b = radius;
0x1628	0xF8AD0012  STRH	R0, [SP, #18]
;ssd1309.c, 799 :: 		P = (1 - b);
0x162C	0xF1C00401  RSB	R4, R0, #1
; radius end address is: 0 (R0)
0x1630	0xF8AD4014  STRH	R4, [SP, #20]
;ssd1309.c, 801 :: 		do
L_Draw_Circle154:
;ssd1309.c, 803 :: 		if(fill != 0)
0x1634	0xF89D4010  LDRB	R4, [SP, #16]
0x1638	0x2C00    CMP	R4, #0
0x163A	0xD068    BEQ	L_Draw_Circle157
;ssd1309.c, 805 :: 		Draw_Line((xc - a), (yc + b), (xc + a), (yc + b), colour);
0x163C	0xF89D8018  LDRB	R8, [SP, #24]
0x1640	0xF9BD5012  LDRSH	R5, [SP, #18]
0x1644	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1648	0x1967    ADDS	R7, R4, R5
0x164A	0xF9BD5004  LDRSH	R5, [SP, #4]
0x164E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1652	0x1966    ADDS	R6, R4, R5
0x1654	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1658	0xF9BD4008  LDRSH	R4, [SP, #8]
0x165C	0x1B64    SUB	R4, R4, R5
0x165E	0xB23B    SXTH	R3, R7
0x1660	0xB232    SXTH	R2, R6
0x1662	0xB239    SXTH	R1, R7
0x1664	0xB220    SXTH	R0, R4
0x1666	0xF84D8D04  PUSH	(R8)
0x166A	0xF7FFFC93  BL	_Draw_Line+0
0x166E	0xB001    ADD	SP, SP, #4
;ssd1309.c, 806 :: 		Draw_Line((xc - a), (yc - b), (xc + a), (yc - b), colour);
0x1670	0xF89D8018  LDRB	R8, [SP, #24]
0x1674	0xF9BD5012  LDRSH	R5, [SP, #18]
0x1678	0xF9BD400C  LDRSH	R4, [SP, #12]
0x167C	0x1B67    SUB	R7, R4, R5
0x167E	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1682	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1686	0x1966    ADDS	R6, R4, R5
0x1688	0xF9BD5004  LDRSH	R5, [SP, #4]
0x168C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1690	0x1B64    SUB	R4, R4, R5
0x1692	0xB23B    SXTH	R3, R7
0x1694	0xB232    SXTH	R2, R6
0x1696	0xB239    SXTH	R1, R7
0x1698	0xB220    SXTH	R0, R4
0x169A	0xF84D8D04  PUSH	(R8)
0x169E	0xF7FFFC79  BL	_Draw_Line+0
0x16A2	0xB001    ADD	SP, SP, #4
;ssd1309.c, 807 :: 		Draw_Line((xc - b), (yc + a), (xc + b), (yc + a), colour);
0x16A4	0xF89D8018  LDRB	R8, [SP, #24]
0x16A8	0xF9BD5004  LDRSH	R5, [SP, #4]
0x16AC	0xF9BD400C  LDRSH	R4, [SP, #12]
0x16B0	0x1967    ADDS	R7, R4, R5
0x16B2	0xF9BD5012  LDRSH	R5, [SP, #18]
0x16B6	0xF9BD4008  LDRSH	R4, [SP, #8]
0x16BA	0x1966    ADDS	R6, R4, R5
0x16BC	0xF9BD5012  LDRSH	R5, [SP, #18]
0x16C0	0xF9BD4008  LDRSH	R4, [SP, #8]
0x16C4	0x1B64    SUB	R4, R4, R5
0x16C6	0xB23B    SXTH	R3, R7
0x16C8	0xB232    SXTH	R2, R6
0x16CA	0xB239    SXTH	R1, R7
0x16CC	0xB220    SXTH	R0, R4
0x16CE	0xF84D8D04  PUSH	(R8)
0x16D2	0xF7FFFC5F  BL	_Draw_Line+0
0x16D6	0xB001    ADD	SP, SP, #4
;ssd1309.c, 808 :: 		Draw_Line((xc - b), (yc - a), (xc + b), (yc - a), colour);
0x16D8	0xF89D8018  LDRB	R8, [SP, #24]
0x16DC	0xF9BD5004  LDRSH	R5, [SP, #4]
0x16E0	0xF9BD400C  LDRSH	R4, [SP, #12]
0x16E4	0x1B67    SUB	R7, R4, R5
0x16E6	0xF9BD5012  LDRSH	R5, [SP, #18]
0x16EA	0xF9BD4008  LDRSH	R4, [SP, #8]
0x16EE	0x1966    ADDS	R6, R4, R5
0x16F0	0xF9BD5012  LDRSH	R5, [SP, #18]
0x16F4	0xF9BD4008  LDRSH	R4, [SP, #8]
0x16F8	0x1B64    SUB	R4, R4, R5
0x16FA	0xB23B    SXTH	R3, R7
0x16FC	0xB232    SXTH	R2, R6
0x16FE	0xB239    SXTH	R1, R7
0x1700	0xB220    SXTH	R0, R4
0x1702	0xF84D8D04  PUSH	(R8)
0x1706	0xF7FFFC45  BL	_Draw_Line+0
0x170A	0xB001    ADD	SP, SP, #4
;ssd1309.c, 809 :: 		}
0x170C	0xE07F    B	L_Draw_Circle158
L_Draw_Circle157:
;ssd1309.c, 812 :: 		Draw_Pixel((xc + a), (yc + b), colour);
0x170E	0xF9BD5012  LDRSH	R5, [SP, #18]
0x1712	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1716	0x1966    ADDS	R6, R4, R5
0x1718	0xF9BD5004  LDRSH	R5, [SP, #4]
0x171C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1720	0x1964    ADDS	R4, R4, R5
0x1722	0xF89D2018  LDRB	R2, [SP, #24]
0x1726	0xB2F1    UXTB	R1, R6
0x1728	0xB2E0    UXTB	R0, R4
0x172A	0xF7FFF805  BL	_Draw_Pixel+0
;ssd1309.c, 813 :: 		Draw_Pixel((xc + b), (yc + a), colour);
0x172E	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1732	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1736	0x1966    ADDS	R6, R4, R5
0x1738	0xF9BD5012  LDRSH	R5, [SP, #18]
0x173C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1740	0x1964    ADDS	R4, R4, R5
0x1742	0xF89D2018  LDRB	R2, [SP, #24]
0x1746	0xB2F1    UXTB	R1, R6
0x1748	0xB2E0    UXTB	R0, R4
0x174A	0xF7FEFFF5  BL	_Draw_Pixel+0
;ssd1309.c, 814 :: 		Draw_Pixel((xc - a), (yc + b), colour);
0x174E	0xF9BD5012  LDRSH	R5, [SP, #18]
0x1752	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1756	0x1966    ADDS	R6, R4, R5
0x1758	0xF9BD5004  LDRSH	R5, [SP, #4]
0x175C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1760	0x1B64    SUB	R4, R4, R5
0x1762	0xF89D2018  LDRB	R2, [SP, #24]
0x1766	0xB2F1    UXTB	R1, R6
0x1768	0xB2E0    UXTB	R0, R4
0x176A	0xF7FEFFE5  BL	_Draw_Pixel+0
;ssd1309.c, 815 :: 		Draw_Pixel((xc - b), (yc + a), colour);
0x176E	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1772	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1776	0x1966    ADDS	R6, R4, R5
0x1778	0xF9BD5012  LDRSH	R5, [SP, #18]
0x177C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1780	0x1B64    SUB	R4, R4, R5
0x1782	0xF89D2018  LDRB	R2, [SP, #24]
0x1786	0xB2F1    UXTB	R1, R6
0x1788	0xB2E0    UXTB	R0, R4
0x178A	0xF7FEFFD5  BL	_Draw_Pixel+0
;ssd1309.c, 816 :: 		Draw_Pixel((xc + b), (yc - a), colour);
0x178E	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1792	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1796	0x1B66    SUB	R6, R4, R5
0x1798	0xF9BD5012  LDRSH	R5, [SP, #18]
0x179C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x17A0	0x1964    ADDS	R4, R4, R5
0x17A2	0xF89D2018  LDRB	R2, [SP, #24]
0x17A6	0xB2F1    UXTB	R1, R6
0x17A8	0xB2E0    UXTB	R0, R4
0x17AA	0xF7FEFFC5  BL	_Draw_Pixel+0
;ssd1309.c, 817 :: 		Draw_Pixel((xc + a), (yc - b), colour);
0x17AE	0xF9BD5012  LDRSH	R5, [SP, #18]
0x17B2	0xF9BD400C  LDRSH	R4, [SP, #12]
0x17B6	0x1B66    SUB	R6, R4, R5
0x17B8	0xF9BD5004  LDRSH	R5, [SP, #4]
0x17BC	0xF9BD4008  LDRSH	R4, [SP, #8]
0x17C0	0x1964    ADDS	R4, R4, R5
0x17C2	0xF89D2018  LDRB	R2, [SP, #24]
0x17C6	0xB2F1    UXTB	R1, R6
0x17C8	0xB2E0    UXTB	R0, R4
0x17CA	0xF7FEFFB5  BL	_Draw_Pixel+0
;ssd1309.c, 818 :: 		Draw_Pixel((xc - a), (yc - b), colour);
0x17CE	0xF9BD5012  LDRSH	R5, [SP, #18]
0x17D2	0xF9BD400C  LDRSH	R4, [SP, #12]
0x17D6	0x1B66    SUB	R6, R4, R5
0x17D8	0xF9BD5004  LDRSH	R5, [SP, #4]
0x17DC	0xF9BD4008  LDRSH	R4, [SP, #8]
0x17E0	0x1B64    SUB	R4, R4, R5
0x17E2	0xF89D2018  LDRB	R2, [SP, #24]
0x17E6	0xB2F1    UXTB	R1, R6
0x17E8	0xB2E0    UXTB	R0, R4
0x17EA	0xF7FEFFA5  BL	_Draw_Pixel+0
;ssd1309.c, 819 :: 		Draw_Pixel((xc - b), (yc - a), colour);
0x17EE	0xF9BD5004  LDRSH	R5, [SP, #4]
0x17F2	0xF9BD400C  LDRSH	R4, [SP, #12]
0x17F6	0x1B66    SUB	R6, R4, R5
0x17F8	0xF9BD5012  LDRSH	R5, [SP, #18]
0x17FC	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1800	0x1B64    SUB	R4, R4, R5
0x1802	0xF89D2018  LDRB	R2, [SP, #24]
0x1806	0xB2F1    UXTB	R1, R6
0x1808	0xB2E0    UXTB	R0, R4
0x180A	0xF7FEFF95  BL	_Draw_Pixel+0
;ssd1309.c, 820 :: 		}
L_Draw_Circle158:
;ssd1309.c, 822 :: 		if(P < 0)
0x180E	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1812	0x2C00    CMP	R4, #0
0x1814	0xDA10    BGE	L_Draw_Circle159
;ssd1309.c, 824 :: 		P += (3 + (2 * a++));
0x1816	0xF9BD4004  LDRSH	R4, [SP, #4]
0x181A	0x0064    LSLS	R4, R4, #1
0x181C	0xB224    SXTH	R4, R4
0x181E	0x1CE5    ADDS	R5, R4, #3
0x1820	0xB22D    SXTH	R5, R5
0x1822	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1826	0x1964    ADDS	R4, R4, R5
0x1828	0xF8AD4014  STRH	R4, [SP, #20]
0x182C	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1830	0x1C64    ADDS	R4, R4, #1
0x1832	0xF8AD4004  STRH	R4, [SP, #4]
;ssd1309.c, 825 :: 		}
0x1836	0xE018    B	L_Draw_Circle160
L_Draw_Circle159:
;ssd1309.c, 828 :: 		P += (5 + (2 * ((a++) - (b--))));
0x1838	0xF9BD5012  LDRSH	R5, [SP, #18]
0x183C	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1840	0x1B64    SUB	R4, R4, R5
0x1842	0xB224    SXTH	R4, R4
0x1844	0x0064    LSLS	R4, R4, #1
0x1846	0xB224    SXTH	R4, R4
0x1848	0x1D65    ADDS	R5, R4, #5
0x184A	0xB22D    SXTH	R5, R5
0x184C	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1850	0x1964    ADDS	R4, R4, R5
0x1852	0xF8AD4014  STRH	R4, [SP, #20]
0x1856	0xF9BD4004  LDRSH	R4, [SP, #4]
0x185A	0x1C64    ADDS	R4, R4, #1
0x185C	0xF8AD4004  STRH	R4, [SP, #4]
0x1860	0xF9BD4012  LDRSH	R4, [SP, #18]
0x1864	0x1E64    SUBS	R4, R4, #1
0x1866	0xF8AD4012  STRH	R4, [SP, #18]
;ssd1309.c, 829 :: 		}
L_Draw_Circle160:
;ssd1309.c, 830 :: 		}while(a <= b);
0x186A	0xF9BD5012  LDRSH	R5, [SP, #18]
0x186E	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1872	0x42AC    CMP	R4, R5
0x1874	0xF77FAEDE  BLE	L_Draw_Circle154
;ssd1309.c, 831 :: 		}
L_end_Draw_Circle:
0x1878	0xF8DDE000  LDR	LR, [SP, #0]
0x187C	0xB006    ADD	SP, SP, #24
0x187E	0x4770    BX	LR
; end of _Draw_Circle
_Draw_Line:
;ssd1309.c, 503 :: 		void Draw_Line(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char colour)
; y2 start address is: 12 (R3)
; x2 start address is: 8 (R2)
; y1 start address is: 4 (R1)
; x1 start address is: 0 (R0)
0x0F94	0xB083    SUB	SP, SP, #12
0x0F96	0xF8CDE000  STR	LR, [SP, #0]
0x0F9A	0xB206    SXTH	R6, R0
0x0F9C	0xB20F    SXTH	R7, R1
0x0F9E	0xFA0FFA82  SXTH	R10, R2
0x0FA2	0xFA0FFB83  SXTH	R11, R3
; y2 end address is: 12 (R3)
; x2 end address is: 8 (R2)
; y1 end address is: 4 (R1)
; x1 end address is: 0 (R0)
; x1 start address is: 24 (R6)
; y1 start address is: 28 (R7)
; x2 start address is: 40 (R10)
; y2 start address is: 44 (R11)
; colour start address is: 32 (R8)
0x0FA6	0xF89D800C  LDRB	R8, [SP, #12]
;ssd1309.c, 505 :: 		signed int dx = 0x0000;
;ssd1309.c, 506 :: 		signed int dy = 0x0000;
;ssd1309.c, 507 :: 		signed int stepx = 0x0000;
;ssd1309.c, 508 :: 		signed int stepy = 0x0000;
;ssd1309.c, 509 :: 		signed int fraction = 0x0000;
;ssd1309.c, 511 :: 		dy = (y2 - y1);
0x0FAA	0xEBAB0507  SUB	R5, R11, R7, LSL #0
0x0FAE	0xB22D    SXTH	R5, R5
; dy start address is: 4 (R1)
0x0FB0	0xB229    SXTH	R1, R5
;ssd1309.c, 512 :: 		dx = (x2 - x1);
0x0FB2	0xEBAA0406  SUB	R4, R10, R6, LSL #0
; dx start address is: 0 (R0)
0x0FB6	0xB220    SXTH	R0, R4
;ssd1309.c, 514 :: 		if (dy < 0)
0x0FB8	0x2D00    CMP	R5, #0
0x0FBA	0xDA06    BGE	L_Draw_Line99
;ssd1309.c, 516 :: 		dy = -dy;
0x0FBC	0x4249    RSBS	R1, R1, #0
0x0FBE	0xB209    SXTH	R1, R1
;ssd1309.c, 517 :: 		stepy = -1;
; stepy start address is: 36 (R9)
0x0FC0	0xF64F79FF  MOVW	R9, #65535
0x0FC4	0xFA0FF989  SXTH	R9, R9
;ssd1309.c, 518 :: 		}
; stepy end address is: 36 (R9)
0x0FC8	0xE003    B	L_Draw_Line100
L_Draw_Line99:
;ssd1309.c, 521 :: 		stepy = 1;
; stepy start address is: 36 (R9)
0x0FCA	0xF2400901  MOVW	R9, #1
0x0FCE	0xFA0FF989  SXTH	R9, R9
; dy end address is: 4 (R1)
; stepy end address is: 36 (R9)
;ssd1309.c, 522 :: 		}
L_Draw_Line100:
;ssd1309.c, 524 :: 		if (dx < 0)
; stepy start address is: 36 (R9)
; dy start address is: 4 (R1)
0x0FD2	0x2800    CMP	R0, #0
0x0FD4	0xDA05    BGE	L_Draw_Line101
;ssd1309.c, 526 :: 		dx = -dx;
0x0FD6	0x4242    RSBS	R2, R0, #0
0x0FD8	0xB212    SXTH	R2, R2
; dx end address is: 0 (R0)
; dx start address is: 8 (R2)
;ssd1309.c, 527 :: 		stepx = -1;
; stepx start address is: 0 (R0)
0x0FDA	0xF64F70FF  MOVW	R0, #65535
0x0FDE	0xB200    SXTH	R0, R0
;ssd1309.c, 528 :: 		}
; stepx end address is: 0 (R0)
; dx end address is: 8 (R2)
0x0FE0	0xE006    B	L_Draw_Line102
L_Draw_Line101:
;ssd1309.c, 531 :: 		stepx = 1;
; stepx start address is: 8 (R2)
; dx start address is: 0 (R0)
0x0FE2	0x2201    MOVS	R2, #1
0x0FE4	0xB212    SXTH	R2, R2
; dx end address is: 0 (R0)
; stepx end address is: 8 (R2)
0x0FE6	0xF8AD2004  STRH	R2, [SP, #4]
0x0FEA	0xB202    SXTH	R2, R0
0x0FEC	0xF9BD0004  LDRSH	R0, [SP, #4]
;ssd1309.c, 532 :: 		}
L_Draw_Line102:
;ssd1309.c, 534 :: 		dx <<= 1;
; stepx start address is: 0 (R0)
; dx start address is: 8 (R2)
0x0FF0	0x0054    LSLS	R4, R2, #1
; dx end address is: 8 (R2)
; dx start address is: 48 (R12)
0x0FF2	0xFA0FFC84  SXTH	R12, R4
;ssd1309.c, 535 :: 		dy <<= 1;
0x0FF6	0x004C    LSLS	R4, R1, #1
; dy end address is: 4 (R1)
; dy start address is: 8 (R2)
0x0FF8	0xB222    SXTH	R2, R4
;ssd1309.c, 537 :: 		Draw_Pixel(x1, y1, colour);
0x0FFA	0xF8AD2004  STRH	R2, [SP, #4]
0x0FFE	0xF8AD0006  STRH	R0, [SP, #6]
0x1002	0xFA5FF288  UXTB	R2, R8
0x1006	0xB2F9    UXTB	R1, R7
0x1008	0xB2F0    UXTB	R0, R6
0x100A	0xF7FFFB95  BL	_Draw_Pixel+0
0x100E	0xF9BD0006  LDRSH	R0, [SP, #6]
0x1012	0xF9BD2004  LDRSH	R2, [SP, #4]
;ssd1309.c, 539 :: 		if(dx > dy)
0x1016	0x4594    CMP	R12, R2
0x1018	0xDD2F    BLE	L_Draw_Line103
; y2 end address is: 44 (R11)
;ssd1309.c, 541 :: 		fraction = (dy - (dx >> 1));
0x101A	0xEA4F046C  ASR	R4, R12, #1
0x101E	0xB224    SXTH	R4, R4
0x1020	0x1B11    SUB	R1, R2, R4
0x1022	0xB209    SXTH	R1, R1
; fraction start address is: 4 (R1)
; x2 end address is: 40 (R10)
; stepx end address is: 0 (R0)
; dx end address is: 48 (R12)
; dy end address is: 8 (R2)
; y1 end address is: 28 (R7)
; x1 end address is: 24 (R6)
; fraction end address is: 4 (R1)
0x1024	0xFA0FFB8C  SXTH	R11, R12
0x1028	0xFA0FFC80  SXTH	R12, R0
0x102C	0xFA0FF08A  SXTH	R0, R10
0x1030	0xFA0FFA82  SXTH	R10, R2
0x1034	0xB232    SXTH	R2, R6
;ssd1309.c, 542 :: 		while (x1 != x2)
L_Draw_Line104:
; fraction start address is: 4 (R1)
; stepx start address is: 48 (R12)
; dx start address is: 44 (R11)
; dy start address is: 40 (R10)
; dy start address is: 40 (R10)
; dy end address is: 40 (R10)
; dx start address is: 44 (R11)
; dx end address is: 44 (R11)
; stepx start address is: 48 (R12)
; stepx end address is: 48 (R12)
; stepy start address is: 36 (R9)
; stepy end address is: 36 (R9)
; colour start address is: 32 (R8)
; colour end address is: 32 (R8)
; x2 start address is: 0 (R0)
; y1 start address is: 28 (R7)
; x1 start address is: 8 (R2)
0x1036	0x4282    CMP	R2, R0
0x1038	0xD01E    BEQ	L_Draw_Line105
; dy end address is: 40 (R10)
; dx end address is: 44 (R11)
; stepx end address is: 48 (R12)
; colour end address is: 32 (R8)
; stepy end address is: 36 (R9)
;ssd1309.c, 544 :: 		if(fraction >= 0)
; stepy start address is: 36 (R9)
; colour start address is: 32 (R8)
; stepx start address is: 48 (R12)
; dx start address is: 44 (R11)
; dy start address is: 40 (R10)
0x103A	0x2900    CMP	R1, #0
0x103C	0xDB06    BLT	L__Draw_Line263
;ssd1309.c, 546 :: 		y1 += stepy;
0x103E	0xEB070709  ADD	R7, R7, R9, LSL #0
0x1042	0xB23F    SXTH	R7, R7
;ssd1309.c, 547 :: 		fraction -= dx;
0x1044	0xEBA1010B  SUB	R1, R1, R11, LSL #0
0x1048	0xB209    SXTH	R1, R1
; y1 end address is: 28 (R7)
; fraction end address is: 4 (R1)
;ssd1309.c, 548 :: 		}
0x104A	0xE7FF    B	L_Draw_Line106
L__Draw_Line263:
;ssd1309.c, 544 :: 		if(fraction >= 0)
;ssd1309.c, 548 :: 		}
L_Draw_Line106:
;ssd1309.c, 550 :: 		x1 += stepx;
; fraction start address is: 4 (R1)
; y1 start address is: 28 (R7)
0x104C	0xEB02050C  ADD	R5, R2, R12, LSL #0
; x1 end address is: 8 (R2)
; x1 start address is: 24 (R6)
0x1050	0xB22E    SXTH	R6, R5
;ssd1309.c, 551 :: 		fraction += dy;
0x1052	0xEB01010A  ADD	R1, R1, R10, LSL #0
0x1056	0xB209    SXTH	R1, R1
;ssd1309.c, 553 :: 		Draw_Pixel(x1, y1, colour);
0x1058	0xF8AD1004  STRH	R1, [SP, #4]
0x105C	0xF8AD0008  STRH	R0, [SP, #8]
0x1060	0xFA5FF288  UXTB	R2, R8
0x1064	0xB2F9    UXTB	R1, R7
0x1066	0xB2E8    UXTB	R0, R5
0x1068	0xF7FFFB66  BL	_Draw_Pixel+0
0x106C	0xF9BD0008  LDRSH	R0, [SP, #8]
0x1070	0xF9BD1004  LDRSH	R1, [SP, #4]
;ssd1309.c, 554 :: 		}
0x1074	0xB232    SXTH	R2, R6
; dy end address is: 40 (R10)
; dx end address is: 44 (R11)
; stepx end address is: 48 (R12)
; colour end address is: 32 (R8)
; x2 end address is: 0 (R0)
; y1 end address is: 28 (R7)
; x1 end address is: 24 (R6)
; fraction end address is: 4 (R1)
; stepy end address is: 36 (R9)
0x1076	0xE7DE    B	L_Draw_Line104
L_Draw_Line105:
;ssd1309.c, 555 :: 		}
0x1078	0xE030    B	L_Draw_Line107
L_Draw_Line103:
;ssd1309.c, 558 :: 		fraction = (dx - (dy >> 1));
; y2 start address is: 44 (R11)
; stepy start address is: 36 (R9)
; x1 start address is: 24 (R6)
; y1 start address is: 28 (R7)
; colour start address is: 32 (R8)
; dy start address is: 8 (R2)
; dx start address is: 48 (R12)
; stepx start address is: 0 (R0)
0x107A	0x1054    ASRS	R4, R2, #1
0x107C	0xB224    SXTH	R4, R4
0x107E	0xEBAC0304  SUB	R3, R12, R4, LSL #0
0x1082	0xB21B    SXTH	R3, R3
; fraction start address is: 12 (R3)
; stepx end address is: 0 (R0)
; dx end address is: 48 (R12)
; dy end address is: 8 (R2)
; colour end address is: 32 (R8)
; y1 end address is: 28 (R7)
; x1 end address is: 24 (R6)
; fraction end address is: 12 (R3)
; y2 end address is: 44 (R11)
0x1084	0xB231    SXTH	R1, R6
0x1086	0xB216    SXTH	R6, R2
0x1088	0xFA5FFA88  UXTB	R10, R8
0x108C	0xFA0FF880  SXTH	R8, R0
0x1090	0xB238    SXTH	R0, R7
0x1092	0xFA0FF78C  SXTH	R7, R12
;ssd1309.c, 559 :: 		while (y1 != y2)
L_Draw_Line108:
; colour start address is: 40 (R10)
; stepx start address is: 32 (R8)
; dx start address is: 28 (R7)
; dy start address is: 24 (R6)
; fraction start address is: 12 (R3)
; dy start address is: 24 (R6)
; dy end address is: 24 (R6)
; dx start address is: 28 (R7)
; dx end address is: 28 (R7)
; stepx start address is: 32 (R8)
; stepx end address is: 32 (R8)
; stepy start address is: 36 (R9)
; stepy end address is: 36 (R9)
; colour start address is: 40 (R10)
; colour end address is: 40 (R10)
; y2 start address is: 44 (R11)
; y1 start address is: 0 (R0)
; x1 start address is: 4 (R1)
0x1096	0x4558    CMP	R0, R11
0x1098	0xD020    BEQ	L_Draw_Line109
; dy end address is: 24 (R6)
; dx end address is: 28 (R7)
; stepx end address is: 32 (R8)
; stepy end address is: 36 (R9)
; colour end address is: 40 (R10)
;ssd1309.c, 561 :: 		if (fraction >= 0)
; colour start address is: 40 (R10)
; stepy start address is: 36 (R9)
; stepx start address is: 32 (R8)
; dx start address is: 28 (R7)
; dy start address is: 24 (R6)
0x109A	0x2B00    CMP	R3, #0
0x109C	0xDB05    BLT	L__Draw_Line264
;ssd1309.c, 563 :: 		x1 += stepx;
0x109E	0xEB010108  ADD	R1, R1, R8, LSL #0
0x10A2	0xB209    SXTH	R1, R1
;ssd1309.c, 564 :: 		fraction -= dy;
0x10A4	0x1B9A    SUB	R2, R3, R6
0x10A6	0xB212    SXTH	R2, R2
; fraction end address is: 12 (R3)
; fraction start address is: 8 (R2)
; fraction end address is: 8 (R2)
; x1 end address is: 4 (R1)
;ssd1309.c, 565 :: 		}
0x10A8	0xE000    B	L_Draw_Line110
L__Draw_Line264:
;ssd1309.c, 561 :: 		if (fraction >= 0)
0x10AA	0xB21A    SXTH	R2, R3
;ssd1309.c, 565 :: 		}
L_Draw_Line110:
;ssd1309.c, 567 :: 		y1 += stepy;
; fraction start address is: 8 (R2)
; x1 start address is: 4 (R1)
0x10AC	0xEB000509  ADD	R5, R0, R9, LSL #0
; y1 end address is: 0 (R0)
; y1 start address is: 48 (R12)
0x10B0	0xFA0FFC85  SXTH	R12, R5
;ssd1309.c, 568 :: 		fraction += dx;
0x10B4	0x19D4    ADDS	R4, R2, R7
; fraction end address is: 8 (R2)
; fraction start address is: 0 (R0)
0x10B6	0xB220    SXTH	R0, R4
;ssd1309.c, 570 :: 		Draw_Pixel(x1, y1, colour);
0x10B8	0xF8AD0004  STRH	R0, [SP, #4]
0x10BC	0xF8AD1008  STRH	R1, [SP, #8]
0x10C0	0xFA5FF28A  UXTB	R2, R10
0x10C4	0xB2C8    UXTB	R0, R1
0x10C6	0xB2E9    UXTB	R1, R5
0x10C8	0xF7FFFB36  BL	_Draw_Pixel+0
0x10CC	0xF9BD1008  LDRSH	R1, [SP, #8]
0x10D0	0xF9BD0004  LDRSH	R0, [SP, #4]
;ssd1309.c, 571 :: 		}
; dy end address is: 24 (R6)
; dx end address is: 28 (R7)
; stepx end address is: 32 (R8)
; stepy end address is: 36 (R9)
; colour end address is: 40 (R10)
; y2 end address is: 44 (R11)
; x1 end address is: 4 (R1)
; y1 end address is: 48 (R12)
; fraction end address is: 0 (R0)
0x10D4	0xB203    SXTH	R3, R0
0x10D6	0xFA0FF08C  SXTH	R0, R12
0x10DA	0xE7DC    B	L_Draw_Line108
L_Draw_Line109:
;ssd1309.c, 572 :: 		}
L_Draw_Line107:
;ssd1309.c, 573 :: 		}
L_end_Draw_Line:
0x10DC	0xF8DDE000  LDR	LR, [SP, #0]
0x10E0	0xB003    ADD	SP, SP, #12
0x10E2	0x4770    BX	LR
; end of _Draw_Line
_Draw_Pixel:
;ssd1309.c, 478 :: 		void Draw_Pixel(unsigned char x_pos, unsigned char y_pos, unsigned char colour)
; colour start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0738	0xB081    SUB	SP, SP, #4
0x073A	0xF8CDE000  STR	LR, [SP, #0]
0x073E	0xB2CD    UXTB	R5, R1
; colour end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 20 (R5)
; colour start address is: 8 (R2)
;ssd1309.c, 480 :: 		unsigned char value = 0x00;
;ssd1309.c, 481 :: 		unsigned char page = 0x00;
;ssd1309.c, 482 :: 		unsigned char bit_pos = 0x00;
;ssd1309.c, 484 :: 		page = (y_pos / y_max);
0x0740	0x08EC    LSRS	R4, R5, #3
0x0742	0xB2E4    UXTB	R4, R4
; page start address is: 4 (R1)
0x0744	0xB2E1    UXTB	R1, R4
;ssd1309.c, 485 :: 		bit_pos = (y_pos - (page * y_max));
0x0746	0x00E3    LSLS	R3, R4, #3
0x0748	0xB21B    SXTH	R3, R3
0x074A	0x1AEB    SUB	R3, R5, R3
; y_pos end address is: 20 (R5)
; bit_pos start address is: 20 (R5)
0x074C	0xB2DD    UXTB	R5, R3
;ssd1309.c, 486 :: 		value = buffer[((page * x_max) + x_pos)];
0x074E	0x01E3    LSLS	R3, R4, #7
0x0750	0xB21B    SXTH	R3, R3
0x0752	0x181C    ADDS	R4, R3, R0
0x0754	0xB224    SXTH	R4, R4
0x0756	0x4B15    LDR	R3, [PC, #84]
0x0758	0x191B    ADDS	R3, R3, R4
0x075A	0x781B    LDRB	R3, [R3, #0]
; value start address is: 16 (R4)
0x075C	0xB2DC    UXTB	R4, R3
;ssd1309.c, 488 :: 		if((colour & 0x01) != 0)
0x075E	0xF0020301  AND	R3, R2, #1
0x0762	0xB2DB    UXTB	R3, R3
; colour end address is: 8 (R2)
0x0764	0xB13B    CBZ	R3, L_Draw_Pixel97
;ssd1309.c, 490 :: 		value |= (1 << bit_pos);
0x0766	0x2301    MOVS	R3, #1
0x0768	0xB21B    SXTH	R3, R3
0x076A	0x40AB    LSLS	R3, R5
0x076C	0xB21B    SXTH	R3, R3
; bit_pos end address is: 20 (R5)
0x076E	0xEA440303  ORR	R3, R4, R3, LSL #0
; value end address is: 16 (R4)
; value start address is: 20 (R5)
0x0772	0xB2DD    UXTB	R5, R3
;ssd1309.c, 491 :: 		}
; value end address is: 20 (R5)
0x0774	0xE008    B	L_Draw_Pixel98
L_Draw_Pixel97:
;ssd1309.c, 494 :: 		value &= (~(1 << bit_pos));
; value start address is: 16 (R4)
; bit_pos start address is: 20 (R5)
0x0776	0x2301    MOVS	R3, #1
0x0778	0xB21B    SXTH	R3, R3
0x077A	0x40AB    LSLS	R3, R5
0x077C	0xB21B    SXTH	R3, R3
; bit_pos end address is: 20 (R5)
0x077E	0x43DB    MVN	R3, R3
0x0780	0xB21B    SXTH	R3, R3
0x0782	0xEA040303  AND	R3, R4, R3, LSL #0
; value end address is: 16 (R4)
; value start address is: 20 (R5)
0x0786	0xB2DD    UXTB	R5, R3
; value end address is: 20 (R5)
;ssd1309.c, 495 :: 		}
L_Draw_Pixel98:
;ssd1309.c, 497 :: 		buffer[((page * x_max) + x_pos)] = value;
; value start address is: 20 (R5)
0x0788	0x01CB    LSLS	R3, R1, #7
0x078A	0xB21B    SXTH	R3, R3
0x078C	0x181C    ADDS	R4, R3, R0
0x078E	0xB224    SXTH	R4, R4
0x0790	0x4B06    LDR	R3, [PC, #24]
0x0792	0x191B    ADDS	R3, R3, R4
0x0794	0x701D    STRB	R5, [R3, #0]
;ssd1309.c, 498 :: 		OLED_gotoxy(x_pos, page);
; page end address is: 4 (R1)
; x_pos end address is: 0 (R0)
0x0796	0xF7FFFF7F  BL	_OLED_gotoxy+0
;ssd1309.c, 499 :: 		OLED_write(value, DAT);
0x079A	0x2101    MOVS	R1, #1
0x079C	0xB2E8    UXTB	R0, R5
; value end address is: 20 (R5)
0x079E	0xF000F877  BL	_OLED_write+0
;ssd1309.c, 500 :: 		}
L_end_Draw_Pixel:
0x07A2	0xF8DDE000  LDR	LR, [SP, #0]
0x07A6	0xB001    ADD	SP, SP, #4
0x07A8	0x4770    BX	LR
0x07AA	0xBF00    NOP
0x07AC	0x001D2000  	_buffer+0
; end of _Draw_Pixel
_Draw_Rectangle:
;ssd1309.c, 733 :: 		void Draw_Rectangle(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char fill, unsigned char colour, unsigned char type)
; y2 start address is: 12 (R3)
0x1A0C	0xB087    SUB	SP, SP, #28
0x1A0E	0xF8CDE000  STR	LR, [SP, #0]
0x1A12	0xF8AD000C  STRH	R0, [SP, #12]
0x1A16	0xB218    SXTH	R0, R3
0x1A18	0xF8AD1010  STRH	R1, [SP, #16]
0x1A1C	0xF8AD2014  STRH	R2, [SP, #20]
; y2 end address is: 12 (R3)
; y2 start address is: 0 (R0)
; fill start address is: 8 (R2)
0x1A20	0xF89D201C  LDRB	R2, [SP, #28]
; colour start address is: 4 (R1)
0x1A24	0xF89D1020  LDRB	R1, [SP, #32]
0x1A28	0xF89D4024  LDRB	R4, [SP, #36]
0x1A2C	0xF88D4024  STRB	R4, [SP, #36]
;ssd1309.c, 735 :: 		unsigned short i = 0x00;
;ssd1309.c, 736 :: 		unsigned short xmin = 0x00;
;ssd1309.c, 737 :: 		unsigned short xmax = 0x00;
;ssd1309.c, 738 :: 		unsigned short ymin = 0x00;
;ssd1309.c, 739 :: 		unsigned short ymax = 0x00;
;ssd1309.c, 741 :: 		if(fill != 0)
0x1A30	0x2A00    CMP	R2, #0
0x1A32	0xD052    BEQ	L_Draw_Rectangle141
; fill end address is: 8 (R2)
;ssd1309.c, 743 :: 		if(x1 < x2)
0x1A34	0xF9BD5014  LDRSH	R5, [SP, #20]
0x1A38	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1A3C	0x42AC    CMP	R4, R5
0x1A3E	0xDA08    BGE	L_Draw_Rectangle142
;ssd1309.c, 745 :: 		xmin = x1;
0x1A40	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1A44	0xF88D4016  STRB	R4, [SP, #22]
;ssd1309.c, 746 :: 		xmax = x2;
0x1A48	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1A4C	0xF88D4017  STRB	R4, [SP, #23]
;ssd1309.c, 747 :: 		}
0x1A50	0xE007    B	L_Draw_Rectangle143
L_Draw_Rectangle142:
;ssd1309.c, 750 :: 		xmin = x2;
0x1A52	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1A56	0xF88D4016  STRB	R4, [SP, #22]
;ssd1309.c, 751 :: 		xmax = x1;
0x1A5A	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1A5E	0xF88D4017  STRB	R4, [SP, #23]
;ssd1309.c, 752 :: 		}
L_Draw_Rectangle143:
;ssd1309.c, 754 :: 		if(y1 < y2)
0x1A62	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1A66	0x4284    CMP	R4, R0
0x1A68	0xDA06    BGE	L_Draw_Rectangle144
;ssd1309.c, 756 :: 		ymin = y1;
0x1A6A	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1A6E	0xF88D4018  STRB	R4, [SP, #24]
;ssd1309.c, 757 :: 		ymax = y2;
0x1A72	0xF88D0019  STRB	R0, [SP, #25]
;ssd1309.c, 758 :: 		}
0x1A76	0xE005    B	L_Draw_Rectangle145
L_Draw_Rectangle144:
;ssd1309.c, 761 :: 		ymin = y2;
0x1A78	0xF88D0018  STRB	R0, [SP, #24]
;ssd1309.c, 762 :: 		ymax = y1;
0x1A7C	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1A80	0xF88D4019  STRB	R4, [SP, #25]
;ssd1309.c, 763 :: 		}
L_Draw_Rectangle145:
;ssd1309.c, 765 :: 		for(; xmin <= xmax; ++xmin)
0x1A84	0xB207    SXTH	R7, R0
; y2 end address is: 0 (R0)
; colour end address is: 4 (R1)
0x1A86	0xB2CE    UXTB	R6, R1
L_Draw_Rectangle146:
; colour start address is: 24 (R6)
; y2 start address is: 28 (R7)
0x1A88	0xF89D5017  LDRB	R5, [SP, #23]
0x1A8C	0xF89D4016  LDRB	R4, [SP, #22]
0x1A90	0x42AC    CMP	R4, R5
0x1A92	0xD821    BHI	L_Draw_Rectangle147
;ssd1309.c, 767 :: 		for(i = ymin; i <= ymax; ++i)
; i start address is: 40 (R10)
0x1A94	0xF89DA018  LDRB	R10, [SP, #24]
; i end address is: 40 (R10)
; colour end address is: 24 (R6)
; y2 end address is: 28 (R7)
0x1A98	0xFA5FF886  UXTB	R8, R6
0x1A9C	0xFA0FF987  SXTH	R9, R7
L_Draw_Rectangle149:
; i start address is: 40 (R10)
; y2 start address is: 36 (R9)
; colour start address is: 32 (R8)
0x1AA0	0xF89D4019  LDRB	R4, [SP, #25]
0x1AA4	0x45A2    CMP	R10, R4
0x1AA6	0xD80D    BHI	L_Draw_Rectangle150
;ssd1309.c, 769 :: 		Draw_Pixel(xmin, i, colour);
0x1AA8	0xFA5FF288  UXTB	R2, R8
0x1AAC	0xFA5FF18A  UXTB	R1, R10
0x1AB0	0xF89D0016  LDRB	R0, [SP, #22]
0x1AB4	0xF7FEFE40  BL	_Draw_Pixel+0
;ssd1309.c, 767 :: 		for(i = ymin; i <= ymax; ++i)
0x1AB8	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x1ABC	0xB2E0    UXTB	R0, R4
;ssd1309.c, 770 :: 		}
; i end address is: 0 (R0)
0x1ABE	0xFA5FFA80  UXTB	R10, R0
0x1AC2	0xE7ED    B	L_Draw_Rectangle149
L_Draw_Rectangle150:
;ssd1309.c, 765 :: 		for(; xmin <= xmax; ++xmin)
0x1AC4	0xF89D4016  LDRB	R4, [SP, #22]
0x1AC8	0x1C64    ADDS	R4, R4, #1
0x1ACA	0xF88D4016  STRB	R4, [SP, #22]
;ssd1309.c, 771 :: 		}
0x1ACE	0xFA0FF789  SXTH	R7, R9
; y2 end address is: 36 (R9)
; colour end address is: 32 (R8)
0x1AD2	0xFA5FF688  UXTB	R6, R8
0x1AD6	0xE7D7    B	L_Draw_Rectangle146
L_Draw_Rectangle147:
;ssd1309.c, 772 :: 		}
; y2 start address is: 28 (R7)
; colour start address is: 24 (R6)
; colour end address is: 24 (R6)
; y2 end address is: 28 (R7)
0x1AD8	0xE051    B	L_Draw_Rectangle152
L_Draw_Rectangle141:
;ssd1309.c, 776 :: 		Draw_Line(x1, y1, x2, y1, colour);
; colour start address is: 4 (R1)
; y2 start address is: 0 (R0)
0x1ADA	0xB2CC    UXTB	R4, R1
0x1ADC	0xF88D1004  STRB	R1, [SP, #4]
0x1AE0	0xF8AD0008  STRH	R0, [SP, #8]
0x1AE4	0xF9BD3010  LDRSH	R3, [SP, #16]
0x1AE8	0xF9BD2014  LDRSH	R2, [SP, #20]
0x1AEC	0xF9BD1010  LDRSH	R1, [SP, #16]
0x1AF0	0xF9BD000C  LDRSH	R0, [SP, #12]
0x1AF4	0xB410    PUSH	(R4)
0x1AF6	0xF7FFFA4D  BL	_Draw_Line+0
0x1AFA	0xB001    ADD	SP, SP, #4
0x1AFC	0xF9BD0008  LDRSH	R0, [SP, #8]
0x1B00	0xF89D1004  LDRB	R1, [SP, #4]
;ssd1309.c, 777 :: 		Draw_Line(x1, y2, x2, y2, colour);
0x1B04	0xB2CC    UXTB	R4, R1
0x1B06	0xF88D1004  STRB	R1, [SP, #4]
0x1B0A	0xF8AD0008  STRH	R0, [SP, #8]
0x1B0E	0xB203    SXTH	R3, R0
0x1B10	0xF9BD2014  LDRSH	R2, [SP, #20]
0x1B14	0xB219    SXTH	R1, R3
0x1B16	0xF9BD000C  LDRSH	R0, [SP, #12]
0x1B1A	0xB410    PUSH	(R4)
0x1B1C	0xF7FFFA3A  BL	_Draw_Line+0
0x1B20	0xB001    ADD	SP, SP, #4
0x1B22	0xF9BD0008  LDRSH	R0, [SP, #8]
0x1B26	0xF89D1004  LDRB	R1, [SP, #4]
;ssd1309.c, 778 :: 		Draw_Line(x1, y1, x1, y2, colour);
0x1B2A	0xB2CC    UXTB	R4, R1
0x1B2C	0xF88D1004  STRB	R1, [SP, #4]
0x1B30	0xF8AD0008  STRH	R0, [SP, #8]
0x1B34	0xB203    SXTH	R3, R0
0x1B36	0xF9BD200C  LDRSH	R2, [SP, #12]
0x1B3A	0xF9BD1010  LDRSH	R1, [SP, #16]
0x1B3E	0xF9BD000C  LDRSH	R0, [SP, #12]
0x1B42	0xB410    PUSH	(R4)
0x1B44	0xF7FFFA26  BL	_Draw_Line+0
0x1B48	0xB001    ADD	SP, SP, #4
0x1B4A	0xF9BD0008  LDRSH	R0, [SP, #8]
0x1B4E	0xF89D1004  LDRB	R1, [SP, #4]
;ssd1309.c, 779 :: 		Draw_Line(x2, y1, x2, y2, colour);
0x1B52	0xB2CC    UXTB	R4, R1
0x1B54	0xF88D1004  STRB	R1, [SP, #4]
0x1B58	0xF8AD0008  STRH	R0, [SP, #8]
0x1B5C	0xB203    SXTH	R3, R0
0x1B5E	0xF9BD2014  LDRSH	R2, [SP, #20]
0x1B62	0xF9BD1010  LDRSH	R1, [SP, #16]
0x1B66	0xF9BD0014  LDRSH	R0, [SP, #20]
0x1B6A	0xB410    PUSH	(R4)
0x1B6C	0xF7FFFA12  BL	_Draw_Line+0
0x1B70	0xB001    ADD	SP, SP, #4
; y2 end address is: 0 (R0)
; colour end address is: 4 (R1)
0x1B72	0xF9BD0008  LDRSH	R0, [SP, #8]
0x1B76	0xF89D1004  LDRB	R1, [SP, #4]
0x1B7A	0xB207    SXTH	R7, R0
0x1B7C	0xB2CE    UXTB	R6, R1
;ssd1309.c, 780 :: 		}
L_Draw_Rectangle152:
;ssd1309.c, 782 :: 		if(type != SQUARE)
; colour start address is: 24 (R6)
; y2 start address is: 28 (R7)
0x1B7E	0xF89D4024  LDRB	R4, [SP, #36]
0x1B82	0xB1EC    CBZ	R4, L_Draw_Rectangle153
;ssd1309.c, 784 :: 		Draw_Pixel(x1, y1, ~colour);
0x1B84	0x43F4    MVN	R4, R6
0x1B86	0xB2E2    UXTB	R2, R4
0x1B88	0xF9BD1010  LDRSH	R1, [SP, #16]
0x1B8C	0xF9BD000C  LDRSH	R0, [SP, #12]
0x1B90	0xF7FEFDD2  BL	_Draw_Pixel+0
;ssd1309.c, 785 :: 		Draw_Pixel(x1, y2, ~colour);
0x1B94	0x43F4    MVN	R4, R6
0x1B96	0xB2E2    UXTB	R2, R4
0x1B98	0xB2F9    UXTB	R1, R7
0x1B9A	0xF9BD000C  LDRSH	R0, [SP, #12]
0x1B9E	0xF7FEFDCB  BL	_Draw_Pixel+0
;ssd1309.c, 786 :: 		Draw_Pixel(x2, y1, ~colour);
0x1BA2	0x43F4    MVN	R4, R6
0x1BA4	0xB2E2    UXTB	R2, R4
0x1BA6	0xF9BD1010  LDRSH	R1, [SP, #16]
0x1BAA	0xF9BD0014  LDRSH	R0, [SP, #20]
0x1BAE	0xF7FEFDC3  BL	_Draw_Pixel+0
;ssd1309.c, 787 :: 		Draw_Pixel(x2, y2, ~colour);
0x1BB2	0x43F4    MVN	R4, R6
; colour end address is: 24 (R6)
0x1BB4	0xB2E2    UXTB	R2, R4
0x1BB6	0xB2F9    UXTB	R1, R7
; y2 end address is: 28 (R7)
0x1BB8	0xF9BD0014  LDRSH	R0, [SP, #20]
0x1BBC	0xF7FEFDBC  BL	_Draw_Pixel+0
;ssd1309.c, 788 :: 		}
L_Draw_Rectangle153:
;ssd1309.c, 789 :: 		}
L_end_Draw_Rectangle:
0x1BC0	0xF8DDE000  LDR	LR, [SP, #0]
0x1BC4	0xB007    ADD	SP, SP, #28
0x1BC6	0x4770    BX	LR
; end of _Draw_Rectangle
_Draw_Triangle:
;ssd1309.c, 612 :: 		void Draw_Triangle(signed int x1, signed int y1, signed int x2, signed int y2, signed int x3, signed int y3, unsigned char fill, unsigned int colour)
0x1BC8	0xB088    SUB	SP, SP, #32
0x1BCA	0xF8CDE000  STR	LR, [SP, #0]
0x1BCE	0xF8AD0008  STRH	R0, [SP, #8]
0x1BD2	0xF8AD100C  STRH	R1, [SP, #12]
0x1BD6	0xF8AD2010  STRH	R2, [SP, #16]
0x1BDA	0xF8AD3014  STRH	R3, [SP, #20]
0x1BDE	0xF9BD4020  LDRSH	R4, [SP, #32]
0x1BE2	0xF8AD4020  STRH	R4, [SP, #32]
0x1BE6	0xF9BD4024  LDRSH	R4, [SP, #36]
0x1BEA	0xF8AD4024  STRH	R4, [SP, #36]
; fill start address is: 0 (R0)
0x1BEE	0xF89D0028  LDRB	R0, [SP, #40]
0x1BF2	0xF8BD402C  LDRH	R4, [SP, #44]
0x1BF6	0xF8AD402C  STRH	R4, [SP, #44]
;ssd1309.c, 614 :: 		signed int a = 0;
0x1BFA	0xF2400400  MOVW	R4, #0
0x1BFE	0xF8AD4004  STRH	R4, [SP, #4]
0x1C02	0xF2400400  MOVW	R4, #0
0x1C06	0xF8AD4006  STRH	R4, [SP, #6]
;ssd1309.c, 615 :: 		signed int b = 0;
;ssd1309.c, 616 :: 		signed int sa = 0;
;ssd1309.c, 617 :: 		signed int sb = 0;
;ssd1309.c, 618 :: 		signed int yp = 0;
;ssd1309.c, 619 :: 		signed int last = 0;
;ssd1309.c, 620 :: 		signed int dx12 = 0;
;ssd1309.c, 621 :: 		signed int dx23 = 0;
;ssd1309.c, 622 :: 		signed int dx13 = 0;
;ssd1309.c, 623 :: 		signed int dy12 = 0;
;ssd1309.c, 624 :: 		signed int dy23 = 0;
;ssd1309.c, 625 :: 		signed int dy13 = 0;
;ssd1309.c, 627 :: 		switch(fill)
0x1C0A	0xE19A    B	L_Draw_Triangle117
; fill end address is: 0 (R0)
;ssd1309.c, 629 :: 		case YES:
L_Draw_Triangle119:
;ssd1309.c, 631 :: 		if(y1 > y2)
0x1C0C	0xF9BD5014  LDRSH	R5, [SP, #20]
0x1C10	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1C14	0x42AC    CMP	R4, R5
0x1C16	0xDD0B    BLE	L_Draw_Triangle120
;ssd1309.c, 633 :: 		swap(&y1, &y2);
0x1C18	0xAD05    ADD	R5, SP, #20
0x1C1A	0xAC03    ADD	R4, SP, #12
0x1C1C	0x4629    MOV	R1, R5
0x1C1E	0x4620    MOV	R0, R4
0x1C20	0xF7FEFEE8  BL	_swap+0
;ssd1309.c, 634 :: 		swap(&x1, &x2);
0x1C24	0xAD04    ADD	R5, SP, #16
0x1C26	0xAC02    ADD	R4, SP, #8
0x1C28	0x4629    MOV	R1, R5
0x1C2A	0x4620    MOV	R0, R4
0x1C2C	0xF7FEFEE2  BL	_swap+0
;ssd1309.c, 635 :: 		}
L_Draw_Triangle120:
;ssd1309.c, 636 :: 		if(y2 > y3)
0x1C30	0xF9BD5024  LDRSH	R5, [SP, #36]
0x1C34	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1C38	0x42AC    CMP	R4, R5
0x1C3A	0xDD0B    BLE	L_Draw_Triangle121
;ssd1309.c, 638 :: 		swap(&y3, &y2);
0x1C3C	0xAD05    ADD	R5, SP, #20
0x1C3E	0xAC09    ADD	R4, SP, #36
0x1C40	0x4629    MOV	R1, R5
0x1C42	0x4620    MOV	R0, R4
0x1C44	0xF7FEFED6  BL	_swap+0
;ssd1309.c, 639 :: 		swap(&x3, &x2);
0x1C48	0xAD04    ADD	R5, SP, #16
0x1C4A	0xAC08    ADD	R4, SP, #32
0x1C4C	0x4629    MOV	R1, R5
0x1C4E	0x4620    MOV	R0, R4
0x1C50	0xF7FEFED0  BL	_swap+0
;ssd1309.c, 640 :: 		}
L_Draw_Triangle121:
;ssd1309.c, 641 :: 		if(y1 > y2)
0x1C54	0xF9BD5014  LDRSH	R5, [SP, #20]
0x1C58	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1C5C	0x42AC    CMP	R4, R5
0x1C5E	0xDD0B    BLE	L_Draw_Triangle122
;ssd1309.c, 643 :: 		swap(&y1, &y2);
0x1C60	0xAD05    ADD	R5, SP, #20
0x1C62	0xAC03    ADD	R4, SP, #12
0x1C64	0x4629    MOV	R1, R5
0x1C66	0x4620    MOV	R0, R4
0x1C68	0xF7FEFEC4  BL	_swap+0
;ssd1309.c, 644 :: 		swap(&x1, &x2);
0x1C6C	0xAD04    ADD	R5, SP, #16
0x1C6E	0xAC02    ADD	R4, SP, #8
0x1C70	0x4629    MOV	R1, R5
0x1C72	0x4620    MOV	R0, R4
0x1C74	0xF7FEFEBE  BL	_swap+0
;ssd1309.c, 645 :: 		}
L_Draw_Triangle122:
;ssd1309.c, 647 :: 		if(y1 == y3)
0x1C78	0xF9BD5024  LDRSH	R5, [SP, #36]
0x1C7C	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1C80	0x42AC    CMP	R4, R5
0x1C82	0xD146    BNE	L_Draw_Triangle123
;ssd1309.c, 649 :: 		a = b = x1;
0x1C84	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1C88	0xF8AD4006  STRH	R4, [SP, #6]
0x1C8C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1C90	0xF8AD4004  STRH	R4, [SP, #4]
;ssd1309.c, 651 :: 		if(x2 < a)
0x1C94	0xF9BD5008  LDRSH	R5, [SP, #8]
0x1C98	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1C9C	0x42AC    CMP	R4, R5
0x1C9E	0xDA04    BGE	L_Draw_Triangle124
;ssd1309.c, 653 :: 		a = x2;
0x1CA0	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1CA4	0xF8AD4004  STRH	R4, [SP, #4]
;ssd1309.c, 654 :: 		}
0x1CA8	0xE009    B	L_Draw_Triangle125
L_Draw_Triangle124:
;ssd1309.c, 655 :: 		else if(x2 > b)
0x1CAA	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1CAE	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1CB2	0x42AC    CMP	R4, R5
0x1CB4	0xDD03    BLE	L_Draw_Triangle126
;ssd1309.c, 657 :: 		b = x2;
0x1CB6	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1CBA	0xF8AD4006  STRH	R4, [SP, #6]
;ssd1309.c, 658 :: 		}
L_Draw_Triangle126:
L_Draw_Triangle125:
;ssd1309.c, 659 :: 		if(x2 < a)
0x1CBE	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1CC2	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1CC6	0x42AC    CMP	R4, R5
0x1CC8	0xDA04    BGE	L_Draw_Triangle127
;ssd1309.c, 661 :: 		a = x3;
0x1CCA	0xF9BD4020  LDRSH	R4, [SP, #32]
0x1CCE	0xF8AD4004  STRH	R4, [SP, #4]
;ssd1309.c, 662 :: 		}
0x1CD2	0xE009    B	L_Draw_Triangle128
L_Draw_Triangle127:
;ssd1309.c, 663 :: 		else if(x3 > b)
0x1CD4	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1CD8	0xF9BD4020  LDRSH	R4, [SP, #32]
0x1CDC	0x42AC    CMP	R4, R5
0x1CDE	0xDD03    BLE	L_Draw_Triangle129
;ssd1309.c, 665 :: 		b = x3;
0x1CE0	0xF9BD4020  LDRSH	R4, [SP, #32]
0x1CE4	0xF8AD4006  STRH	R4, [SP, #6]
;ssd1309.c, 666 :: 		}
L_Draw_Triangle129:
L_Draw_Triangle128:
;ssd1309.c, 668 :: 		Draw_H_Line(a, (a + (b - (a + 1))), y1, colour);
0x1CE8	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1CEC	0x1C65    ADDS	R5, R4, #1
0x1CEE	0xB22D    SXTH	R5, R5
0x1CF0	0xF9BD4006  LDRSH	R4, [SP, #6]
0x1CF4	0x1B65    SUB	R5, R4, R5
0x1CF6	0xB22D    SXTH	R5, R5
0x1CF8	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1CFC	0x1964    ADDS	R4, R4, R5
0x1CFE	0xF8BD302C  LDRH	R3, [SP, #44]
0x1D02	0xF9BD200C  LDRSH	R2, [SP, #12]
0x1D06	0xB221    SXTH	R1, R4
0x1D08	0xF9BD0004  LDRSH	R0, [SP, #4]
0x1D0C	0xF7FFF832  BL	_Draw_H_Line+0
;ssd1309.c, 669 :: 		return;
0x1D10	0xE11B    B	L_end_Draw_Triangle
;ssd1309.c, 670 :: 		}
L_Draw_Triangle123:
;ssd1309.c, 672 :: 		dx12 = (x2 - x1);
0x1D12	0xF9BD5008  LDRSH	R5, [SP, #8]
0x1D16	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1D1A	0x1B64    SUB	R4, R4, R5
0x1D1C	0xF8AD401A  STRH	R4, [SP, #26]
;ssd1309.c, 673 :: 		dy12 = (y2 - y1);
0x1D20	0xF9BD500C  LDRSH	R5, [SP, #12]
0x1D24	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1D28	0x1B64    SUB	R4, R4, R5
0x1D2A	0xF8AD401E  STRH	R4, [SP, #30]
;ssd1309.c, 674 :: 		dx13 = (x3 - x1);
0x1D2E	0xF9BD5008  LDRSH	R5, [SP, #8]
0x1D32	0xF9BD4020  LDRSH	R4, [SP, #32]
0x1D36	0x1B64    SUB	R4, R4, R5
0x1D38	0xF8AD401C  STRH	R4, [SP, #28]
;ssd1309.c, 675 :: 		dy13 = (y3 - y1);
0x1D3C	0xF9BD500C  LDRSH	R5, [SP, #12]
0x1D40	0xF9BD4024  LDRSH	R4, [SP, #36]
0x1D44	0xEBA40C05  SUB	R12, R4, R5, LSL #0
0x1D48	0xFA0FFC8C  SXTH	R12, R12
; dy13 start address is: 48 (R12)
;ssd1309.c, 676 :: 		dx23 = (x3 - x2);
0x1D4C	0xF9BD5010  LDRSH	R5, [SP, #16]
0x1D50	0xF9BD4020  LDRSH	R4, [SP, #32]
0x1D54	0xEBA40905  SUB	R9, R4, R5, LSL #0
0x1D58	0xFA0FF989  SXTH	R9, R9
; dx23 start address is: 36 (R9)
;ssd1309.c, 677 :: 		dy23 = (y3 - y2);
0x1D5C	0xF9BD5014  LDRSH	R5, [SP, #20]
0x1D60	0xF9BD4024  LDRSH	R4, [SP, #36]
0x1D64	0xEBA40B05  SUB	R11, R4, R5, LSL #0
0x1D68	0xFA0FFB8B  SXTH	R11, R11
; dy23 start address is: 44 (R11)
;ssd1309.c, 678 :: 		sa = 0,
; sa start address is: 28 (R7)
0x1D6C	0x2700    MOVS	R7, #0
0x1D6E	0xB23F    SXTH	R7, R7
;ssd1309.c, 679 :: 		sb = 0;
0x1D70	0x2400    MOVS	R4, #0
0x1D72	0xB224    SXTH	R4, R4
0x1D74	0xF8AD4016  STRH	R4, [SP, #22]
;ssd1309.c, 681 :: 		if(y2 == y3)
0x1D78	0xF9BD5024  LDRSH	R5, [SP, #36]
0x1D7C	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1D80	0x42AC    CMP	R4, R5
0x1D82	0xD104    BNE	L_Draw_Triangle130
;ssd1309.c, 683 :: 		last = y2;
0x1D84	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1D88	0xF8AD4018  STRH	R4, [SP, #24]
;ssd1309.c, 684 :: 		}
0x1D8C	0xE004    B	L_Draw_Triangle131
L_Draw_Triangle130:
;ssd1309.c, 687 :: 		last = (y2 - 1);
0x1D8E	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1D92	0x1E64    SUBS	R4, R4, #1
0x1D94	0xF8AD4018  STRH	R4, [SP, #24]
;ssd1309.c, 688 :: 		}
L_Draw_Triangle131:
;ssd1309.c, 690 :: 		for(yp = y1; yp <= last; yp++)
; yp start address is: 32 (R8)
0x1D98	0xF9BD800C  LDRSH	R8, [SP, #12]
; sa end address is: 28 (R7)
; dy13 end address is: 48 (R12)
; dx23 end address is: 36 (R9)
; dy23 end address is: 44 (R11)
; yp end address is: 32 (R8)
0x1D9C	0xB238    SXTH	R0, R7
L_Draw_Triangle132:
; yp start address is: 32 (R8)
; sa start address is: 0 (R0)
; dy23 start address is: 44 (R11)
; dx23 start address is: 36 (R9)
; dy13 start address is: 48 (R12)
0x1D9E	0xF9BD4018  LDRSH	R4, [SP, #24]
0x1DA2	0x45A0    CMP	R8, R4
0x1DA4	0xDC47    BGT	L_Draw_Triangle133
;ssd1309.c, 692 :: 		a = (x1 + (sa / dy12));
0x1DA6	0xF9BD401E  LDRSH	R4, [SP, #30]
0x1DAA	0xFB90F5F4  SDIV	R5, R0, R4
0x1DAE	0xB22D    SXTH	R5, R5
0x1DB0	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1DB4	0x1967    ADDS	R7, R4, R5
0x1DB6	0xB23F    SXTH	R7, R7
0x1DB8	0xF8AD7004  STRH	R7, [SP, #4]
;ssd1309.c, 693 :: 		b = (x1 + (sb / dy13));
0x1DBC	0xF9BD4016  LDRSH	R4, [SP, #22]
0x1DC0	0xFB94F5FC  SDIV	R5, R4, R12
0x1DC4	0xB22D    SXTH	R5, R5
0x1DC6	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1DCA	0x1966    ADDS	R6, R4, R5
0x1DCC	0xB236    SXTH	R6, R6
0x1DCE	0xF8AD6006  STRH	R6, [SP, #6]
;ssd1309.c, 694 :: 		sa += dx12;
0x1DD2	0xF9BD401A  LDRSH	R4, [SP, #26]
0x1DD6	0xEB000A04  ADD	R10, R0, R4, LSL #0
0x1DDA	0xFA0FFA8A  SXTH	R10, R10
; sa end address is: 0 (R0)
; sa start address is: 40 (R10)
;ssd1309.c, 695 :: 		sb += dx13;
0x1DDE	0xF9BD501C  LDRSH	R5, [SP, #28]
0x1DE2	0xF9BD4016  LDRSH	R4, [SP, #22]
0x1DE6	0x1964    ADDS	R4, R4, R5
0x1DE8	0xF8AD4016  STRH	R4, [SP, #22]
;ssd1309.c, 696 :: 		if(a > b)
0x1DEC	0x42B7    CMP	R7, R6
0x1DEE	0xDD06    BLE	L_Draw_Triangle135
;ssd1309.c, 698 :: 		swap(&a, &b);
0x1DF0	0xF10D0506  ADD	R5, SP, #6
0x1DF4	0xAC01    ADD	R4, SP, #4
0x1DF6	0x4629    MOV	R1, R5
0x1DF8	0x4620    MOV	R0, R4
0x1DFA	0xF7FEFDFB  BL	_swap+0
;ssd1309.c, 699 :: 		}
L_Draw_Triangle135:
;ssd1309.c, 700 :: 		Draw_H_Line(a, (a + (b - (a + 1))), yp, colour);
0x1DFE	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1E02	0x1C65    ADDS	R5, R4, #1
0x1E04	0xB22D    SXTH	R5, R5
0x1E06	0xF9BD4006  LDRSH	R4, [SP, #6]
0x1E0A	0x1B65    SUB	R5, R4, R5
0x1E0C	0xB22D    SXTH	R5, R5
0x1E0E	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1E12	0x1964    ADDS	R4, R4, R5
0x1E14	0xF8BD302C  LDRH	R3, [SP, #44]
0x1E18	0xFA0FF288  SXTH	R2, R8
0x1E1C	0xB221    SXTH	R1, R4
0x1E1E	0xF9BD0004  LDRSH	R0, [SP, #4]
0x1E22	0xF7FEFFA7  BL	_Draw_H_Line+0
;ssd1309.c, 690 :: 		for(yp = y1; yp <= last; yp++)
0x1E26	0xF1080401  ADD	R4, R8, #1
; yp end address is: 32 (R8)
; yp start address is: 0 (R0)
0x1E2A	0xB220    SXTH	R0, R4
;ssd1309.c, 701 :: 		}
; yp end address is: 0 (R0)
; sa end address is: 40 (R10)
0x1E2C	0xFA0FF880  SXTH	R8, R0
0x1E30	0xFA0FF08A  SXTH	R0, R10
0x1E34	0xE7B3    B	L_Draw_Triangle132
L_Draw_Triangle133:
;ssd1309.c, 703 :: 		sa = (dx23 * (yp - y2));
; yp start address is: 32 (R8)
0x1E36	0xF9BD4014  LDRSH	R4, [SP, #20]
0x1E3A	0xEBA80404  SUB	R4, R8, R4, LSL #0
0x1E3E	0xB224    SXTH	R4, R4
0x1E40	0xFB09F004  MUL	R0, R9, R4
0x1E44	0xB200    SXTH	R0, R0
; sa start address is: 0 (R0)
;ssd1309.c, 704 :: 		sb = (dx13 * (yp - y1));
0x1E46	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1E4A	0xEBA80504  SUB	R5, R8, R4, LSL #0
0x1E4E	0xB22D    SXTH	R5, R5
0x1E50	0xF9BD401C  LDRSH	R4, [SP, #28]
0x1E54	0x436C    MULS	R4, R5, R4
0x1E56	0xF8AD4016  STRH	R4, [SP, #22]
; sa end address is: 0 (R0)
; yp end address is: 32 (R8)
;ssd1309.c, 705 :: 		for(; yp <= y3; yp++)
L_Draw_Triangle136:
; sa start address is: 0 (R0)
; dy13 start address is: 48 (R12)
; dy13 end address is: 48 (R12)
; dx23 start address is: 36 (R9)
; dx23 end address is: 36 (R9)
; dy23 start address is: 44 (R11)
; dy23 end address is: 44 (R11)
; yp start address is: 32 (R8)
0x1E5A	0xF9BD4024  LDRSH	R4, [SP, #36]
0x1E5E	0x45A0    CMP	R8, R4
0x1E60	0xDC43    BGT	L_Draw_Triangle137
; dy13 end address is: 48 (R12)
; dx23 end address is: 36 (R9)
; dy23 end address is: 44 (R11)
;ssd1309.c, 707 :: 		a = (x2 + (sa / dy23));
; dy23 start address is: 44 (R11)
; dx23 start address is: 36 (R9)
; dy13 start address is: 48 (R12)
0x1E62	0xFB90F5FB  SDIV	R5, R0, R11
0x1E66	0xB22D    SXTH	R5, R5
0x1E68	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1E6C	0x1967    ADDS	R7, R4, R5
0x1E6E	0xB23F    SXTH	R7, R7
0x1E70	0xF8AD7004  STRH	R7, [SP, #4]
;ssd1309.c, 708 :: 		b = (x1 + (sb / dy13));
0x1E74	0xF9BD4016  LDRSH	R4, [SP, #22]
0x1E78	0xFB94F5FC  SDIV	R5, R4, R12
0x1E7C	0xB22D    SXTH	R5, R5
0x1E7E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1E82	0x1966    ADDS	R6, R4, R5
0x1E84	0xB236    SXTH	R6, R6
0x1E86	0xF8AD6006  STRH	R6, [SP, #6]
;ssd1309.c, 709 :: 		sa += dx23;
0x1E8A	0xEB000409  ADD	R4, R0, R9, LSL #0
; sa end address is: 0 (R0)
; sa start address is: 40 (R10)
0x1E8E	0xFA0FFA84  SXTH	R10, R4
;ssd1309.c, 710 :: 		sb += dx13;
0x1E92	0xF9BD501C  LDRSH	R5, [SP, #28]
0x1E96	0xF9BD4016  LDRSH	R4, [SP, #22]
0x1E9A	0x1964    ADDS	R4, R4, R5
0x1E9C	0xF8AD4016  STRH	R4, [SP, #22]
;ssd1309.c, 712 :: 		if(a > b)
0x1EA0	0x42B7    CMP	R7, R6
0x1EA2	0xDD06    BLE	L_Draw_Triangle139
;ssd1309.c, 714 :: 		swap(&a, &b);
0x1EA4	0xF10D0506  ADD	R5, SP, #6
0x1EA8	0xAC01    ADD	R4, SP, #4
0x1EAA	0x4629    MOV	R1, R5
0x1EAC	0x4620    MOV	R0, R4
0x1EAE	0xF7FEFDA1  BL	_swap+0
;ssd1309.c, 715 :: 		}
L_Draw_Triangle139:
;ssd1309.c, 716 :: 		Draw_H_Line(a, (a + (b - (a + 1))), yp, colour);
0x1EB2	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1EB6	0x1C65    ADDS	R5, R4, #1
0x1EB8	0xB22D    SXTH	R5, R5
0x1EBA	0xF9BD4006  LDRSH	R4, [SP, #6]
0x1EBE	0x1B65    SUB	R5, R4, R5
0x1EC0	0xB22D    SXTH	R5, R5
0x1EC2	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1EC6	0x1964    ADDS	R4, R4, R5
0x1EC8	0xF8BD302C  LDRH	R3, [SP, #44]
0x1ECC	0xFA0FF288  SXTH	R2, R8
0x1ED0	0xB221    SXTH	R1, R4
0x1ED2	0xF9BD0004  LDRSH	R0, [SP, #4]
0x1ED6	0xF7FEFF4D  BL	_Draw_H_Line+0
;ssd1309.c, 705 :: 		for(; yp <= y3; yp++)
0x1EDA	0xF1080401  ADD	R4, R8, #1
; yp end address is: 32 (R8)
; yp start address is: 4 (R1)
0x1EDE	0xB221    SXTH	R1, R4
;ssd1309.c, 717 :: 		}
0x1EE0	0xFA0FF881  SXTH	R8, R1
; dy13 end address is: 48 (R12)
; dx23 end address is: 36 (R9)
; dy23 end address is: 44 (R11)
; sa end address is: 40 (R10)
; yp end address is: 4 (R1)
0x1EE4	0xFA0FF08A  SXTH	R0, R10
0x1EE8	0xE7B7    B	L_Draw_Triangle136
L_Draw_Triangle137:
;ssd1309.c, 720 :: 		break;
0x1EEA	0xE02E    B	L_Draw_Triangle118
;ssd1309.c, 722 :: 		default:
L_Draw_Triangle140:
;ssd1309.c, 724 :: 		Draw_Line(x1, y1, x2, y2, colour);
0x1EEC	0xF8BD402C  LDRH	R4, [SP, #44]
0x1EF0	0xF9BD3014  LDRSH	R3, [SP, #20]
0x1EF4	0xF9BD2010  LDRSH	R2, [SP, #16]
0x1EF8	0xF9BD100C  LDRSH	R1, [SP, #12]
0x1EFC	0xF9BD0008  LDRSH	R0, [SP, #8]
0x1F00	0xB410    PUSH	(R4)
0x1F02	0xF7FFF847  BL	_Draw_Line+0
0x1F06	0xB001    ADD	SP, SP, #4
;ssd1309.c, 725 :: 		Draw_Line(x2, y2, x3, y3, colour);
0x1F08	0xF8BD402C  LDRH	R4, [SP, #44]
0x1F0C	0xF9BD3024  LDRSH	R3, [SP, #36]
0x1F10	0xF9BD2020  LDRSH	R2, [SP, #32]
0x1F14	0xF9BD1014  LDRSH	R1, [SP, #20]
0x1F18	0xF9BD0010  LDRSH	R0, [SP, #16]
0x1F1C	0xB410    PUSH	(R4)
0x1F1E	0xF7FFF839  BL	_Draw_Line+0
0x1F22	0xB001    ADD	SP, SP, #4
;ssd1309.c, 726 :: 		Draw_Line(x3, y3, x1, y1, colour);
0x1F24	0xF8BD402C  LDRH	R4, [SP, #44]
0x1F28	0xF9BD300C  LDRSH	R3, [SP, #12]
0x1F2C	0xF9BD2008  LDRSH	R2, [SP, #8]
0x1F30	0xF9BD1024  LDRSH	R1, [SP, #36]
0x1F34	0xF9BD0020  LDRSH	R0, [SP, #32]
0x1F38	0xB410    PUSH	(R4)
0x1F3A	0xF7FFF82B  BL	_Draw_Line+0
0x1F3E	0xB001    ADD	SP, SP, #4
;ssd1309.c, 727 :: 		break;
0x1F40	0xE003    B	L_Draw_Triangle118
;ssd1309.c, 729 :: 		}
L_Draw_Triangle117:
; fill start address is: 0 (R0)
0x1F42	0x2801    CMP	R0, #1
0x1F44	0xF43FAE62  BEQ	L_Draw_Triangle119
; fill end address is: 0 (R0)
0x1F48	0xE7D0    B	L_Draw_Triangle140
L_Draw_Triangle118:
;ssd1309.c, 730 :: 		}
L_end_Draw_Triangle:
0x1F4A	0xF8DDE000  LDR	LR, [SP, #0]
0x1F4E	0xB008    ADD	SP, SP, #32
0x1F50	0x4770    BX	LR
; end of _Draw_Triangle
_swap:
;ssd1309.c, 37 :: 		void swap(signed int *a, signed int *b)
; b start address is: 4 (R1)
; a start address is: 0 (R0)
; b end address is: 4 (R1)
; a end address is: 0 (R0)
; a start address is: 0 (R0)
; b start address is: 4 (R1)
;ssd1309.c, 39 :: 		signed int temp = 0x0000;
;ssd1309.c, 41 :: 		temp = *b;
0x09F4	0xF9B12000  LDRSH	R2, [R1, #0]
; temp start address is: 12 (R3)
0x09F8	0xB213    SXTH	R3, R2
;ssd1309.c, 42 :: 		*b = *a;
0x09FA	0xF9B02000  LDRSH	R2, [R0, #0]
0x09FE	0x800A    STRH	R2, [R1, #0]
; b end address is: 4 (R1)
;ssd1309.c, 43 :: 		*a = temp;
0x0A00	0x8003    STRH	R3, [R0, #0]
; a end address is: 0 (R0)
; temp end address is: 12 (R3)
;ssd1309.c, 44 :: 		}
L_end_swap:
0x0A02	0x4770    BX	LR
; end of _swap
_Draw_H_Line:
;ssd1309.c, 594 :: 		void Draw_H_Line(signed int x1, signed int x2, signed int y1, unsigned colour)
; colour start address is: 12 (R3)
; y1 start address is: 8 (R2)
0x0D74	0xB084    SUB	SP, SP, #16
0x0D76	0xF8CDE000  STR	LR, [SP, #0]
0x0D7A	0xF8AD0008  STRH	R0, [SP, #8]
0x0D7E	0xF8AD100C  STRH	R1, [SP, #12]
0x0D82	0xB216    SXTH	R6, R2
0x0D84	0xB29F    UXTH	R7, R3
; colour end address is: 12 (R3)
; y1 end address is: 8 (R2)
; y1 start address is: 24 (R6)
; colour start address is: 28 (R7)
;ssd1309.c, 596 :: 		signed int pos = 0;
;ssd1309.c, 597 :: 		signed int temp = 0;
;ssd1309.c, 599 :: 		if(x1 > x2)
0x0D86	0xF9BD500C  LDRSH	R5, [SP, #12]
0x0D8A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x0D8E	0x42AC    CMP	R4, R5
0x0D90	0xDD05    BLE	L_Draw_H_Line114
;ssd1309.c, 601 :: 		swap(&x1, &x2);
0x0D92	0xAD03    ADD	R5, SP, #12
0x0D94	0xAC02    ADD	R4, SP, #8
0x0D96	0x4629    MOV	R1, R5
0x0D98	0x4620    MOV	R0, R4
0x0D9A	0xF7FFFE2B  BL	_swap+0
;ssd1309.c, 602 :: 		}
L_Draw_H_Line114:
;ssd1309.c, 604 :: 		while(x2 > (x1 - 1))
0x0D9E	0xF8AD7004  STRH	R7, [SP, #4]
; colour end address is: 28 (R7)
0x0DA2	0xB237    SXTH	R7, R6
0x0DA4	0xF8BD6004  LDRH	R6, [SP, #4]
L_Draw_H_Line115:
; y1 end address is: 24 (R6)
; y1 start address is: 28 (R7)
; colour start address is: 24 (R6)
; colour start address is: 24 (R6)
; colour end address is: 24 (R6)
; y1 start address is: 28 (R7)
; y1 end address is: 28 (R7)
0x0DA8	0xF9BD4008  LDRSH	R4, [SP, #8]
0x0DAC	0x1E65    SUBS	R5, R4, #1
0x0DAE	0xB22D    SXTH	R5, R5
0x0DB0	0xF9BD400C  LDRSH	R4, [SP, #12]
0x0DB4	0x42AC    CMP	R4, R5
0x0DB6	0xDD0B    BLE	L_Draw_H_Line116
; colour end address is: 24 (R6)
; y1 end address is: 28 (R7)
;ssd1309.c, 606 :: 		Draw_Pixel(x2, y1, colour);
; y1 start address is: 28 (R7)
; colour start address is: 24 (R6)
0x0DB8	0xB2F2    UXTB	R2, R6
0x0DBA	0xB2F9    UXTB	R1, R7
0x0DBC	0xF9BD000C  LDRSH	R0, [SP, #12]
0x0DC0	0xF7FFFCBA  BL	_Draw_Pixel+0
;ssd1309.c, 607 :: 		x2--;
0x0DC4	0xF9BD400C  LDRSH	R4, [SP, #12]
0x0DC8	0x1E64    SUBS	R4, R4, #1
0x0DCA	0xF8AD400C  STRH	R4, [SP, #12]
;ssd1309.c, 608 :: 		}
; colour end address is: 24 (R6)
; y1 end address is: 28 (R7)
0x0DCE	0xE7EB    B	L_Draw_H_Line115
L_Draw_H_Line116:
;ssd1309.c, 609 :: 		}
L_end_Draw_H_Line:
0x0DD0	0xF8DDE000  LDR	LR, [SP, #0]
0x0DD4	0xB004    ADD	SP, SP, #16
0x0DD6	0x4770    BX	LR
; end of _Draw_H_Line
_OLED_print_string:
;ssd1309.c, 251 :: 		void OLED_print_string(unsigned char x_pos, unsigned char y_pos, unsigned char *ch)
; ch start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x1880	0xB082    SUB	SP, SP, #8
0x1882	0xF8CDE000  STR	LR, [SP, #0]
; ch end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 4 (R1)
; ch start address is: 8 (R2)
;ssd1309.c, 253 :: 		unsigned char chr = 0x00;
;ssd1309.c, 254 :: 		unsigned char i = 0x00;
;ssd1309.c, 255 :: 		unsigned char j = 0x00;
; j start address is: 40 (R10)
0x1886	0xF2400A00  MOVW	R10, #0
; x_pos end address is: 0 (R0)
; y_pos end address is: 4 (R1)
; ch end address is: 8 (R2)
; j end address is: 40 (R10)
0x188A	0xF88D1004  STRB	R1, [SP, #4]
0x188E	0xB2C1    UXTB	R1, R0
0x1890	0x4617    MOV	R7, R2
0x1892	0xF89D0004  LDRB	R0, [SP, #4]
;ssd1309.c, 257 :: 		while(ch[j] != '\0')
L_OLED_print_string39:
; j start address is: 40 (R10)
; ch start address is: 28 (R7)
; y_pos start address is: 0 (R0)
; x_pos start address is: 4 (R1)
0x1896	0xEB07030A  ADD	R3, R7, R10, LSL #0
0x189A	0x781B    LDRB	R3, [R3, #0]
0x189C	0xB383    CBZ	R3, L_OLED_print_string40
;ssd1309.c, 259 :: 		chr = (ch[j] - 32);
0x189E	0xEB07030A  ADD	R3, R7, R10, LSL #0
0x18A2	0x781B    LDRB	R3, [R3, #0]
0x18A4	0x3B20    SUBS	R3, #32
; chr start address is: 36 (R9)
0x18A6	0xFA5FF983  UXTB	R9, R3
;ssd1309.c, 261 :: 		if(x_pos > (x_max - 0x06))
0x18AA	0x297A    CMP	R1, #122
0x18AC	0xDD04    BLE	L__OLED_print_string232
;ssd1309.c, 263 :: 		x_pos = 0x00;
0x18AE	0x2100    MOVS	R1, #0
;ssd1309.c, 264 :: 		y_pos++;
0x18B0	0x1C46    ADDS	R6, R0, #1
0x18B2	0xB2F6    UXTB	R6, R6
; y_pos end address is: 0 (R0)
; y_pos start address is: 24 (R6)
; y_pos end address is: 24 (R6)
; x_pos end address is: 4 (R1)
0x18B4	0xB2CD    UXTB	R5, R1
;ssd1309.c, 265 :: 		}
0x18B6	0xE001    B	L_OLED_print_string41
L__OLED_print_string232:
;ssd1309.c, 261 :: 		if(x_pos > (x_max - 0x06))
0x18B8	0xB2C6    UXTB	R6, R0
0x18BA	0xB2CD    UXTB	R5, R1
;ssd1309.c, 265 :: 		}
L_OLED_print_string41:
;ssd1309.c, 266 :: 		OLED_gotoxy(x_pos, y_pos);
; y_pos start address is: 24 (R6)
; x_pos start address is: 20 (R5)
0x18BC	0xB2F1    UXTB	R1, R6
0x18BE	0xB2E8    UXTB	R0, R5
0x18C0	0xF7FEFEEA  BL	_OLED_gotoxy+0
;ssd1309.c, 268 :: 		for(i = 0x00; i < 0x06; i++)
; i start address is: 32 (R8)
0x18C4	0xF2400800  MOVW	R8, #0
; x_pos end address is: 20 (R5)
; y_pos end address is: 24 (R6)
; ch end address is: 28 (R7)
; i end address is: 32 (R8)
; j end address is: 40 (R10)
L_OLED_print_string42:
; i start address is: 32 (R8)
; x_pos start address is: 20 (R5)
; y_pos start address is: 24 (R6)
; chr start address is: 36 (R9)
; chr end address is: 36 (R9)
; ch start address is: 28 (R7)
; j start address is: 40 (R10)
0x18C8	0xF1B80F06  CMP	R8, #6
0x18CC	0xD210    BCS	L_OLED_print_string43
; chr end address is: 36 (R9)
;ssd1309.c, 270 :: 		OLED_write(font_regular[chr][i], DAT);
; chr start address is: 36 (R9)
0x18CE	0x2306    MOVS	R3, #6
0x18D0	0xFB03F409  MUL	R4, R3, R9
0x18D4	0x4B0C    LDR	R3, [PC, #48]
0x18D6	0x191B    ADDS	R3, R3, R4
0x18D8	0xEB030308  ADD	R3, R3, R8, LSL #0
0x18DC	0x781B    LDRB	R3, [R3, #0]
0x18DE	0x2101    MOVS	R1, #1
0x18E0	0xB2D8    UXTB	R0, R3
0x18E2	0xF7FEFFD5  BL	_OLED_write+0
;ssd1309.c, 268 :: 		for(i = 0x00; i < 0x06; i++)
0x18E6	0xF1080801  ADD	R8, R8, #1
0x18EA	0xFA5FF888  UXTB	R8, R8
;ssd1309.c, 271 :: 		}
; chr end address is: 36 (R9)
; i end address is: 32 (R8)
0x18EE	0xE7EB    B	L_OLED_print_string42
L_OLED_print_string43:
;ssd1309.c, 273 :: 		j++;
0x18F0	0xF10A0A01  ADD	R10, R10, #1
0x18F4	0xFA5FFA8A  UXTB	R10, R10
;ssd1309.c, 274 :: 		x_pos += 6;
0x18F8	0x1DAB    ADDS	R3, R5, #6
; x_pos end address is: 20 (R5)
; x_pos start address is: 4 (R1)
0x18FA	0xB2D9    UXTB	R1, R3
;ssd1309.c, 275 :: 		}
; y_pos end address is: 24 (R6)
; ch end address is: 28 (R7)
; j end address is: 40 (R10)
; x_pos end address is: 4 (R1)
0x18FC	0xB2F0    UXTB	R0, R6
0x18FE	0xE7CA    B	L_OLED_print_string39
L_OLED_print_string40:
;ssd1309.c, 276 :: 		}
L_end_OLED_print_string:
0x1900	0xF8DDE000  LDR	LR, [SP, #0]
0x1904	0xB002    ADD	SP, SP, #8
0x1906	0x4770    BX	LR
0x1908	0x29480000  	_font_regular+0
; end of _OLED_print_string
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x190C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x190E	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x1912	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x1916	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x191A	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x191C	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x191E	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x1920	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x1922	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x1926	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x1928	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x192C	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x192E	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x1930	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x1934	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x1936	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x1938	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x193A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x193E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x1942	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x1944	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x1946	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x1948	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x194A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x194E	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x1950	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x1952	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x1956	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x1958	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x195A	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x195E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x1960	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x1962	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x1964	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x1966	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x1968	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x196A	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x196C	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x196E	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x1970	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x1972	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x1974	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x1976	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x1978	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x197C	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x197E	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x1982	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x1984	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x1988	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x198C	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x198E	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x1990	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x1994	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x1996	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x1998	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x199A	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x199E	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x19A2	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x19A6	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x19A8	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x19AA	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x19AE	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x19B0	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x19B4	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x19B8	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x19BA	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x19BC	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x19BE	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x19C2	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x19C6	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x19C8	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x19CC	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x19CE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x19D0	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x19D4	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x19D6	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x19D8	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x19DA	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x19DE	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x19E2	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x19E6	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x19EA	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x19EE	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x19F0	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x19F2	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x19F6	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x19FA	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x19FC	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x1A00	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x1A02	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x1A06	0xB001    ADD	SP, SP, #4
0x1A08	0x4770    BX	LR
; end of __Add_FP
_OLED_print_float:
;ssd1309.c, 434 :: 		void OLED_print_float(unsigned char x_pos, unsigned char y_pos, float value, unsigned char points)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x13A8	0xB085    SUB	SP, SP, #20
0x13AA	0xF8CDE000  STR	LR, [SP, #0]
0x13AE	0xFA5FFB80  UXTB	R11, R0
0x13B2	0xFA5FFC81  UXTB	R12, R1
0x13B6	0x9201    STR	R2, [SP, #4]
0x13B8	0xF88D3008  STRB	R3, [SP, #8]
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 44 (R11)
; y_pos start address is: 48 (R12)
;ssd1309.c, 436 :: 		signed long tmp = 0x00;
;ssd1309.c, 438 :: 		tmp = value;
0x13BC	0x9801    LDR	R0, [SP, #4]
0x13BE	0xF7FFFB21  BL	__FloatToSignedIntegral+0
0x13C2	0x9003    STR	R0, [SP, #12]
;ssd1309.c, 439 :: 		OLED_print_int(x_pos, y_pos, tmp);
0x13C4	0x4602    MOV	R2, R0
0x13C6	0xFA5FF18C  UXTB	R1, R12
0x13CA	0xFA5FF08B  UXTB	R0, R11
0x13CE	0xF7FFFB3B  BL	_OLED_print_int+0
;ssd1309.c, 440 :: 		tmp = ((value - tmp) * 10000);
0x13D2	0x9803    LDR	R0, [SP, #12]
0x13D4	0xF7FFFAEE  BL	__SignedIntegralToFloat+0
0x13D8	0x9004    STR	R0, [SP, #16]
0x13DA	0x9A04    LDR	R2, [SP, #16]
0x13DC	0x9801    LDR	R0, [SP, #4]
0x13DE	0xF7FFFE81  BL	__Sub_FP+0
0x13E2	0x4A57    LDR	R2, [PC, #348]
0x13E4	0xF7FFFD90  BL	__Mul_FP+0
0x13E8	0xF7FFFB0C  BL	__FloatToSignedIntegral+0
0x13EC	0x9003    STR	R0, [SP, #12]
;ssd1309.c, 442 :: 		if(tmp < 0)
0x13EE	0x2800    CMP	R0, #0
0x13F0	0xDA02    BGE	L_OLED_print_float77
;ssd1309.c, 444 :: 		tmp = -tmp;
0x13F2	0x9C03    LDR	R4, [SP, #12]
0x13F4	0x4264    RSBS	R4, R4, #0
0x13F6	0x9403    STR	R4, [SP, #12]
;ssd1309.c, 445 :: 		}
L_OLED_print_float77:
;ssd1309.c, 447 :: 		if((value >= 10000) && (value < 100000))
0x13F8	0x9A01    LDR	R2, [SP, #4]
0x13FA	0x4851    LDR	R0, [PC, #324]
0x13FC	0xF7FFFD50  BL	__Compare_FP+0
0x1400	0xF2400000  MOVW	R0, #0
0x1404	0xDC00    BGT	L__OLED_print_float283
0x1406	0x2001    MOVS	R0, #1
L__OLED_print_float283:
0x1408	0xB198    CBZ	R0, L__OLED_print_float256
0x140A	0x9A01    LDR	R2, [SP, #4]
0x140C	0x484D    LDR	R0, [PC, #308]
0x140E	0xF7FFFD47  BL	__Compare_FP+0
0x1412	0xF2400000  MOVW	R0, #0
0x1416	0xDD00    BLE	L__OLED_print_float284
0x1418	0x2001    MOVS	R0, #1
L__OLED_print_float284:
0x141A	0xB150    CBZ	R0, L__OLED_print_float255
L__OLED_print_float254:
;ssd1309.c, 449 :: 		OLED_print_decimal((x_pos + 36), y_pos, tmp, points);
0x141C	0xF10B0424  ADD	R4, R11, #36
; x_pos end address is: 44 (R11)
0x1420	0xF89D3008  LDRB	R3, [SP, #8]
0x1424	0x9A03    LDR	R2, [SP, #12]
0x1426	0xFA5FF18C  UXTB	R1, R12
; y_pos end address is: 48 (R12)
0x142A	0xB2E0    UXTB	R0, R4
0x142C	0xF7FFFCD4  BL	_OLED_print_decimal+0
;ssd1309.c, 450 :: 		}
0x1430	0xE082    B	L_OLED_print_float81
;ssd1309.c, 447 :: 		if((value >= 10000) && (value < 100000))
L__OLED_print_float256:
; y_pos start address is: 48 (R12)
; x_pos start address is: 44 (R11)
L__OLED_print_float255:
;ssd1309.c, 451 :: 		else if((value >= 1000) && (value < 10000))
0x1432	0x9A01    LDR	R2, [SP, #4]
0x1434	0x4844    LDR	R0, [PC, #272]
0x1436	0xF7FFFD33  BL	__Compare_FP+0
0x143A	0xF2400000  MOVW	R0, #0
0x143E	0xDC00    BGT	L__OLED_print_float285
0x1440	0x2001    MOVS	R0, #1
L__OLED_print_float285:
0x1442	0xB198    CBZ	R0, L__OLED_print_float258
0x1444	0x9A01    LDR	R2, [SP, #4]
0x1446	0x483E    LDR	R0, [PC, #248]
0x1448	0xF7FFFD2A  BL	__Compare_FP+0
0x144C	0xF2400000  MOVW	R0, #0
0x1450	0xDD00    BLE	L__OLED_print_float286
0x1452	0x2001    MOVS	R0, #1
L__OLED_print_float286:
0x1454	0xB150    CBZ	R0, L__OLED_print_float257
L__OLED_print_float253:
;ssd1309.c, 453 :: 		OLED_print_decimal((x_pos + 30), y_pos, tmp, points);
0x1456	0xF10B041E  ADD	R4, R11, #30
; x_pos end address is: 44 (R11)
0x145A	0xF89D3008  LDRB	R3, [SP, #8]
0x145E	0x9A03    LDR	R2, [SP, #12]
0x1460	0xFA5FF18C  UXTB	R1, R12
; y_pos end address is: 48 (R12)
0x1464	0xB2E0    UXTB	R0, R4
0x1466	0xF7FFFCB7  BL	_OLED_print_decimal+0
;ssd1309.c, 454 :: 		}
0x146A	0xE065    B	L_OLED_print_float85
;ssd1309.c, 451 :: 		else if((value >= 1000) && (value < 10000))
L__OLED_print_float258:
; y_pos start address is: 48 (R12)
; x_pos start address is: 44 (R11)
L__OLED_print_float257:
;ssd1309.c, 455 :: 		else if((value >= 100) && (value < 1000))
0x146C	0x9A01    LDR	R2, [SP, #4]
0x146E	0x4837    LDR	R0, [PC, #220]
0x1470	0xF7FFFD16  BL	__Compare_FP+0
0x1474	0xF2400000  MOVW	R0, #0
0x1478	0xDC00    BGT	L__OLED_print_float287
0x147A	0x2001    MOVS	R0, #1
L__OLED_print_float287:
0x147C	0xB198    CBZ	R0, L__OLED_print_float260
0x147E	0x9A01    LDR	R2, [SP, #4]
0x1480	0x4831    LDR	R0, [PC, #196]
0x1482	0xF7FFFD0D  BL	__Compare_FP+0
0x1486	0xF2400000  MOVW	R0, #0
0x148A	0xDD00    BLE	L__OLED_print_float288
0x148C	0x2001    MOVS	R0, #1
L__OLED_print_float288:
0x148E	0xB150    CBZ	R0, L__OLED_print_float259
L__OLED_print_float252:
;ssd1309.c, 457 :: 		OLED_print_decimal((x_pos + 24), y_pos, tmp, points);
0x1490	0xF10B0418  ADD	R4, R11, #24
; x_pos end address is: 44 (R11)
0x1494	0xF89D3008  LDRB	R3, [SP, #8]
0x1498	0x9A03    LDR	R2, [SP, #12]
0x149A	0xFA5FF18C  UXTB	R1, R12
; y_pos end address is: 48 (R12)
0x149E	0xB2E0    UXTB	R0, R4
0x14A0	0xF7FFFC9A  BL	_OLED_print_decimal+0
;ssd1309.c, 458 :: 		}
0x14A4	0xE048    B	L_OLED_print_float89
;ssd1309.c, 455 :: 		else if((value >= 100) && (value < 1000))
L__OLED_print_float260:
; y_pos start address is: 48 (R12)
; x_pos start address is: 44 (R11)
L__OLED_print_float259:
;ssd1309.c, 459 :: 		else if((value >= 10) && (value < 100))
0x14A6	0x9A01    LDR	R2, [SP, #4]
0x14A8	0x4829    LDR	R0, [PC, #164]
0x14AA	0xF7FFFCF9  BL	__Compare_FP+0
0x14AE	0xF2400000  MOVW	R0, #0
0x14B2	0xDC00    BGT	L__OLED_print_float289
0x14B4	0x2001    MOVS	R0, #1
L__OLED_print_float289:
0x14B6	0xB198    CBZ	R0, L__OLED_print_float262
0x14B8	0x9A01    LDR	R2, [SP, #4]
0x14BA	0x4824    LDR	R0, [PC, #144]
0x14BC	0xF7FFFCF0  BL	__Compare_FP+0
0x14C0	0xF2400000  MOVW	R0, #0
0x14C4	0xDD00    BLE	L__OLED_print_float290
0x14C6	0x2001    MOVS	R0, #1
L__OLED_print_float290:
0x14C8	0xB150    CBZ	R0, L__OLED_print_float261
L__OLED_print_float251:
;ssd1309.c, 461 :: 		OLED_print_decimal((x_pos + 18), y_pos, tmp, points);
0x14CA	0xF10B0412  ADD	R4, R11, #18
; x_pos end address is: 44 (R11)
0x14CE	0xF89D3008  LDRB	R3, [SP, #8]
0x14D2	0x9A03    LDR	R2, [SP, #12]
0x14D4	0xFA5FF18C  UXTB	R1, R12
; y_pos end address is: 48 (R12)
0x14D8	0xB2E0    UXTB	R0, R4
0x14DA	0xF7FFFC7D  BL	_OLED_print_decimal+0
;ssd1309.c, 462 :: 		}
0x14DE	0xE02B    B	L_OLED_print_float93
;ssd1309.c, 459 :: 		else if((value >= 10) && (value < 100))
L__OLED_print_float262:
; y_pos start address is: 48 (R12)
; x_pos start address is: 44 (R11)
L__OLED_print_float261:
;ssd1309.c, 463 :: 		else if(value < 10)
0x14E0	0x9A01    LDR	R2, [SP, #4]
0x14E2	0x481B    LDR	R0, [PC, #108]
0x14E4	0xF7FFFCDC  BL	__Compare_FP+0
0x14E8	0xF2400000  MOVW	R0, #0
0x14EC	0xDD00    BLE	L__OLED_print_float291
0x14EE	0x2001    MOVS	R0, #1
L__OLED_print_float291:
0x14F0	0xB310    CBZ	R0, L_OLED_print_float94
;ssd1309.c, 465 :: 		OLED_print_decimal((x_pos + 12), y_pos, tmp, points);
0x14F2	0xF10B040C  ADD	R4, R11, #12
0x14F6	0xF89D3008  LDRB	R3, [SP, #8]
0x14FA	0x9A03    LDR	R2, [SP, #12]
0x14FC	0xFA5FF18C  UXTB	R1, R12
0x1500	0xB2E0    UXTB	R0, R4
0x1502	0xF7FFFC69  BL	_OLED_print_decimal+0
;ssd1309.c, 466 :: 		if((value) < 0)
0x1506	0x9A01    LDR	R2, [SP, #4]
0x1508	0xF04F0000  MOV	R0, #0
0x150C	0xF7FFFCC8  BL	__Compare_FP+0
0x1510	0xF2400000  MOVW	R0, #0
0x1514	0xDD00    BLE	L__OLED_print_float292
0x1516	0x2001    MOVS	R0, #1
L__OLED_print_float292:
0x1518	0xB138    CBZ	R0, L_OLED_print_float95
;ssd1309.c, 468 :: 		OLED_print_char(x_pos, y_pos, '-');
0x151A	0x222D    MOVS	R2, #45
0x151C	0xFA5FF18C  UXTB	R1, R12
; y_pos end address is: 48 (R12)
0x1520	0xFA5FF08B  UXTB	R0, R11
; x_pos end address is: 44 (R11)
0x1524	0xF7FFF8E2  BL	_OLED_print_char+0
;ssd1309.c, 469 :: 		}
0x1528	0xE006    B	L_OLED_print_float96
L_OLED_print_float95:
;ssd1309.c, 472 :: 		OLED_print_char(x_pos, y_pos, ' ');
; y_pos start address is: 48 (R12)
; x_pos start address is: 44 (R11)
0x152A	0x2220    MOVS	R2, #32
0x152C	0xFA5FF18C  UXTB	R1, R12
; y_pos end address is: 48 (R12)
0x1530	0xFA5FF08B  UXTB	R0, R11
; x_pos end address is: 44 (R11)
0x1534	0xF7FFF8DA  BL	_OLED_print_char+0
;ssd1309.c, 473 :: 		}
L_OLED_print_float96:
;ssd1309.c, 474 :: 		}
L_OLED_print_float94:
L_OLED_print_float93:
L_OLED_print_float89:
L_OLED_print_float85:
L_OLED_print_float81:
;ssd1309.c, 475 :: 		}
L_end_OLED_print_float:
0x1538	0xF8DDE000  LDR	LR, [SP, #0]
0x153C	0xB005    ADD	SP, SP, #20
0x153E	0x4770    BX	LR
0x1540	0x4000461C  	#1176256512
0x1544	0x500047C3  	#1203982336
0x1548	0x0000447A  	#1148846080
0x154C	0x000042C8  	#1120403456
0x1550	0x00004120  	#1092616192
; end of _OLED_print_float
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0A04	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x0A06	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x0A08	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0A0C	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x0A10	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x0A12	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0A14	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x0A18	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x0A1A	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x0A1E	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x0A20	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0A24	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x0A28	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x0A2A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0A2C	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x0A2E	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x0A30	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x0A32	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0A34	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x0A36	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x0A3A	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0A3C	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x0A3E	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x0A42	0xB001    ADD	SP, SP, #4
0x0A44	0x4770    BX	LR
; end of __FloatToSignedIntegral
_OLED_print_int:
;ssd1309.c, 320 :: 		void OLED_print_int(unsigned char x_pos, unsigned char y_pos, signed long value)
; value start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0A48	0xB081    SUB	SP, SP, #4
0x0A4A	0xF8CDE000  STR	LR, [SP, #0]
0x0A4E	0xB2C7    UXTB	R7, R0
0x0A50	0xFA5FF881  UXTB	R8, R1
0x0A54	0x4691    MOV	R9, R2
; value end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 28 (R7)
; y_pos start address is: 32 (R8)
; value start address is: 36 (R9)
;ssd1309.c, 322 :: 		unsigned char ch = 0x00;
;ssd1309.c, 324 :: 		if(value < 0)
0x0A56	0xF1B90F00  CMP	R9, #0
0x0A5A	0xDA08    BGE	L_OLED_print_int58
;ssd1309.c, 326 :: 		OLED_print_char(x_pos, y_pos, '-');
0x0A5C	0x222D    MOVS	R2, #45
0x0A5E	0xFA5FF188  UXTB	R1, R8
0x0A62	0xB2F8    UXTB	R0, R7
0x0A64	0xF7FFFE42  BL	_OLED_print_char+0
;ssd1309.c, 327 :: 		value = -value;
0x0A68	0xF1C90900  RSB	R9, R9, #0
;ssd1309.c, 328 :: 		}
0x0A6C	0xE005    B	L_OLED_print_int59
L_OLED_print_int58:
;ssd1309.c, 331 :: 		OLED_print_char(x_pos, y_pos,' ');
0x0A6E	0x2220    MOVS	R2, #32
0x0A70	0xFA5FF188  UXTB	R1, R8
0x0A74	0xB2F8    UXTB	R0, R7
0x0A76	0xF7FFFE39  BL	_OLED_print_char+0
; value end address is: 36 (R9)
;ssd1309.c, 332 :: 		}
L_OLED_print_int59:
;ssd1309.c, 334 :: 		if(value > 9999)
; value start address is: 36 (R9)
0x0A7A	0xF242730F  MOVW	R3, #9999
0x0A7E	0x4599    CMP	R9, R3
0x0A80	0xDD5A    BLE	L_OLED_print_int60
;ssd1309.c, 336 :: 		ch = (value / 10000);
0x0A82	0xF2427310  MOVW	R3, #10000
0x0A86	0xFB99F3F3  SDIV	R3, R9, R3
;ssd1309.c, 337 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x0A8A	0xB2DB    UXTB	R3, R3
0x0A8C	0xF2030430  ADDW	R4, R3, #48
0x0A90	0x1DBB    ADDS	R3, R7, #6
0x0A92	0xB2E2    UXTB	R2, R4
0x0A94	0xFA5FF188  UXTB	R1, R8
0x0A98	0xB2D8    UXTB	R0, R3
0x0A9A	0xF7FFFE27  BL	_OLED_print_char+0
;ssd1309.c, 339 :: 		ch = ((value % 10000)/ 1000);
0x0A9E	0xF2427310  MOVW	R3, #10000
0x0AA2	0xFB99F4F3  SDIV	R4, R9, R3
0x0AA6	0xFB039414  MLS	R4, R3, R4, R9
0x0AAA	0xF24033E8  MOVW	R3, #1000
0x0AAE	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 340 :: 		OLED_print_char((x_pos + 12), y_pos , (0x30 + ch));
0x0AB2	0xB2DB    UXTB	R3, R3
0x0AB4	0xF2030430  ADDW	R4, R3, #48
0x0AB8	0xF207030C  ADDW	R3, R7, #12
0x0ABC	0xB2E2    UXTB	R2, R4
0x0ABE	0xFA5FF188  UXTB	R1, R8
0x0AC2	0xB2D8    UXTB	R0, R3
0x0AC4	0xF7FFFE12  BL	_OLED_print_char+0
;ssd1309.c, 342 :: 		ch = ((value % 1000) / 100);
0x0AC8	0xF24033E8  MOVW	R3, #1000
0x0ACC	0xFB99F4F3  SDIV	R4, R9, R3
0x0AD0	0xFB039414  MLS	R4, R3, R4, R9
0x0AD4	0x2364    MOVS	R3, #100
0x0AD6	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 343 :: 		OLED_print_char((x_pos + 18), y_pos , (0x30 + ch));
0x0ADA	0xB2DB    UXTB	R3, R3
0x0ADC	0xF2030430  ADDW	R4, R3, #48
0x0AE0	0xF2070312  ADDW	R3, R7, #18
0x0AE4	0xB2E2    UXTB	R2, R4
0x0AE6	0xFA5FF188  UXTB	R1, R8
0x0AEA	0xB2D8    UXTB	R0, R3
0x0AEC	0xF7FFFDFE  BL	_OLED_print_char+0
;ssd1309.c, 345 :: 		ch = ((value % 100) / 10);
0x0AF0	0x2364    MOVS	R3, #100
0x0AF2	0xFB99F4F3  SDIV	R4, R9, R3
0x0AF6	0xFB039414  MLS	R4, R3, R4, R9
0x0AFA	0x230A    MOVS	R3, #10
0x0AFC	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 346 :: 		OLED_print_char((x_pos + 24), y_pos , (0x30 + ch));
0x0B00	0xB2DB    UXTB	R3, R3
0x0B02	0xF2030430  ADDW	R4, R3, #48
0x0B06	0xF2070318  ADDW	R3, R7, #24
0x0B0A	0xB2E2    UXTB	R2, R4
0x0B0C	0xFA5FF188  UXTB	R1, R8
0x0B10	0xB2D8    UXTB	R0, R3
0x0B12	0xF7FFFDEB  BL	_OLED_print_char+0
;ssd1309.c, 348 :: 		ch = (value % 10);
0x0B16	0x240A    MOVS	R4, #10
0x0B18	0xFB99F3F4  SDIV	R3, R9, R4
0x0B1C	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 349 :: 		OLED_print_char((x_pos + 30), y_pos , (0x30 + ch));
0x0B20	0xB2DB    UXTB	R3, R3
0x0B22	0xF2030430  ADDW	R4, R3, #48
0x0B26	0xF207031E  ADDW	R3, R7, #30
; x_pos end address is: 28 (R7)
0x0B2A	0xB2E2    UXTB	R2, R4
0x0B2C	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0B30	0xB2D8    UXTB	R0, R3
0x0B32	0xF7FFFDDB  BL	_OLED_print_char+0
;ssd1309.c, 350 :: 		}
0x0B36	0xE119    B	L_OLED_print_int61
L_OLED_print_int60:
;ssd1309.c, 352 :: 		else if((value > 999) && (value <= 9999))
; value start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
0x0B38	0xF24033E7  MOVW	R3, #999
0x0B3C	0x4599    CMP	R9, R3
0x0B3E	0xDD57    BLE	L__OLED_print_int246
0x0B40	0xF242730F  MOVW	R3, #9999
0x0B44	0x4599    CMP	R9, R3
0x0B46	0xDC53    BGT	L__OLED_print_int245
L__OLED_print_int244:
;ssd1309.c, 354 :: 		ch = ((value % 10000)/ 1000);
0x0B48	0xF2427310  MOVW	R3, #10000
0x0B4C	0xFB99F4F3  SDIV	R4, R9, R3
0x0B50	0xFB039414  MLS	R4, R3, R4, R9
0x0B54	0xF24033E8  MOVW	R3, #1000
0x0B58	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 355 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x0B5C	0xB2DB    UXTB	R3, R3
0x0B5E	0xF2030430  ADDW	R4, R3, #48
0x0B62	0x1DBB    ADDS	R3, R7, #6
0x0B64	0xB2E2    UXTB	R2, R4
0x0B66	0xFA5FF188  UXTB	R1, R8
0x0B6A	0xB2D8    UXTB	R0, R3
0x0B6C	0xF7FFFDBE  BL	_OLED_print_char+0
;ssd1309.c, 357 :: 		ch = ((value % 1000) / 100);
0x0B70	0xF24033E8  MOVW	R3, #1000
0x0B74	0xFB99F4F3  SDIV	R4, R9, R3
0x0B78	0xFB039414  MLS	R4, R3, R4, R9
0x0B7C	0x2364    MOVS	R3, #100
0x0B7E	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 358 :: 		OLED_print_char((x_pos + 12), y_pos , (0x30 + ch));
0x0B82	0xB2DB    UXTB	R3, R3
0x0B84	0xF2030430  ADDW	R4, R3, #48
0x0B88	0xF207030C  ADDW	R3, R7, #12
0x0B8C	0xB2E2    UXTB	R2, R4
0x0B8E	0xFA5FF188  UXTB	R1, R8
0x0B92	0xB2D8    UXTB	R0, R3
0x0B94	0xF7FFFDAA  BL	_OLED_print_char+0
;ssd1309.c, 360 :: 		ch = ((value % 100) / 10);
0x0B98	0x2364    MOVS	R3, #100
0x0B9A	0xFB99F4F3  SDIV	R4, R9, R3
0x0B9E	0xFB039414  MLS	R4, R3, R4, R9
0x0BA2	0x230A    MOVS	R3, #10
0x0BA4	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 361 :: 		OLED_print_char((x_pos + 18), y_pos , (0x30 + ch));
0x0BA8	0xB2DB    UXTB	R3, R3
0x0BAA	0xF2030430  ADDW	R4, R3, #48
0x0BAE	0xF2070312  ADDW	R3, R7, #18
0x0BB2	0xB2E2    UXTB	R2, R4
0x0BB4	0xFA5FF188  UXTB	R1, R8
0x0BB8	0xB2D8    UXTB	R0, R3
0x0BBA	0xF7FFFD97  BL	_OLED_print_char+0
;ssd1309.c, 363 :: 		ch = (value % 10);
0x0BBE	0x240A    MOVS	R4, #10
0x0BC0	0xFB99F3F4  SDIV	R3, R9, R4
0x0BC4	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 364 :: 		OLED_print_char((x_pos + 24), y_pos , (0x30 + ch));
0x0BC8	0xB2DB    UXTB	R3, R3
0x0BCA	0xF2030430  ADDW	R4, R3, #48
0x0BCE	0xF2070318  ADDW	R3, R7, #24
0x0BD2	0xB2E2    UXTB	R2, R4
0x0BD4	0xFA5FF188  UXTB	R1, R8
0x0BD8	0xB2D8    UXTB	R0, R3
0x0BDA	0xF7FFFD87  BL	_OLED_print_char+0
;ssd1309.c, 365 :: 		OLED_print_char((x_pos + 30), y_pos , 0x20);
0x0BDE	0xF207031E  ADDW	R3, R7, #30
; x_pos end address is: 28 (R7)
0x0BE2	0x2220    MOVS	R2, #32
0x0BE4	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0BE8	0xB2D8    UXTB	R0, R3
0x0BEA	0xF7FFFD7F  BL	_OLED_print_char+0
;ssd1309.c, 366 :: 		}
0x0BEE	0xE0BD    B	L_OLED_print_int65
;ssd1309.c, 352 :: 		else if((value > 999) && (value <= 9999))
L__OLED_print_int246:
; value start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__OLED_print_int245:
;ssd1309.c, 367 :: 		else if((value > 99) && (value <= 999))
0x0BF0	0xF1B90F63  CMP	R9, #99
0x0BF4	0xDD4A    BLE	L__OLED_print_int248
0x0BF6	0xF24033E7  MOVW	R3, #999
0x0BFA	0x4599    CMP	R9, R3
0x0BFC	0xDC46    BGT	L__OLED_print_int247
L__OLED_print_int243:
;ssd1309.c, 369 :: 		ch = ((value % 1000) / 100);
0x0BFE	0xF24033E8  MOVW	R3, #1000
0x0C02	0xFB99F4F3  SDIV	R4, R9, R3
0x0C06	0xFB039414  MLS	R4, R3, R4, R9
0x0C0A	0x2364    MOVS	R3, #100
0x0C0C	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 370 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x0C10	0xB2DB    UXTB	R3, R3
0x0C12	0xF2030430  ADDW	R4, R3, #48
0x0C16	0x1DBB    ADDS	R3, R7, #6
0x0C18	0xB2E2    UXTB	R2, R4
0x0C1A	0xFA5FF188  UXTB	R1, R8
0x0C1E	0xB2D8    UXTB	R0, R3
0x0C20	0xF7FFFD64  BL	_OLED_print_char+0
;ssd1309.c, 372 :: 		ch = ((value % 100) / 10);
0x0C24	0x2364    MOVS	R3, #100
0x0C26	0xFB99F4F3  SDIV	R4, R9, R3
0x0C2A	0xFB039414  MLS	R4, R3, R4, R9
0x0C2E	0x230A    MOVS	R3, #10
0x0C30	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 373 :: 		OLED_print_char((x_pos + 12), y_pos , (0x30 + ch));
0x0C34	0xB2DB    UXTB	R3, R3
0x0C36	0xF2030430  ADDW	R4, R3, #48
0x0C3A	0xF207030C  ADDW	R3, R7, #12
0x0C3E	0xB2E2    UXTB	R2, R4
0x0C40	0xFA5FF188  UXTB	R1, R8
0x0C44	0xB2D8    UXTB	R0, R3
0x0C46	0xF7FFFD51  BL	_OLED_print_char+0
;ssd1309.c, 375 :: 		ch = (value % 10);
0x0C4A	0x240A    MOVS	R4, #10
0x0C4C	0xFB99F3F4  SDIV	R3, R9, R4
0x0C50	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 376 :: 		OLED_print_char((x_pos + 18), y_pos , (0x30 + ch));
0x0C54	0xB2DB    UXTB	R3, R3
0x0C56	0xF2030430  ADDW	R4, R3, #48
0x0C5A	0xF2070312  ADDW	R3, R7, #18
0x0C5E	0xB2E2    UXTB	R2, R4
0x0C60	0xFA5FF188  UXTB	R1, R8
0x0C64	0xB2D8    UXTB	R0, R3
0x0C66	0xF7FFFD41  BL	_OLED_print_char+0
;ssd1309.c, 377 :: 		OLED_print_char((x_pos + 24), y_pos , 0x20);
0x0C6A	0xF2070318  ADDW	R3, R7, #24
0x0C6E	0x2220    MOVS	R2, #32
0x0C70	0xFA5FF188  UXTB	R1, R8
0x0C74	0xB2D8    UXTB	R0, R3
0x0C76	0xF7FFFD39  BL	_OLED_print_char+0
;ssd1309.c, 378 :: 		OLED_print_char((x_pos + 30), y_pos , 0x20);
0x0C7A	0xF207031E  ADDW	R3, R7, #30
; x_pos end address is: 28 (R7)
0x0C7E	0x2220    MOVS	R2, #32
0x0C80	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0C84	0xB2D8    UXTB	R0, R3
0x0C86	0xF7FFFD31  BL	_OLED_print_char+0
;ssd1309.c, 379 :: 		}
0x0C8A	0xE06F    B	L_OLED_print_int69
;ssd1309.c, 367 :: 		else if((value > 99) && (value <= 999))
L__OLED_print_int248:
; value start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__OLED_print_int247:
;ssd1309.c, 380 :: 		else if((value > 9) && (value <= 99))
0x0C8C	0xF1B90F09  CMP	R9, #9
0x0C90	0xDD3D    BLE	L__OLED_print_int250
0x0C92	0xF1B90F63  CMP	R9, #99
0x0C96	0xDC3A    BGT	L__OLED_print_int249
L__OLED_print_int242:
;ssd1309.c, 382 :: 		ch = ((value % 100) / 10);
0x0C98	0x2364    MOVS	R3, #100
0x0C9A	0xFB99F4F3  SDIV	R4, R9, R3
0x0C9E	0xFB039414  MLS	R4, R3, R4, R9
0x0CA2	0x230A    MOVS	R3, #10
0x0CA4	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 383 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x0CA8	0xB2DB    UXTB	R3, R3
0x0CAA	0xF2030430  ADDW	R4, R3, #48
0x0CAE	0x1DBB    ADDS	R3, R7, #6
0x0CB0	0xB2E2    UXTB	R2, R4
0x0CB2	0xFA5FF188  UXTB	R1, R8
0x0CB6	0xB2D8    UXTB	R0, R3
0x0CB8	0xF7FFFD18  BL	_OLED_print_char+0
;ssd1309.c, 385 :: 		ch = (value % 10);
0x0CBC	0x240A    MOVS	R4, #10
0x0CBE	0xFB99F3F4  SDIV	R3, R9, R4
0x0CC2	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 386 :: 		OLED_print_char((x_pos + 12), y_pos , (0x30 + ch));
0x0CC6	0xB2DB    UXTB	R3, R3
0x0CC8	0xF2030430  ADDW	R4, R3, #48
0x0CCC	0xF207030C  ADDW	R3, R7, #12
0x0CD0	0xB2E2    UXTB	R2, R4
0x0CD2	0xFA5FF188  UXTB	R1, R8
0x0CD6	0xB2D8    UXTB	R0, R3
0x0CD8	0xF7FFFD08  BL	_OLED_print_char+0
;ssd1309.c, 388 :: 		OLED_print_char((x_pos + 18), y_pos , 0x20);
0x0CDC	0xF2070312  ADDW	R3, R7, #18
0x0CE0	0x2220    MOVS	R2, #32
0x0CE2	0xFA5FF188  UXTB	R1, R8
0x0CE6	0xB2D8    UXTB	R0, R3
0x0CE8	0xF7FFFD00  BL	_OLED_print_char+0
;ssd1309.c, 389 :: 		OLED_print_char((x_pos + 24), y_pos , 0x20);
0x0CEC	0xF2070318  ADDW	R3, R7, #24
0x0CF0	0x2220    MOVS	R2, #32
0x0CF2	0xFA5FF188  UXTB	R1, R8
0x0CF6	0xB2D8    UXTB	R0, R3
0x0CF8	0xF7FFFCF8  BL	_OLED_print_char+0
;ssd1309.c, 390 :: 		OLED_print_char((x_pos + 30), y_pos , 0x20);
0x0CFC	0xF207031E  ADDW	R3, R7, #30
; x_pos end address is: 28 (R7)
0x0D00	0x2220    MOVS	R2, #32
0x0D02	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0D06	0xB2D8    UXTB	R0, R3
0x0D08	0xF7FFFCF0  BL	_OLED_print_char+0
;ssd1309.c, 391 :: 		}
0x0D0C	0xE02E    B	L_OLED_print_int73
;ssd1309.c, 380 :: 		else if((value > 9) && (value <= 99))
L__OLED_print_int250:
; value start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__OLED_print_int249:
;ssd1309.c, 394 :: 		ch = (value % 10);
0x0D0E	0x240A    MOVS	R4, #10
0x0D10	0xFB99F3F4  SDIV	R3, R9, R4
0x0D14	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 395 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x0D18	0xB2DB    UXTB	R3, R3
0x0D1A	0xF2030430  ADDW	R4, R3, #48
0x0D1E	0x1DBB    ADDS	R3, R7, #6
0x0D20	0xB2E2    UXTB	R2, R4
0x0D22	0xFA5FF188  UXTB	R1, R8
0x0D26	0xB2D8    UXTB	R0, R3
0x0D28	0xF7FFFCE0  BL	_OLED_print_char+0
;ssd1309.c, 396 :: 		OLED_print_char((x_pos + 12), y_pos , 0x20);
0x0D2C	0xF207030C  ADDW	R3, R7, #12
0x0D30	0x2220    MOVS	R2, #32
0x0D32	0xFA5FF188  UXTB	R1, R8
0x0D36	0xB2D8    UXTB	R0, R3
0x0D38	0xF7FFFCD8  BL	_OLED_print_char+0
;ssd1309.c, 397 :: 		OLED_print_char((x_pos + 18), y_pos , 0x20);
0x0D3C	0xF2070312  ADDW	R3, R7, #18
0x0D40	0x2220    MOVS	R2, #32
0x0D42	0xFA5FF188  UXTB	R1, R8
0x0D46	0xB2D8    UXTB	R0, R3
0x0D48	0xF7FFFCD0  BL	_OLED_print_char+0
;ssd1309.c, 398 :: 		OLED_print_char((x_pos + 24), y_pos , 0x20);
0x0D4C	0xF2070318  ADDW	R3, R7, #24
0x0D50	0x2220    MOVS	R2, #32
0x0D52	0xFA5FF188  UXTB	R1, R8
0x0D56	0xB2D8    UXTB	R0, R3
0x0D58	0xF7FFFCC8  BL	_OLED_print_char+0
;ssd1309.c, 399 :: 		OLED_print_char((x_pos + 30), y_pos , 0x20);
0x0D5C	0xF207031E  ADDW	R3, R7, #30
; x_pos end address is: 28 (R7)
0x0D60	0x2220    MOVS	R2, #32
0x0D62	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0D66	0xB2D8    UXTB	R0, R3
0x0D68	0xF7FFFCC0  BL	_OLED_print_char+0
;ssd1309.c, 400 :: 		}
L_OLED_print_int73:
L_OLED_print_int69:
L_OLED_print_int65:
L_OLED_print_int61:
;ssd1309.c, 401 :: 		}
L_end_OLED_print_int:
0x0D6C	0xF8DDE000  LDR	LR, [SP, #0]
0x0D70	0xB001    ADD	SP, SP, #4
0x0D72	0x4770    BX	LR
; end of _OLED_print_int
_OLED_print_char:
;ssd1309.c, 229 :: 		void OLED_print_char(unsigned char x_pos, unsigned char y_pos, unsigned char ch)
; ch start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x06EC	0xB081    SUB	SP, SP, #4
0x06EE	0xF8CDE000  STR	LR, [SP, #0]
; ch end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 4 (R1)
; ch start address is: 8 (R2)
;ssd1309.c, 231 :: 		unsigned char chr = 0x00;
;ssd1309.c, 232 :: 		unsigned char s = 0x00;
;ssd1309.c, 234 :: 		chr = (ch - 32);
0x06F2	0xF2A20320  SUBW	R3, R2, #32
; ch end address is: 8 (R2)
; chr start address is: 20 (R5)
0x06F6	0xB2DD    UXTB	R5, R3
;ssd1309.c, 236 :: 		if(x_pos > (x_max - 6))
0x06F8	0x287A    CMP	R0, #122
0x06FA	0xDD03    BLE	L__OLED_print_char231
;ssd1309.c, 238 :: 		x_pos = 0;
0x06FC	0x2000    MOVS	R0, #0
;ssd1309.c, 239 :: 		y_pos++;
0x06FE	0x1C49    ADDS	R1, R1, #1
0x0700	0xB2C9    UXTB	R1, R1
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
;ssd1309.c, 240 :: 		}
0x0702	0xE7FF    B	L_OLED_print_char35
L__OLED_print_char231:
;ssd1309.c, 236 :: 		if(x_pos > (x_max - 6))
;ssd1309.c, 240 :: 		}
L_OLED_print_char35:
;ssd1309.c, 242 :: 		OLED_gotoxy(x_pos, y_pos);
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
0x0704	0xF7FFFFC8  BL	_OLED_gotoxy+0
;ssd1309.c, 244 :: 		for(s = 0x00; s < 0x06; s++)
; s start address is: 24 (R6)
0x0708	0x2600    MOVS	R6, #0
; s end address is: 24 (R6)
L_OLED_print_char36:
; s start address is: 24 (R6)
; chr start address is: 20 (R5)
; chr end address is: 20 (R5)
0x070A	0x2E06    CMP	R6, #6
0x070C	0xD20D    BCS	L_OLED_print_char37
; chr end address is: 20 (R5)
;ssd1309.c, 246 :: 		OLED_write(font_regular[chr][s], DAT);
; chr start address is: 20 (R5)
0x070E	0x2306    MOVS	R3, #6
0x0710	0xFB03F405  MUL	R4, R3, R5
0x0714	0x4B07    LDR	R3, [PC, #28]
0x0716	0x191B    ADDS	R3, R3, R4
0x0718	0x199B    ADDS	R3, R3, R6
0x071A	0x781B    LDRB	R3, [R3, #0]
0x071C	0x2101    MOVS	R1, #1
0x071E	0xB2D8    UXTB	R0, R3
0x0720	0xF000F8B6  BL	_OLED_write+0
;ssd1309.c, 244 :: 		for(s = 0x00; s < 0x06; s++)
0x0724	0x1C76    ADDS	R6, R6, #1
0x0726	0xB2F6    UXTB	R6, R6
;ssd1309.c, 247 :: 		}
; chr end address is: 20 (R5)
; s end address is: 24 (R6)
0x0728	0xE7EF    B	L_OLED_print_char36
L_OLED_print_char37:
;ssd1309.c, 248 :: 		}
L_end_OLED_print_char:
0x072A	0xF8DDE000  LDR	LR, [SP, #0]
0x072E	0xB001    ADD	SP, SP, #4
0x0730	0x4770    BX	LR
0x0732	0xBF00    NOP
0x0734	0x29480000  	_font_regular+0
; end of _OLED_print_char
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x09B4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x09B6	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x09B8	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x09BA	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x09BC	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x09BE	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x09C0	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x09C2	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x09C6	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x09CA	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x09CC	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x09CE	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x09D0	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x09D2	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x09D4	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x09D6	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x09D8	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x09DA	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x09DE	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x09E2	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x09E4	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x09E6	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x09EA	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x09EC	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x09F0	0xB001    ADD	SP, SP, #4
0x09F2	0x4770    BX	LR
; end of __SignedIntegralToFloat
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x10E4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x10E6	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x10EA	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x10EE	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x10F2	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x10F6	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x10F8	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x10FA	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x10FC	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x10FE	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x1102	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x1104	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x1108	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x110A	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x110C	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x1110	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x1112	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x1114	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x1116	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x111A	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x111E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x1120	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x1122	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x1124	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x1126	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x112A	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x112C	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x112E	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x1132	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x1134	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x1136	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x113A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x113C	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x113E	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x1140	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x1142	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x1144	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x1146	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x1148	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x114A	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x114C	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x114E	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x1150	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x1152	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x1154	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x1158	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x115A	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x115E	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x1160	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x1164	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x1168	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x116A	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x116C	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x1170	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x1172	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x1174	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x1176	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x117A	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x117E	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x1182	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x1184	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x1186	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x118A	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x118C	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x1190	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x1194	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x1196	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x1198	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x119A	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x119E	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x11A2	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x11A4	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x11A8	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x11AA	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x11AC	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x11B0	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x11B2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x11B4	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x11B6	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x11BA	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x11BE	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x11C2	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x11C6	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x11CA	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x11CC	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x11CE	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x11D2	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x11D6	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x11D8	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x11DC	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x11DE	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x11E2	0xB001    ADD	SP, SP, #4
0x11E4	0x4770    BX	LR
; end of __Sub_FP
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x0F08	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x0F0A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x0F0C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x0F10	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x0F12	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x0F16	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x0F1A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x0F1E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x0F22	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x0F24	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x0F26	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x0F2A	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x0F2E	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x0F30	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x0F32	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x0F34	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x0F38	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x0F3C	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x0F3E	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x0F40	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x0F44	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x0F48	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x0F4A	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x0F4C	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x0F4E	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x0F50	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x0F54	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x0F56	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x0F58	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x0F5A	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x0F5C	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x0F5E	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x0F60	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x0F62	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x0F64	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x0F66	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x0F68	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x0F6C	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x0F6E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x0F70	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x0F72	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x0F76	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x0F7A	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x0F7E	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x0F80	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x0F82	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x0F84	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x0F86	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x0F8A	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x0F8E	0xB001    ADD	SP, SP, #4
0x0F90	0x4770    BX	LR
; end of __Mul_FP
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x0EA0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x0EA2	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x0EA4	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x0EA6	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x0EA8	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x0EAA	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x0EAE	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x0EB2	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x0EB4	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x0EB6	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x0EB8	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x0EBA	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x0EBC	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x0EBE	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x0EC0	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x0EC2	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x0EC4	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x0EC6	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x0ECA	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x0ECE	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x0ED0	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x0ED2	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x0ED6	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x0EDA	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x0EDC	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x0EDE	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x0EE2	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x0EE6	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x0EE8	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x0EEA	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x0EEC	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x0EEE	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x0EF0	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x0EF2	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x0EF4	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x0EF6	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x0EF8	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x0EFA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x0EFC	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x0EFE	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x0F00	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x0F04	0xB001    ADD	SP, SP, #4
0x0F06	0x4770    BX	LR
; end of __Compare_FP
_OLED_print_decimal:
;ssd1309.c, 404 :: 		void OLED_print_decimal(unsigned char x_pos, unsigned char y_pos, unsigned int value, unsigned char points)
; points start address is: 12 (R3)
; value start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0DD8	0xB081    SUB	SP, SP, #4
0x0DDA	0xF8CDE000  STR	LR, [SP, #0]
0x0DDE	0xB2C7    UXTB	R7, R0
0x0DE0	0xFA5FF881  UXTB	R8, R1
0x0DE4	0xFA1FF982  UXTH	R9, R2
0x0DE8	0xFA5FFA83  UXTB	R10, R3
; points end address is: 12 (R3)
; value end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 28 (R7)
; y_pos start address is: 32 (R8)
; value start address is: 36 (R9)
; points start address is: 40 (R10)
;ssd1309.c, 406 :: 		unsigned char ch = 0x00;
;ssd1309.c, 408 :: 		OLED_print_char(x_pos, y_pos, '.');
0x0DEC	0x222E    MOVS	R2, #46
0x0DEE	0xFA5FF188  UXTB	R1, R8
0x0DF2	0xB2F8    UXTB	R0, R7
0x0DF4	0xF7FFFC7A  BL	_OLED_print_char+0
;ssd1309.c, 410 :: 		ch = (value / 1000);
0x0DF8	0xF24034E8  MOVW	R4, #1000
0x0DFC	0xFBB9F4F4  UDIV	R4, R9, R4
;ssd1309.c, 411 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x0E00	0xB2E4    UXTB	R4, R4
0x0E02	0xF2040530  ADDW	R5, R4, #48
0x0E06	0x1DBC    ADDS	R4, R7, #6
0x0E08	0xB2EA    UXTB	R2, R5
0x0E0A	0xFA5FF188  UXTB	R1, R8
0x0E0E	0xB2E0    UXTB	R0, R4
0x0E10	0xF7FFFC6C  BL	_OLED_print_char+0
;ssd1309.c, 413 :: 		if(points > 1)
0x0E14	0xF1BA0F01  CMP	R10, #1
0x0E18	0xD93E    BLS	L_OLED_print_decimal74
;ssd1309.c, 415 :: 		ch = ((value % 1000) / 100);
0x0E1A	0xF24034E8  MOVW	R4, #1000
0x0E1E	0xFBB9F5F4  UDIV	R5, R9, R4
0x0E22	0xFB049515  MLS	R5, R4, R5, R9
0x0E26	0xB2AD    UXTH	R5, R5
0x0E28	0x2464    MOVS	R4, #100
0x0E2A	0xFBB5F4F4  UDIV	R4, R5, R4
;ssd1309.c, 416 :: 		OLED_print_char((x_pos + 12), y_pos , (0x30 + ch));
0x0E2E	0xB2E4    UXTB	R4, R4
0x0E30	0xF2040530  ADDW	R5, R4, #48
0x0E34	0xF207040C  ADDW	R4, R7, #12
0x0E38	0xB2EA    UXTB	R2, R5
0x0E3A	0xFA5FF188  UXTB	R1, R8
0x0E3E	0xB2E0    UXTB	R0, R4
0x0E40	0xF7FFFC54  BL	_OLED_print_char+0
;ssd1309.c, 419 :: 		if(points > 2)
0x0E44	0xF1BA0F02  CMP	R10, #2
0x0E48	0xD926    BLS	L_OLED_print_decimal75
;ssd1309.c, 421 :: 		ch = ((value % 100) / 10);
0x0E4A	0x2464    MOVS	R4, #100
0x0E4C	0xFBB9F5F4  UDIV	R5, R9, R4
0x0E50	0xFB049515  MLS	R5, R4, R5, R9
0x0E54	0xB2AD    UXTH	R5, R5
0x0E56	0x240A    MOVS	R4, #10
0x0E58	0xFBB5F4F4  UDIV	R4, R5, R4
;ssd1309.c, 422 :: 		OLED_print_char((x_pos + 18), y_pos , (0x30 + ch));
0x0E5C	0xB2E4    UXTB	R4, R4
0x0E5E	0xF2040530  ADDW	R5, R4, #48
0x0E62	0xF2070412  ADDW	R4, R7, #18
0x0E66	0xB2EA    UXTB	R2, R5
0x0E68	0xFA5FF188  UXTB	R1, R8
0x0E6C	0xB2E0    UXTB	R0, R4
0x0E6E	0xF7FFFC3D  BL	_OLED_print_char+0
;ssd1309.c, 424 :: 		if(points > 3)
0x0E72	0xF1BA0F03  CMP	R10, #3
0x0E76	0xD90F    BLS	L_OLED_print_decimal76
; points end address is: 40 (R10)
;ssd1309.c, 426 :: 		ch = (value % 10);
0x0E78	0x250A    MOVS	R5, #10
0x0E7A	0xFBB9F4F5  UDIV	R4, R9, R5
0x0E7E	0xFB059414  MLS	R4, R5, R4, R9
; value end address is: 36 (R9)
;ssd1309.c, 427 :: 		OLED_print_char((x_pos + 24), y_pos , (0x30 + ch));
0x0E82	0xB2E4    UXTB	R4, R4
0x0E84	0xF2040530  ADDW	R5, R4, #48
0x0E88	0xF2070418  ADDW	R4, R7, #24
; x_pos end address is: 28 (R7)
0x0E8C	0xB2EA    UXTB	R2, R5
0x0E8E	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0E92	0xB2E0    UXTB	R0, R4
0x0E94	0xF7FFFC2A  BL	_OLED_print_char+0
;ssd1309.c, 428 :: 		}
L_OLED_print_decimal76:
;ssd1309.c, 429 :: 		}
L_OLED_print_decimal75:
;ssd1309.c, 430 :: 		}
L_OLED_print_decimal74:
;ssd1309.c, 431 :: 		}
L_end_OLED_print_decimal:
0x0E98	0xF8DDE000  LDR	LR, [SP, #0]
0x0E9C	0xB001    ADD	SP, SP, #4
0x0E9E	0x4770    BX	LR
; end of _OLED_print_decimal
_OLED_print_chr:
;ssd1309.c, 279 :: 		void OLED_print_chr(unsigned char x_pos, unsigned char y_pos, signed int value)
; value start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x11E8	0xB081    SUB	SP, SP, #4
0x11EA	0xF8CDE000  STR	LR, [SP, #0]
0x11EE	0xB2C7    UXTB	R7, R0
0x11F0	0xFA5FF881  UXTB	R8, R1
0x11F4	0xFA0FF982  SXTH	R9, R2
; value end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 28 (R7)
; y_pos start address is: 32 (R8)
; value start address is: 36 (R9)
;ssd1309.c, 281 :: 		unsigned char ch = 0x00;
;ssd1309.c, 283 :: 		if(value < 0x00)
0x11F8	0xF1B90F00  CMP	R9, #0
0x11FC	0xDA0A    BGE	L_OLED_print_chr45
;ssd1309.c, 285 :: 		OLED_print_char(x_pos, y_pos, '-');
0x11FE	0x222D    MOVS	R2, #45
0x1200	0xFA5FF188  UXTB	R1, R8
0x1204	0xB2F8    UXTB	R0, R7
0x1206	0xF7FFFA71  BL	_OLED_print_char+0
;ssd1309.c, 286 :: 		value = -value;
0x120A	0xF1C90900  RSB	R9, R9, #0
0x120E	0xFA0FF989  SXTH	R9, R9
;ssd1309.c, 287 :: 		}
0x1212	0xE005    B	L_OLED_print_chr46
L_OLED_print_chr45:
;ssd1309.c, 290 :: 		OLED_print_char(x_pos, y_pos,' ');
0x1214	0x2220    MOVS	R2, #32
0x1216	0xFA5FF188  UXTB	R1, R8
0x121A	0xB2F8    UXTB	R0, R7
0x121C	0xF7FFFA66  BL	_OLED_print_char+0
; value end address is: 36 (R9)
;ssd1309.c, 291 :: 		}
L_OLED_print_chr46:
;ssd1309.c, 293 :: 		if((value > 99) && (value <= 999))
; value start address is: 36 (R9)
0x1220	0xF1B90F63  CMP	R9, #99
0x1224	0xDD39    BLE	L__OLED_print_chr237
0x1226	0xF24033E7  MOVW	R3, #999
0x122A	0x4599    CMP	R9, R3
0x122C	0xDC35    BGT	L__OLED_print_chr236
L__OLED_print_chr235:
;ssd1309.c, 295 :: 		ch = (value / 100);
0x122E	0x2364    MOVS	R3, #100
0x1230	0xB21B    SXTH	R3, R3
0x1232	0xFB99F3F3  SDIV	R3, R9, R3
;ssd1309.c, 296 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x1236	0xB2DB    UXTB	R3, R3
0x1238	0xF2030430  ADDW	R4, R3, #48
0x123C	0x1DBB    ADDS	R3, R7, #6
0x123E	0xB2E2    UXTB	R2, R4
0x1240	0xFA5FF188  UXTB	R1, R8
0x1244	0xB2D8    UXTB	R0, R3
0x1246	0xF7FFFA51  BL	_OLED_print_char+0
;ssd1309.c, 297 :: 		ch = ((value % 100) / 10);
0x124A	0x2364    MOVS	R3, #100
0x124C	0xB21B    SXTH	R3, R3
0x124E	0xFB99F4F3  SDIV	R4, R9, R3
0x1252	0xFB039414  MLS	R4, R3, R4, R9
0x1256	0xB224    SXTH	R4, R4
0x1258	0x230A    MOVS	R3, #10
0x125A	0xB21B    SXTH	R3, R3
0x125C	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 298 :: 		OLED_print_char((x_pos + 12), y_pos , (0x30 + ch));
0x1260	0xB2DB    UXTB	R3, R3
0x1262	0xF2030430  ADDW	R4, R3, #48
0x1266	0xF207030C  ADDW	R3, R7, #12
0x126A	0xB2E2    UXTB	R2, R4
0x126C	0xFA5FF188  UXTB	R1, R8
0x1270	0xB2D8    UXTB	R0, R3
0x1272	0xF7FFFA3B  BL	_OLED_print_char+0
;ssd1309.c, 299 :: 		ch = (value % 10);
0x1276	0x240A    MOVS	R4, #10
0x1278	0xB224    SXTH	R4, R4
0x127A	0xFB99F3F4  SDIV	R3, R9, R4
0x127E	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 300 :: 		OLED_print_char((x_pos + 18), y_pos , (0x30 + ch));
0x1282	0xB2DB    UXTB	R3, R3
0x1284	0xF2030430  ADDW	R4, R3, #48
0x1288	0xF2070312  ADDW	R3, R7, #18
; x_pos end address is: 28 (R7)
0x128C	0xB2E2    UXTB	R2, R4
0x128E	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x1292	0xB2D8    UXTB	R0, R3
0x1294	0xF7FFFA2A  BL	_OLED_print_char+0
;ssd1309.c, 301 :: 		}
0x1298	0xE05A    B	L_OLED_print_chr50
;ssd1309.c, 293 :: 		if((value > 99) && (value <= 999))
L__OLED_print_chr237:
; value start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__OLED_print_chr236:
;ssd1309.c, 302 :: 		else if((value > 9) && (value <= 99))
0x129A	0xF1B90F09  CMP	R9, #9
0x129E	0xDD31    BLE	L__OLED_print_chr239
0x12A0	0xF1B90F63  CMP	R9, #99
0x12A4	0xDC2E    BGT	L__OLED_print_chr238
L__OLED_print_chr234:
;ssd1309.c, 304 :: 		ch = ((value % 100) / 10);
0x12A6	0x2364    MOVS	R3, #100
0x12A8	0xB21B    SXTH	R3, R3
0x12AA	0xFB99F4F3  SDIV	R4, R9, R3
0x12AE	0xFB039414  MLS	R4, R3, R4, R9
0x12B2	0xB224    SXTH	R4, R4
0x12B4	0x230A    MOVS	R3, #10
0x12B6	0xB21B    SXTH	R3, R3
0x12B8	0xFB94F3F3  SDIV	R3, R4, R3
;ssd1309.c, 305 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x12BC	0xB2DB    UXTB	R3, R3
0x12BE	0xF2030430  ADDW	R4, R3, #48
0x12C2	0x1DBB    ADDS	R3, R7, #6
0x12C4	0xB2E2    UXTB	R2, R4
0x12C6	0xFA5FF188  UXTB	R1, R8
0x12CA	0xB2D8    UXTB	R0, R3
0x12CC	0xF7FFFA0E  BL	_OLED_print_char+0
;ssd1309.c, 306 :: 		ch = (value % 10);
0x12D0	0x240A    MOVS	R4, #10
0x12D2	0xB224    SXTH	R4, R4
0x12D4	0xFB99F3F4  SDIV	R3, R9, R4
0x12D8	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 307 :: 		OLED_print_char((x_pos + 12), y_pos , (0x30 + ch));
0x12DC	0xB2DB    UXTB	R3, R3
0x12DE	0xF2030430  ADDW	R4, R3, #48
0x12E2	0xF207030C  ADDW	R3, R7, #12
0x12E6	0xB2E2    UXTB	R2, R4
0x12E8	0xFA5FF188  UXTB	R1, R8
0x12EC	0xB2D8    UXTB	R0, R3
0x12EE	0xF7FFF9FD  BL	_OLED_print_char+0
;ssd1309.c, 308 :: 		OLED_print_char((x_pos + 18), y_pos , 0x20);
0x12F2	0xF2070312  ADDW	R3, R7, #18
; x_pos end address is: 28 (R7)
0x12F6	0x2220    MOVS	R2, #32
0x12F8	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x12FC	0xB2D8    UXTB	R0, R3
0x12FE	0xF7FFF9F5  BL	_OLED_print_char+0
;ssd1309.c, 309 :: 		}
0x1302	0xE025    B	L_OLED_print_chr54
;ssd1309.c, 302 :: 		else if((value > 9) && (value <= 99))
L__OLED_print_chr239:
; value start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__OLED_print_chr238:
;ssd1309.c, 310 :: 		else if((value >= 0) && (value <= 9))
0x1304	0xF1B90F00  CMP	R9, #0
0x1308	0xDB22    BLT	L__OLED_print_chr241
0x130A	0xF1B90F09  CMP	R9, #9
0x130E	0xDC1F    BGT	L__OLED_print_chr240
L__OLED_print_chr233:
;ssd1309.c, 312 :: 		ch = (value % 10);
0x1310	0x240A    MOVS	R4, #10
0x1312	0xB224    SXTH	R4, R4
0x1314	0xFB99F3F4  SDIV	R3, R9, R4
0x1318	0xFB049313  MLS	R3, R4, R3, R9
; value end address is: 36 (R9)
;ssd1309.c, 313 :: 		OLED_print_char((x_pos + 6), y_pos , (0x30 + ch));
0x131C	0xB2DB    UXTB	R3, R3
0x131E	0xF2030430  ADDW	R4, R3, #48
0x1322	0x1DBB    ADDS	R3, R7, #6
0x1324	0xB2E2    UXTB	R2, R4
0x1326	0xFA5FF188  UXTB	R1, R8
0x132A	0xB2D8    UXTB	R0, R3
0x132C	0xF7FFF9DE  BL	_OLED_print_char+0
;ssd1309.c, 314 :: 		OLED_print_char((x_pos + 12), y_pos , 0x20);
0x1330	0xF207030C  ADDW	R3, R7, #12
0x1334	0x2220    MOVS	R2, #32
0x1336	0xFA5FF188  UXTB	R1, R8
0x133A	0xB2D8    UXTB	R0, R3
0x133C	0xF7FFF9D6  BL	_OLED_print_char+0
;ssd1309.c, 315 :: 		OLED_print_char((x_pos + 18), y_pos , 0x20);
0x1340	0xF2070312  ADDW	R3, R7, #18
; x_pos end address is: 28 (R7)
0x1344	0x2220    MOVS	R2, #32
0x1346	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x134A	0xB2D8    UXTB	R0, R3
0x134C	0xF7FFF9CE  BL	_OLED_print_char+0
;ssd1309.c, 310 :: 		else if((value >= 0) && (value <= 9))
L__OLED_print_chr241:
L__OLED_print_chr240:
;ssd1309.c, 316 :: 		}
L_OLED_print_chr54:
L_OLED_print_chr50:
;ssd1309.c, 317 :: 		}
L_end_OLED_print_chr:
0x1350	0xF8DDE000  LDR	LR, [SP, #0]
0x1354	0xB001    ADD	SP, SP, #4
0x1356	0x4770    BX	LR
; end of _OLED_print_chr
__Lib_System_101_102_103_InitialSetUpRCCRCC2:
;__Lib_System_101_102_103.c, 377 :: 		
0x1F70	0xB082    SUB	SP, SP, #8
0x1F72	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_101_102_103.c, 380 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1F76	0x4A33    LDR	R2, [PC, #204]
;__Lib_System_101_102_103.c, 381 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x1F78	0x4B33    LDR	R3, [PC, #204]
;__Lib_System_101_102_103.c, 382 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F7A	0x4934    LDR	R1, [PC, #208]
;__Lib_System_101_102_103.c, 389 :: 		
0x1F7C	0xF64B3080  MOVW	R0, #48000
0x1F80	0x4281    CMP	R1, R0
0x1F82	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 390 :: 		
0x1F84	0x4832    LDR	R0, [PC, #200]
0x1F86	0x6800    LDR	R0, [R0, #0]
0x1F88	0xF0400102  ORR	R1, R0, #2
0x1F8C	0x4830    LDR	R0, [PC, #192]
0x1F8E	0x6001    STR	R1, [R0, #0]
0x1F90	0xE011    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC233
L___Lib_System_101_102_103_InitialSetUpRCCRCC232:
;__Lib_System_101_102_103.c, 391 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F92	0xF64550C0  MOVW	R0, #24000
0x1F96	0x4281    CMP	R1, R0
0x1F98	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 392 :: 		
0x1F9A	0x482D    LDR	R0, [PC, #180]
0x1F9C	0x6800    LDR	R0, [R0, #0]
0x1F9E	0xF0400101  ORR	R1, R0, #1
0x1FA2	0x482B    LDR	R0, [PC, #172]
0x1FA4	0x6001    STR	R1, [R0, #0]
0x1FA6	0xE006    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC235
L___Lib_System_101_102_103_InitialSetUpRCCRCC234:
;__Lib_System_101_102_103.c, 394 :: 		
0x1FA8	0x4829    LDR	R0, [PC, #164]
0x1FAA	0x6801    LDR	R1, [R0, #0]
0x1FAC	0xF06F0007  MVN	R0, #7
0x1FB0	0x4001    ANDS	R1, R0
0x1FB2	0x4827    LDR	R0, [PC, #156]
0x1FB4	0x6001    STR	R1, [R0, #0]
L___Lib_System_101_102_103_InitialSetUpRCCRCC235:
L___Lib_System_101_102_103_InitialSetUpRCCRCC233:
;__Lib_System_101_102_103.c, 396 :: 		
0x1FB6	0xF7FFF9CF  BL	__Lib_System_101_102_103_SystemClockSetDefault+0
;__Lib_System_101_102_103.c, 398 :: 		
0x1FBA	0x4826    LDR	R0, [PC, #152]
0x1FBC	0x6003    STR	R3, [R0, #0]
;__Lib_System_101_102_103.c, 399 :: 		
0x1FBE	0x4826    LDR	R0, [PC, #152]
0x1FC0	0xEA020100  AND	R1, R2, R0, LSL #0
0x1FC4	0x4825    LDR	R0, [PC, #148]
0x1FC6	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 401 :: 		
0x1FC8	0xF0020001  AND	R0, R2, #1
0x1FCC	0xB140    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC247
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1FCE	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 402 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1FD0	0x4822    LDR	R0, [PC, #136]
0x1FD2	0x6800    LDR	R0, [R0, #0]
0x1FD4	0xF0000002  AND	R0, R0, #2
0x1FD8	0x2800    CMP	R0, #0
0x1FDA	0xD100    BNE	L___Lib_System_101_102_103_InitialSetUpRCCRCC238
;__Lib_System_101_102_103.c, 403 :: 		
0x1FDC	0xE7F8    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC237
L___Lib_System_101_102_103_InitialSetUpRCCRCC238:
;__Lib_System_101_102_103.c, 404 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1FDE	0xE000    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC247:
;__Lib_System_101_102_103.c, 401 :: 		
0x1FE0	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 404 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC236:
;__Lib_System_101_102_103.c, 406 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1FE2	0xF4023080  AND	R0, R2, #65536
0x1FE6	0xB148    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC248
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_101_102_103.c, 407 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x1FE8	0x481C    LDR	R0, [PC, #112]
0x1FEA	0x6800    LDR	R0, [R0, #0]
0x1FEC	0xF4003000  AND	R0, R0, #131072
0x1FF0	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC241
;__Lib_System_101_102_103.c, 408 :: 		
0x1FF2	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC240
L___Lib_System_101_102_103_InitialSetUpRCCRCC241:
;__Lib_System_101_102_103.c, 409 :: 		
0x1FF4	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x1FF6	0x460A    MOV	R2, R1
0x1FF8	0x9901    LDR	R1, [SP, #4]
0x1FFA	0xE002    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC239
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC248:
;__Lib_System_101_102_103.c, 406 :: 		
0x1FFC	0x9101    STR	R1, [SP, #4]
0x1FFE	0x4611    MOV	R1, R2
0x2000	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_101_102_103.c, 409 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC239:
;__Lib_System_101_102_103.c, 411 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x2002	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x2006	0xB170    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC249
;__Lib_System_101_102_103.c, 412 :: 		
0x2008	0x4814    LDR	R0, [PC, #80]
0x200A	0x6800    LDR	R0, [R0, #0]
0x200C	0xF0407180  ORR	R1, R0, #16777216
0x2010	0x4812    LDR	R0, [PC, #72]
0x2012	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x2014	0x4611    MOV	R1, R2
;__Lib_System_101_102_103.c, 413 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 4 (R1)
0x2016	0x4811    LDR	R0, [PC, #68]
0x2018	0x6800    LDR	R0, [R0, #0]
0x201A	0xF0007000  AND	R0, R0, #33554432
0x201E	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC244
;__Lib_System_101_102_103.c, 414 :: 		
0x2020	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC243
L___Lib_System_101_102_103_InitialSetUpRCCRCC244:
;__Lib_System_101_102_103.c, 415 :: 		
0x2022	0x460A    MOV	R2, R1
0x2024	0xE7FF    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_101_102_103_InitialSetUpRCCRCC249:
;__Lib_System_101_102_103.c, 411 :: 		
;__Lib_System_101_102_103.c, 415 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC242:
;__Lib_System_101_102_103.c, 418 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 8 (R2)
0x2026	0x480B    LDR	R0, [PC, #44]
0x2028	0x6800    LDR	R0, [R0, #0]
0x202A	0xF000010C  AND	R1, R0, #12
0x202E	0x0090    LSLS	R0, R2, #2
0x2030	0xF000000C  AND	R0, R0, #12
0x2034	0x4281    CMP	R1, R0
0x2036	0xD000    BEQ	L___Lib_System_101_102_103_InitialSetUpRCCRCC246
;__Lib_System_101_102_103.c, 419 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2038	0xE7F5    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC245
L___Lib_System_101_102_103_InitialSetUpRCCRCC246:
;__Lib_System_101_102_103.c, 421 :: 		
L_end_InitialSetUpRCCRCC2:
0x203A	0xF8DDE000  LDR	LR, [SP, #0]
0x203E	0xB002    ADD	SP, SP, #8
0x2040	0x4770    BX	LR
0x2042	0xBF00    NOP
0x2044	0x00810109  	#17367169
0x2048	0xC402005D  	#6145026
0x204C	0x19400001  	#72000
0x2050	0x20004002  	FLASH_ACR+0
0x2054	0x10044002  	RCC_CFGR+0
0x2058	0xFFFF000F  	#1048575
0x205C	0x10004002  	RCC_CR+0
; end of __Lib_System_101_102_103_InitialSetUpRCCRCC2
__Lib_System_101_102_103_SystemClockSetDefault:
;__Lib_System_101_102_103.c, 356 :: 		
0x1358	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 359 :: 		
0x135A	0x480F    LDR	R0, [PC, #60]
0x135C	0x6800    LDR	R0, [R0, #0]
0x135E	0xF0400101  ORR	R1, R0, #1
0x1362	0x480D    LDR	R0, [PC, #52]
0x1364	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 362 :: 		
0x1366	0x490D    LDR	R1, [PC, #52]
0x1368	0x480D    LDR	R0, [PC, #52]
0x136A	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 365 :: 		
0x136C	0x480A    LDR	R0, [PC, #40]
0x136E	0x6801    LDR	R1, [R0, #0]
0x1370	0x480C    LDR	R0, [PC, #48]
0x1372	0x4001    ANDS	R1, R0
0x1374	0x4808    LDR	R0, [PC, #32]
0x1376	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 368 :: 		
0x1378	0x4807    LDR	R0, [PC, #28]
0x137A	0x6801    LDR	R1, [R0, #0]
0x137C	0xF46F2080  MVN	R0, #262144
0x1380	0x4001    ANDS	R1, R0
0x1382	0x4805    LDR	R0, [PC, #20]
0x1384	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 371 :: 		
0x1386	0x4806    LDR	R0, [PC, #24]
0x1388	0x6801    LDR	R1, [R0, #0]
0x138A	0xF46F00FE  MVN	R0, #8323072
0x138E	0x4001    ANDS	R1, R0
0x1390	0x4803    LDR	R0, [PC, #12]
0x1392	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 375 :: 		
L_end_SystemClockSetDefault:
0x1394	0xB001    ADD	SP, SP, #4
0x1396	0x4770    BX	LR
0x1398	0x10004002  	RCC_CR+0
0x139C	0x0000F8FF  	#-117506048
0x13A0	0x10044002  	RCC_CFGR+0
0x13A4	0xFFFFFEF6  	#-17367041
; end of __Lib_System_101_102_103_SystemClockSetDefault
__Lib_System_101_102_103_InitialSetUpFosc:
;__Lib_System_101_102_103.c, 423 :: 		
0x1F54	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 424 :: 		
0x1F56	0x4902    LDR	R1, [PC, #8]
0x1F58	0x4802    LDR	R0, [PC, #8]
0x1F5A	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 425 :: 		
L_end_InitialSetUpFosc:
0x1F5C	0xB001    ADD	SP, SP, #4
0x1F5E	0x4770    BX	LR
0x1F60	0x19400001  	#72000
0x1F64	0x04282000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_101_102_103_InitialSetUpFosc
___GenExcept:
;__Lib_System_101_102_103.c, 307 :: 		
0x1F68	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 308 :: 		
L___GenExcept28:
0x1F6A	0xE7FE    B	L___GenExcept28
;__Lib_System_101_102_103.c, 309 :: 		
L_end___GenExcept:
0x1F6C	0xB001    ADD	SP, SP, #4
0x1F6E	0x4770    BX	LR
; end of ___GenExcept
0x2BFC	0xB500    PUSH	(R14)
0x2BFE	0xF8DFB014  LDR	R11, [PC, #20]
0x2C02	0xF8DFA014  LDR	R10, [PC, #20]
0x2C06	0xF8DFC014  LDR	R12, [PC, #20]
0x2C0A	0xF7FEFCD3  BL	5556
0x2C0E	0xBD00    POP	(R15)
0x2C10	0x4770    BX	LR
0x2C12	0xBF00    NOP
0x2C14	0x00002000  	#536870912
0x2C18	0x001D2000  	#536870941
0x2C1C	0x2BDC0000  	#11228
0x2C7C	0xB500    PUSH	(R14)
0x2C7E	0xF8DFB010  LDR	R11, [PC, #16]
0x2C82	0xF8DFA010  LDR	R10, [PC, #16]
0x2C86	0xF7FEFC9F  BL	5576
0x2C8A	0xBD00    POP	(R15)
0x2C8C	0x4770    BX	LR
0x2C8E	0xBF00    NOP
0x2C90	0x00002000  	#536870912
0x2C94	0x042C2000  	#536871980
;oled_demo.c,1 :: _mikro_logo [1024]
0x2548	0x00000000 ;_mikro_logo+0
0x254C	0x00000000 ;_mikro_logo+4
0x2550	0x00000000 ;_mikro_logo+8
0x2554	0x00000000 ;_mikro_logo+12
0x2558	0x00000000 ;_mikro_logo+16
0x255C	0x00000000 ;_mikro_logo+20
0x2560	0x00000000 ;_mikro_logo+24
0x2564	0x00000000 ;_mikro_logo+28
0x2568	0x00000000 ;_mikro_logo+32
0x256C	0x00000000 ;_mikro_logo+36
0x2570	0x00000000 ;_mikro_logo+40
0x2574	0x00000000 ;_mikro_logo+44
0x2578	0x00000000 ;_mikro_logo+48
0x257C	0x00000000 ;_mikro_logo+52
0x2580	0x00000000 ;_mikro_logo+56
0x2584	0x00000000 ;_mikro_logo+60
0x2588	0x00000000 ;_mikro_logo+64
0x258C	0x00000000 ;_mikro_logo+68
0x2590	0x00000000 ;_mikro_logo+72
0x2594	0x00000000 ;_mikro_logo+76
0x2598	0x00000000 ;_mikro_logo+80
0x259C	0x00000000 ;_mikro_logo+84
0x25A0	0x00000000 ;_mikro_logo+88
0x25A4	0x00000000 ;_mikro_logo+92
0x25A8	0x00000000 ;_mikro_logo+96
0x25AC	0x00000000 ;_mikro_logo+100
0x25B0	0x00000000 ;_mikro_logo+104
0x25B4	0x00000000 ;_mikro_logo+108
0x25B8	0x00000000 ;_mikro_logo+112
0x25BC	0x00000000 ;_mikro_logo+116
0x25C0	0x00000000 ;_mikro_logo+120
0x25C4	0x00000000 ;_mikro_logo+124
0x25C8	0x00000000 ;_mikro_logo+128
0x25CC	0x00000000 ;_mikro_logo+132
0x25D0	0x00000000 ;_mikro_logo+136
0x25D4	0x00000000 ;_mikro_logo+140
0x25D8	0x00000000 ;_mikro_logo+144
0x25DC	0x00000000 ;_mikro_logo+148
0x25E0	0x00000000 ;_mikro_logo+152
0x25E4	0x00000000 ;_mikro_logo+156
0x25E8	0x00000000 ;_mikro_logo+160
0x25EC	0x00000000 ;_mikro_logo+164
0x25F0	0x80800000 ;_mikro_logo+168
0x25F4	0x80808080 ;_mikro_logo+172
0x25F8	0x80808080 ;_mikro_logo+176
0x25FC	0x80808080 ;_mikro_logo+180
0x2600	0x80808080 ;_mikro_logo+184
0x2604	0x80808080 ;_mikro_logo+188
0x2608	0x80808080 ;_mikro_logo+192
0x260C	0x80808080 ;_mikro_logo+196
0x2610	0x80808080 ;_mikro_logo+200
0x2614	0x80808080 ;_mikro_logo+204
0x2618	0x80808080 ;_mikro_logo+208
0x261C	0x00808080 ;_mikro_logo+212
0x2620	0x00000000 ;_mikro_logo+216
0x2624	0x00000000 ;_mikro_logo+220
0x2628	0x00000000 ;_mikro_logo+224
0x262C	0x00000000 ;_mikro_logo+228
0x2630	0x00000000 ;_mikro_logo+232
0x2634	0x00000000 ;_mikro_logo+236
0x2638	0x00000000 ;_mikro_logo+240
0x263C	0x00000000 ;_mikro_logo+244
0x2640	0x00000000 ;_mikro_logo+248
0x2644	0x00000000 ;_mikro_logo+252
0x2648	0x00000000 ;_mikro_logo+256
0x264C	0x00000000 ;_mikro_logo+260
0x2650	0x00000000 ;_mikro_logo+264
0x2654	0x00000000 ;_mikro_logo+268
0x2658	0x00000000 ;_mikro_logo+272
0x265C	0x00000000 ;_mikro_logo+276
0x2660	0x00000000 ;_mikro_logo+280
0x2664	0x00000000 ;_mikro_logo+284
0x2668	0x00000000 ;_mikro_logo+288
0x266C	0x00000000 ;_mikro_logo+292
0x2670	0xFEFEFFFF ;_mikro_logo+296
0x2674	0xC68E0EFE ;_mikro_logo+300
0x2678	0xC6C6C6C6 ;_mikro_logo+304
0x267C	0x1E0ECEC6 ;_mikro_logo+308
0x2680	0x7E7EFEFE ;_mikro_logo+312
0x2684	0x0E0E1E1E ;_mikro_logo+316
0x2688	0x0606060E ;_mikro_logo+320
0x268C	0x06060606 ;_mikro_logo+324
0x2690	0x0E0E0E06 ;_mikro_logo+328
0x2694	0x7E3E1E1E ;_mikro_logo+332
0x2698	0xFEFEFEFE ;_mikro_logo+336
0x269C	0xFFFEFEFE ;_mikro_logo+340
0x26A0	0x000000FE ;_mikro_logo+344
0x26A4	0x00000000 ;_mikro_logo+348
0x26A8	0x00000000 ;_mikro_logo+352
0x26AC	0x00000000 ;_mikro_logo+356
0x26B0	0x00000000 ;_mikro_logo+360
0x26B4	0x00000000 ;_mikro_logo+364
0x26B8	0x00000000 ;_mikro_logo+368
0x26BC	0x00000000 ;_mikro_logo+372
0x26C0	0x00000000 ;_mikro_logo+376
0x26C4	0x00000000 ;_mikro_logo+380
0x26C8	0x00000000 ;_mikro_logo+384
0x26CC	0x00000000 ;_mikro_logo+388
0x26D0	0x00000000 ;_mikro_logo+392
0x26D4	0x00000000 ;_mikro_logo+396
0x26D8	0x00000000 ;_mikro_logo+400
0x26DC	0x00000000 ;_mikro_logo+404
0x26E0	0x00000000 ;_mikro_logo+408
0x26E4	0x00000000 ;_mikro_logo+412
0x26E8	0x00000000 ;_mikro_logo+416
0x26EC	0x00000000 ;_mikro_logo+420
0x26F0	0xFFFFFFFF ;_mikro_logo+424
0x26F4	0x0C0C0EFF ;_mikro_logo+428
0x26F8	0x3C3C3C1C ;_mikro_logo+432
0x26FC	0xFFFEFC3C ;_mikro_logo+436
0x2700	0x00000003 ;_mikro_logo+440
0x2704	0x00000000 ;_mikro_logo+444
0x2708	0xF8000000 ;_mikro_logo+448
0x270C	0x00FCFEFE ;_mikro_logo+452
0x2710	0x00000000 ;_mikro_logo+456
0x2714	0x00000000 ;_mikro_logo+460
0x2718	0xFF0F0100 ;_mikro_logo+464
0x271C	0xFFFFFFFF ;_mikro_logo+468
0x2720	0x000000FF ;_mikro_logo+472
0x2724	0x00000000 ;_mikro_logo+476
0x2728	0x00000000 ;_mikro_logo+480
0x272C	0x00000000 ;_mikro_logo+484
0x2730	0x00000000 ;_mikro_logo+488
0x2734	0x00000000 ;_mikro_logo+492
0x2738	0x00000000 ;_mikro_logo+496
0x273C	0x00000000 ;_mikro_logo+500
0x2740	0x00000000 ;_mikro_logo+504
0x2744	0x00000000 ;_mikro_logo+508
0x2748	0x00000000 ;_mikro_logo+512
0x274C	0x00000000 ;_mikro_logo+516
0x2750	0x00000000 ;_mikro_logo+520
0x2754	0x00000000 ;_mikro_logo+524
0x2758	0x00000000 ;_mikro_logo+528
0x275C	0x00000000 ;_mikro_logo+532
0x2760	0x00000000 ;_mikro_logo+536
0x2764	0x00000000 ;_mikro_logo+540
0x2768	0x00000000 ;_mikro_logo+544
0x276C	0x00000000 ;_mikro_logo+548
0x2770	0xFFFFFFFF ;_mikro_logo+552
0x2774	0x83B311FF ;_mikro_logo+556
0x2778	0x83878F83 ;_mikro_logo+560
0x277C	0xFFFFFF91 ;_mikro_logo+564
0x2780	0x00000000 ;_mikro_logo+568
0x2784	0x00000000 ;_mikro_logo+572
0x2788	0x80000000 ;_mikro_logo+576
0x278C	0x80818181 ;_mikro_logo+580
0x2790	0x80808080 ;_mikro_logo+584
0x2794	0x80808080 ;_mikro_logo+588
0x2798	0xFF808080 ;_mikro_logo+592
0x279C	0xFFFFFFFF ;_mikro_logo+596
0x27A0	0x000000FF ;_mikro_logo+600
0x27A4	0x00000000 ;_mikro_logo+604
0x27A8	0x00000000 ;_mikro_logo+608
0x27AC	0x00000000 ;_mikro_logo+612
0x27B0	0x00000000 ;_mikro_logo+616
0x27B4	0x00000000 ;_mikro_logo+620
0x27B8	0x00000000 ;_mikro_logo+624
0x27BC	0x00000000 ;_mikro_logo+628
0x27C0	0x00000000 ;_mikro_logo+632
0x27C4	0x00000000 ;_mikro_logo+636
0x27C8	0x00000000 ;_mikro_logo+640
0x27CC	0x00000000 ;_mikro_logo+644
0x27D0	0x00000000 ;_mikro_logo+648
0x27D4	0x00000000 ;_mikro_logo+652
0x27D8	0x00000000 ;_mikro_logo+656
0x27DC	0x00000000 ;_mikro_logo+660
0x27E0	0x00000000 ;_mikro_logo+664
0x27E4	0x00000000 ;_mikro_logo+668
0x27E8	0x00000000 ;_mikro_logo+672
0x27EC	0x00000000 ;_mikro_logo+676
0x27F0	0xFFFFFFFF ;_mikro_logo+680
0x27F4	0x373F31FF ;_mikro_logo+684
0x27F8	0x31313131 ;_mikro_logo+688
0x27FC	0xFFFF7F31 ;_mikro_logo+692
0x2800	0x00000000 ;_mikro_logo+696
0x2804	0x00000000 ;_mikro_logo+700
0x2808	0xFF000000 ;_mikro_logo+704
0x280C	0xFFFFFFFF ;_mikro_logo+708
0x2810	0x01010101 ;_mikro_logo+712
0x2814	0x01010101 ;_mikro_logo+716
0x2818	0xFF010101 ;_mikro_logo+720
0x281C	0xFFFFFFFF ;_mikro_logo+724
0x2820	0x000000FF ;_mikro_logo+728
0x2824	0x00000000 ;_mikro_logo+732
0x2828	0x00000000 ;_mikro_logo+736
0x282C	0x00000000 ;_mikro_logo+740
0x2830	0x00000000 ;_mikro_logo+744
0x2834	0x00000000 ;_mikro_logo+748
0x2838	0x00000000 ;_mikro_logo+752
0x283C	0x00000000 ;_mikro_logo+756
0x2840	0x00000000 ;_mikro_logo+760
0x2844	0x00000000 ;_mikro_logo+764
0x2848	0x00000000 ;_mikro_logo+768
0x284C	0x00000000 ;_mikro_logo+772
0x2850	0x00000000 ;_mikro_logo+776
0x2854	0x00000000 ;_mikro_logo+780
0x2858	0x00000000 ;_mikro_logo+784
0x285C	0x00000000 ;_mikro_logo+788
0x2860	0x00000000 ;_mikro_logo+792
0x2864	0x00000000 ;_mikro_logo+796
0x2868	0x00000000 ;_mikro_logo+800
0x286C	0x00000000 ;_mikro_logo+804
0x2870	0xFFFFFFFF ;_mikro_logo+808
0x2874	0x636302FF ;_mikro_logo+812
0x2878	0x63636363 ;_mikro_logo+816
0x287C	0x7F676363 ;_mikro_logo+820
0x2880	0x80C0707C ;_mikro_logo+824
0x2884	0x00000080 ;_mikro_logo+828
0x2888	0x01000000 ;_mikro_logo+832
0x288C	0x01070707 ;_mikro_logo+836
0x2890	0x00000000 ;_mikro_logo+840
0x2894	0xC0800000 ;_mikro_logo+844
0x2898	0xFFFEF0E0 ;_mikro_logo+848
0x289C	0xFFFFFFFF ;_mikro_logo+852
0x28A0	0x000000FF ;_mikro_logo+856
0x28A4	0x00000000 ;_mikro_logo+860
0x28A8	0x00000000 ;_mikro_logo+864
0x28AC	0x00000000 ;_mikro_logo+868
0x28B0	0x00000000 ;_mikro_logo+872
0x28B4	0x00000000 ;_mikro_logo+876
0x28B8	0x00000000 ;_mikro_logo+880
0x28BC	0x00000000 ;_mikro_logo+884
0x28C0	0x00000000 ;_mikro_logo+888
0x28C4	0x00000000 ;_mikro_logo+892
0x28C8	0x00000000 ;_mikro_logo+896
0x28CC	0x00000000 ;_mikro_logo+900
0x28D0	0x00000000 ;_mikro_logo+904
0x28D4	0x00000000 ;_mikro_logo+908
0x28D8	0x00000000 ;_mikro_logo+912
0x28DC	0x00000000 ;_mikro_logo+916
0x28E0	0x00000000 ;_mikro_logo+920
0x28E4	0x00000000 ;_mikro_logo+924
0x28E8	0x00000000 ;_mikro_logo+928
0x28EC	0x00000000 ;_mikro_logo+932
0x28F0	0x6F6F3F0F ;_mikro_logo+936
0x28F4	0x6E6E6E6F ;_mikro_logo+940
0x28F8	0x6E6E6E6E ;_mikro_logo+944
0x28FC	0x6E6E6E6E ;_mikro_logo+948
0x2900	0x6F6E6E6E ;_mikro_logo+952
0x2904	0x6E6F6F6F ;_mikro_logo+956
0x2908	0x6E6E6E6E ;_mikro_logo+960
0x290C	0x6E6E6E6E ;_mikro_logo+964
0x2910	0x6E6E6E6E ;_mikro_logo+968
0x2914	0x6F6F6F6F ;_mikro_logo+972
0x2918	0x6F6F6F6F ;_mikro_logo+976
0x291C	0x1F676F6F ;_mikro_logo+980
0x2920	0x0000000F ;_mikro_logo+984
0x2924	0x00000000 ;_mikro_logo+988
0x2928	0x00000000 ;_mikro_logo+992
0x292C	0x00000000 ;_mikro_logo+996
0x2930	0x00000000 ;_mikro_logo+1000
0x2934	0x00000000 ;_mikro_logo+1004
0x2938	0x00000000 ;_mikro_logo+1008
0x293C	0x00000000 ;_mikro_logo+1012
0x2940	0x00000000 ;_mikro_logo+1016
0x2944	0x00000000 ;_mikro_logo+1020
; end of _mikro_logo
;oled_demo.c,1 :: _font_regular [552]
0x2948	0x00000000 ;_font_regular+0
0x294C	0x00000000 ;_font_regular+4
0x2950	0x00002F00 ;_font_regular+8
0x2954	0x00070000 ;_font_regular+12
0x2958	0x14000007 ;_font_regular+16
0x295C	0x147F147F ;_font_regular+20
0x2960	0x7F2A2400 ;_font_regular+24
0x2964	0x6200122A ;_font_regular+28
0x2968	0x23130864 ;_font_regular+32
0x296C	0x55493600 ;_font_regular+36
0x2970	0x00005022 ;_font_regular+40
0x2974	0x00000305 ;_font_regular+44
0x2978	0x221C0000 ;_font_regular+48
0x297C	0x00000041 ;_font_regular+52
0x2980	0x001C2241 ;_font_regular+56
0x2984	0x3E081400 ;_font_regular+60
0x2988	0x08001408 ;_font_regular+64
0x298C	0x08083E08 ;_font_regular+68
0x2990	0xA0000000 ;_font_regular+72
0x2994	0x08000060 ;_font_regular+76
0x2998	0x08080808 ;_font_regular+80
0x299C	0x60600000 ;_font_regular+84
0x29A0	0x20000000 ;_font_regular+88
0x29A4	0x02040810 ;_font_regular+92
0x29A8	0x49513E00 ;_font_regular+96
0x29AC	0x00003E45 ;_font_regular+100
0x29B0	0x00407F42 ;_font_regular+104
0x29B4	0x51614200 ;_font_regular+108
0x29B8	0x21004649 ;_font_regular+112
0x29BC	0x314B4541 ;_font_regular+116
0x29C0	0x12141800 ;_font_regular+120
0x29C4	0x2700107F ;_font_regular+124
0x29C8	0x39454545 ;_font_regular+128
0x29CC	0x494A3C00 ;_font_regular+132
0x29D0	0x01003049 ;_font_regular+136
0x29D4	0x03050971 ;_font_regular+140
0x29D8	0x49493600 ;_font_regular+144
0x29DC	0x06003649 ;_font_regular+148
0x29E0	0x1E294949 ;_font_regular+152
0x29E4	0x36360000 ;_font_regular+156
0x29E8	0x00000000 ;_font_regular+160
0x29EC	0x00003656 ;_font_regular+164
0x29F0	0x22140800 ;_font_regular+168
0x29F4	0x14000041 ;_font_regular+172
0x29F8	0x14141414 ;_font_regular+176
0x29FC	0x22410000 ;_font_regular+180
0x2A00	0x02000814 ;_font_regular+184
0x2A04	0x06095101 ;_font_regular+188
0x2A08	0x59493200 ;_font_regular+192
0x2A0C	0x7C003E51 ;_font_regular+196
0x2A10	0x7C121112 ;_font_regular+200
0x2A14	0x49497F00 ;_font_regular+204
0x2A18	0x3E003649 ;_font_regular+208
0x2A1C	0x22414141 ;_font_regular+212
0x2A20	0x41417F00 ;_font_regular+216
0x2A24	0x7F001C22 ;_font_regular+220
0x2A28	0x41494949 ;_font_regular+224
0x2A2C	0x09097F00 ;_font_regular+228
0x2A30	0x3E000109 ;_font_regular+232
0x2A34	0x7A494941 ;_font_regular+236
0x2A38	0x08087F00 ;_font_regular+240
0x2A3C	0x00007F08 ;_font_regular+244
0x2A40	0x00417F41 ;_font_regular+248
0x2A44	0x41402000 ;_font_regular+252
0x2A48	0x7F00013F ;_font_regular+256
0x2A4C	0x41221408 ;_font_regular+260
0x2A50	0x40407F00 ;_font_regular+264
0x2A54	0x7F004040 ;_font_regular+268
0x2A58	0x7F020C02 ;_font_regular+272
0x2A5C	0x08047F00 ;_font_regular+276
0x2A60	0x3E007F10 ;_font_regular+280
0x2A64	0x3E414141 ;_font_regular+284
0x2A68	0x09097F00 ;_font_regular+288
0x2A6C	0x3E000609 ;_font_regular+292
0x2A70	0x5E215141 ;_font_regular+296
0x2A74	0x19097F00 ;_font_regular+300
0x2A78	0x46004629 ;_font_regular+304
0x2A7C	0x31494949 ;_font_regular+308
0x2A80	0x7F010100 ;_font_regular+312
0x2A84	0x3F000101 ;_font_regular+316
0x2A88	0x3F404040 ;_font_regular+320
0x2A8C	0x40201F00 ;_font_regular+324
0x2A90	0x3F001F20 ;_font_regular+328
0x2A94	0x3F403840 ;_font_regular+332
0x2A98	0x08146300 ;_font_regular+336
0x2A9C	0x07006314 ;_font_regular+340
0x2AA0	0x07087008 ;_font_regular+344
0x2AA4	0x49516100 ;_font_regular+348
0x2AA8	0x00004345 ;_font_regular+352
0x2AAC	0x0041417F ;_font_regular+356
0x2AB0	0x08040200 ;_font_regular+360
0x2AB4	0x00002010 ;_font_regular+364
0x2AB8	0x007F4141 ;_font_regular+368
0x2ABC	0x01020400 ;_font_regular+372
0x2AC0	0x40000402 ;_font_regular+376
0x2AC4	0x40404040 ;_font_regular+380
0x2AC8	0x02010000 ;_font_regular+384
0x2ACC	0x20000004 ;_font_regular+388
0x2AD0	0x78545454 ;_font_regular+392
0x2AD4	0x44487F00 ;_font_regular+396
0x2AD8	0x38003844 ;_font_regular+400
0x2ADC	0x20444444 ;_font_regular+404
0x2AE0	0x44443800 ;_font_regular+408
0x2AE4	0x38007F48 ;_font_regular+412
0x2AE8	0x18545454 ;_font_regular+416
0x2AEC	0x097E0800 ;_font_regular+420
0x2AF0	0x18000201 ;_font_regular+424
0x2AF4	0x7CA4A4A4 ;_font_regular+428
0x2AF8	0x04087F00 ;_font_regular+432
0x2AFC	0x00007804 ;_font_regular+436
0x2B00	0x00407D44 ;_font_regular+440
0x2B04	0x84804000 ;_font_regular+444
0x2B08	0x7F00007D ;_font_regular+448
0x2B0C	0x00442810 ;_font_regular+452
0x2B10	0x7F410000 ;_font_regular+456
0x2B14	0x7C000040 ;_font_regular+460
0x2B18	0x78041804 ;_font_regular+464
0x2B1C	0x04087C00 ;_font_regular+468
0x2B20	0x38007804 ;_font_regular+472
0x2B24	0x38444444 ;_font_regular+476
0x2B28	0x2424FC00 ;_font_regular+480
0x2B2C	0x18001824 ;_font_regular+484
0x2B30	0xFC182424 ;_font_regular+488
0x2B34	0x04087C00 ;_font_regular+492
0x2B38	0x48000804 ;_font_regular+496
0x2B3C	0x20545454 ;_font_regular+500
0x2B40	0x443F0400 ;_font_regular+504
0x2B44	0x3C002040 ;_font_regular+508
0x2B48	0x7C204040 ;_font_regular+512
0x2B4C	0x40201C00 ;_font_regular+516
0x2B50	0x3C001C20 ;_font_regular+520
0x2B54	0x3C403040 ;_font_regular+524
0x2B58	0x10284400 ;_font_regular+528
0x2B5C	0x1C004428 ;_font_regular+532
0x2B60	0x7CA0A0A0 ;_font_regular+536
0x2B64	0x54644400 ;_font_regular+540
0x2B68	0x1414444C ;_font_regular+544
0x2B6C	0x14141414 ;_font_regular+548
; end of _font_regular
;__Lib_GPIO_32F10x_Defs.c,655 :: __GPIO_MODULE_SPI1_PA567 [108]
0x2B70	0x00000005 ;__GPIO_MODULE_SPI1_PA567+0
0x2B74	0x00000006 ;__GPIO_MODULE_SPI1_PA567+4
0x2B78	0x00000007 ;__GPIO_MODULE_SPI1_PA567+8
0x2B7C	0xFFFFFFFF ;__GPIO_MODULE_SPI1_PA567+12
0x2B80	0x00000000 ;__GPIO_MODULE_SPI1_PA567+16
0x2B84	0x00000000 ;__GPIO_MODULE_SPI1_PA567+20
0x2B88	0x00000000 ;__GPIO_MODULE_SPI1_PA567+24
0x2B8C	0x00000000 ;__GPIO_MODULE_SPI1_PA567+28
0x2B90	0x00000000 ;__GPIO_MODULE_SPI1_PA567+32
0x2B94	0x00000000 ;__GPIO_MODULE_SPI1_PA567+36
0x2B98	0x00000000 ;__GPIO_MODULE_SPI1_PA567+40
0x2B9C	0x00000000 ;__GPIO_MODULE_SPI1_PA567+44
0x2BA0	0x00000000 ;__GPIO_MODULE_SPI1_PA567+48
0x2BA4	0x00000818 ;__GPIO_MODULE_SPI1_PA567+52
0x2BA8	0x00000818 ;__GPIO_MODULE_SPI1_PA567+56
0x2BAC	0x00000818 ;__GPIO_MODULE_SPI1_PA567+60
0x2BB0	0x00000000 ;__GPIO_MODULE_SPI1_PA567+64
0x2BB4	0x00000000 ;__GPIO_MODULE_SPI1_PA567+68
0x2BB8	0x00000000 ;__GPIO_MODULE_SPI1_PA567+72
0x2BBC	0x00000000 ;__GPIO_MODULE_SPI1_PA567+76
0x2BC0	0x00000000 ;__GPIO_MODULE_SPI1_PA567+80
0x2BC4	0x00000000 ;__GPIO_MODULE_SPI1_PA567+84
0x2BC8	0x00000000 ;__GPIO_MODULE_SPI1_PA567+88
0x2BCC	0x00000000 ;__GPIO_MODULE_SPI1_PA567+92
0x2BD0	0x00000000 ;__GPIO_MODULE_SPI1_PA567+96
0x2BD4	0x00000000 ;__GPIO_MODULE_SPI1_PA567+100
0x2BD8	0x00000001 ;__GPIO_MODULE_SPI1_PA567+104
; end of __GPIO_MODULE_SPI1_PA567
;,0 :: _initBlock_3 [29]
; Containing: ?ICS?lstr1_oled_demo [11]
;             ?ICS?lstr2_oled_demo [18]
0x2BDC	0x7263694D ;_initBlock_3+0 : ?ICS?lstr1_oled_demo at 0x2BDC
0x2BE0	0x6572416F ;_initBlock_3+4
0x2BE4	0x6600616E ;_initBlock_3+8 : ?ICS?lstr2_oled_demo at 0x2BE7
0x2BE8	0x6F632E62 ;_initBlock_3+12
0x2BEC	0x694D2F6D ;_initBlock_3+16
0x2BF0	0x416F7263 ;_initBlock_3+20
0x2BF4	0x616E6572 ;_initBlock_3+24
0x2BF8	0x00 ;_initBlock_3+28
; end of _initBlock_3
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0130      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x0174     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x020C      [34]    __Lib_SPI_123_SPIx_Read
0x0230      [76]    _OLED_fill
0x027C     [272]    _GPIO_Alternate_Function_Enable
0x038C      [28]    _SPI1_Write
0x03A8      [84]    _SPI1_Init_Advanced
0x03FC     [500]    _GPIO_Config
0x05F0     [140]    _GPIO_Clk_Enable
0x067C      [28]    _OLED_clear_buffer
0x0698      [62]    _OLED_gotoxy
0x06D8      [20]    _OLED_clear_screen
0x06EC      [76]    _OLED_print_char
0x0738     [120]    _Draw_Pixel
0x07B0      [68]    _OLED_reset_sequence
0x07F8     [152]    _setup_GPIOs
0x0890      [52]    _OLED_write
0x08C4     [238]    _OLED_init
0x09B4      [64]    __SignedIntegralToFloat
0x09F4      [16]    _swap
0x0A04      [66]    __FloatToSignedIntegral
0x0A48     [812]    _OLED_print_int
0x0D74     [100]    _Draw_H_Line
0x0DD8     [200]    _OLED_print_decimal
0x0EA0     [104]    __Compare_FP
0x0F08     [138]    __Mul_FP
0x0F94     [336]    _Draw_Line
0x10E4     [258]    __Sub_FP
0x11E8     [368]    _OLED_print_chr
0x1358      [80]    __Lib_System_101_102_103_SystemClockSetDefault
0x13A8     [428]    _OLED_print_float
0x1554      [18]    _setup_MCU
0x1568      [76]    _OLED_print_Image
0x15B4      [20]    ___CC2DW
0x15C8      [58]    ___FillZeros
0x1604     [636]    _Draw_Circle
0x1880     [140]    _OLED_print_string
0x190C     [254]    __Add_FP
0x1A0C     [444]    _Draw_Rectangle
0x1BC8     [906]    _Draw_Triangle
0x1F54      [20]    __Lib_System_101_102_103_InitialSetUpFosc
0x1F68       [8]    ___GenExcept
0x1F70     [240]    __Lib_System_101_102_103_InitialSetUpRCCRCC2
0x2060    [1256]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [11]    ?lstr1_oled_demo
0x2000000B      [18]    ?lstr2_oled_demo
0x2000001D    [1024]    _buffer
0x20000420       [4]    _SPI_Rd_Ptr
0x20000424       [4]    _SPI_Wr_Ptr
0x20000428       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2548    [1024]    _mikro_logo
0x2948     [552]    _font_regular
0x2B70     [108]    __GPIO_MODULE_SPI1_PA567
0x2BDC      [11]    ?ICS?lstr1_oled_demo
0x2BE7      [18]    ?ICS?lstr2_oled_demo
