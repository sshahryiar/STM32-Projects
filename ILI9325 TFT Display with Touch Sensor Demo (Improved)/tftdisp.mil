_TFT_GPIO_init:
  begin   (midx: 0)
//ili932x.c,126 :: 		void TFT_GPIO_init()
_TFT_GPIO_init:
  begin   (midx: 0)
//ili932x.c,128 :: 		GPIO_Clk_Enable(&GPIOB_BASE);
	R0 <4> <- #GPIOB_BASE   (midx: 0)
	CALL _GPIO_Clk_Enable   (midx: 0)
//ili932x.c,132 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
	R2 <4> <- 524308   (midx: 0)
//ili932x.c,131 :: 		| _GPIO_PINMASK_12 | _GPIO_PINMASK_13 | _GPIO_PINMASK_14 | _GPIO_PINMASK_15),
	R1 <2> <- 65280   (midx: 0)
//ili932x.c,129 :: 		GPIO_Config(&GPIOB_BASE,
	R0 <4> <- #GPIOB_BASE   (midx: 0)
//ili932x.c,132 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
	CALL _GPIO_Config   (midx: 0)
//ili932x.c,135 :: 		GPIO_Clk_Enable(&GPIOC_BASE);
	R0 <4> <- #GPIOC_BASE   (midx: 0)
	CALL _GPIO_Clk_Enable   (midx: 0)
//ili932x.c,142 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
	R2 <4> <- 524308   (midx: 0)
//ili932x.c,141 :: 		| _GPIO_PINMASK_12),
	R1 <2> <- 8191   (midx: 0)
//ili932x.c,136 :: 		GPIO_Config(&GPIOC_BASE,
	R0 <4> <- #GPIOC_BASE   (midx: 0)
//ili932x.c,142 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
	CALL _GPIO_Config   (midx: 0)
  end
   (midx: 0)
_TFT_write:
  begin   (midx: 0)
//ili932x.c,152 :: 		void TFT_write(unsigned int value, unsigned char mode)
_TFT_write:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,154 :: 		TFT_CS_pin = 0;
	R4 <1> <- 0   (midx: 0)
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R4   (midx: 20)
//ili932x.c,155 :: 		TFT_RS_pin = mode;
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
   (midx: 0)
	[R2] <0> <- R1   (midx: 20)
//ili932x.c,156 :: 		TFT_data_out_port_low = ((TFT_data_out_port_low & 0xFF00) | (value & 0x00FF));
	R2 <4> <- addr(GPIOC_ODR)   (midx: 0)
	R2 <4> <- [R2]   (midx: 0)
	R3 <4> <-  R2 & 65280   (midx: 2)
	R2 <2> <-  R0 & 255   (midx: 1)
	R3 <4> <-  R3 | R2   (midx: 2)
	R2 <4> <- addr(GPIOC_ODR)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//ili932x.c,157 :: 		TFT_data_out_port_high = ((TFT_data_out_port_high & 0x00FF) | (value & 0xFF00));
	R2 <4> <- addr(GPIOB_ODR)   (midx: 0)
	R2 <4> <- [R2]   (midx: 0)
	R3 <4> <-  R2 & 255   (midx: 2)
   (midx: 0)
	R2 <2> <-  R0 & 65280   (midx: 1)
	R3 <4> <-  R3 | R2   (midx: 2)
	R2 <4> <- addr(GPIOB_ODR)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//ili932x.c,158 :: 		TFT_WR_pin = 0;
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R4   (midx: 20)
//ili932x.c,159 :: 		TFT_WR_pin = 1;
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//ili932x.c,160 :: 		TFT_CS_pin = 1;
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
  end
   (midx: 0)
_TFT_write_reg:
  begin   (midx: 0)
//ili932x.c,200 :: 		void TFT_write_reg(unsigned int reg_val, unsigned int data_val)
_TFT_write_reg:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R5 <2> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,202 :: 		TFT_write(reg_val, CMD);
	R1 <1> <- 0   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_write   (midx: 0)
//ili932x.c,203 :: 		TFT_write(data_val, DAT);
	R1 <1> <- 1   (midx: 0)
   (midx: 0)
	R0 <2> <- R5   (midx: 0)
	CALL _TFT_write   (midx: 0)
  end
   (midx: 0)
_TFT_read:
  begin   (midx: 0)
//ili932x.c,164 :: 		unsigned int TFT_read(unsigned int value, unsigned char mode)
_TFT_read:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,166 :: 		unsigned int temp = 0x0000;
   (midx: 0)
//ili932x.c,168 :: 		switch(mode)
   (midx: 0)
	goto	16   (midx: 0)
//ili932x.c,170 :: 		case REG:
18:   (midx: 0)
//ili932x.c,172 :: 		TFT_write(value, CMD);
	R1 <1> <- 0   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_write   (midx: 0)
//ili932x.c,173 :: 		break;
	goto	17   (midx: 0)
//ili932x.c,175 :: 		case DAT:
19:   (midx: 0)
//ili932x.c,177 :: 		break;
	goto	17   (midx: 0)
//ili932x.c,179 :: 		}
16:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R1 = 0) then goto 18   (midx: 0)
   (midx: 0)
	if ( R1 = 1) then goto 19   (midx: 0)
17:   (midx: 0)
//ili932x.c,181 :: 		TFT_port_config_high = 0x44444444;
	R3 <4> <- 1145324612   (midx: 0)
	R2 <4> <- addr(GPIOB_CRH)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//ili932x.c,182 :: 		TFT_port_config_low = 0x44444444;
	R3 <4> <- 1145324612   (midx: 0)
	R2 <4> <- addr(GPIOC_CRL)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//ili932x.c,184 :: 		TFT_CS_pin = 0;
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//ili932x.c,185 :: 		TFT_RS_pin = 1;
	R5 <1> <- 1   (midx: 0)
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R5   (midx: 20)
//ili932x.c,186 :: 		TFT_RD_pin = 0;
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//ili932x.c,188 :: 		temp = ((TFT_data_in_port_high & 0xFF00) | (TFT_data_in_port_low & 0x00FF));
	R2 <4> <- addr(GPIOB_IDR)   (midx: 0)
	R2 <4> <- [R2]   (midx: 0)
	R3 <4> <-  R2 & 65280   (midx: 2)
	R2 <4> <- addr(GPIOC_IDR)   (midx: 0)
	R2 <4> <- [R2]   (midx: 0)
	R2 <4> <-  R2 & 255   (midx: 2)
	R4 <4> <-  R3 | R2   (midx: 2)
//ili932x.c,190 :: 		TFT_RD_pin = 1;
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R5   (midx: 20)
//ili932x.c,191 :: 		TFT_CS_pin = 1;
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R5   (midx: 20)
//ili932x.c,193 :: 		TFT_port_config_high = 0x33333333;
	R3 <4> <- 858993459   (midx: 0)
	R2 <4> <- addr(GPIOB_CRH)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//ili932x.c,194 :: 		TFT_port_config_low = 0x33333333;
	R3 <4> <- 858993459   (midx: 0)
	R2 <4> <- addr(GPIOC_CRL)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//ili932x.c,196 :: 		return temp;
	R0 <2> <- R4   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_TFT_set_cursor:
  begin   (midx: 0)
//ili932x.c,253 :: 		void TFT_set_cursor(unsigned int x_pos, unsigned int y_pos)
_TFT_set_cursor:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <2> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,255 :: 		unsigned int temp = 0x0000;
   (midx: 0)
//ili932x.c,261 :: 		temp = x_pos;
   (midx: 0)
	R0 <2> <- R1   (midx: 0)
//ili932x.c,262 :: 		x_pos = y_pos;
   (midx: 0)
	R1 <2> <- R2   (midx: 0)
//ili932x.c,263 :: 		y_pos = (MAX_X - temp - 1);
   (midx: 0)
	R2 <2> <-  320 - R0   (midx: 1)
	R2 <2> <-  R2 - 1   (midx: 1)
   (midx: 0)
	R6 <2> <- R2   (midx: 0)
//ili932x.c,278 :: 		TFT_write_reg(R32, x_pos);
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- 32   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,279 :: 		TFT_write_reg(R33, y_pos);
   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- 33   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
  end
   (midx: 0)
_TFT_write_RAM_prepare:
  begin   (midx: 0)
//ili932x.c,207 :: 		void TFT_write_RAM_prepare()
_TFT_write_RAM_prepare:
  begin   (midx: 0)
//ili932x.c,209 :: 		TFT_write(R34, CMD);
	R1 <1> <- 0   (midx: 0)
	R0 <2> <- 34   (midx: 0)
	CALL _TFT_write   (midx: 0)
  end
   (midx: 0)
_TFT_fill:
  begin   (midx: 0)
//ili932x.c,213 :: 		void TFT_fill(unsigned int colour)
_TFT_fill:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R7 <2> <- R0   (midx: 0)
   (midx: 0)
//ili932x.c,215 :: 		unsigned long index = (MAX_X * MAX_Y);
   (midx: 0)
   (midx: 0)
	R8 <-initialize(76800)   (midx: 0)
//ili932x.c,217 :: 		TFT_set_cursor(0, 0);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_set_cursor   (midx: 0)
//ili932x.c,218 :: 		TFT_CS_pin = 0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
//ili932x.c,219 :: 		TFT_write_RAM_prepare();
   (midx: 0)
   (midx: 0)
	CALL _TFT_write_RAM_prepare   (midx: 0)
	R5 <2> <- R7   (midx: 0)
	R6 <4> <- R8   (midx: 0)
//ili932x.c,221 :: 		while(index)
20:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if (!R6) then goto 21   (midx: 0)
//ili932x.c,223 :: 		TFT_write(colour, DAT);
   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <2> <- R5   (midx: 0)
	CALL _TFT_write   (midx: 0)
//ili932x.c,224 :: 		index--;
	R6 <4> <-  R6 - 1   (midx: 2)
	R6 <4> <- R6   (midx: 0)
//ili932x.c,225 :: 		}
   (midx: 0)
   (midx: 0)
	R5 <2> <- R5   (midx: 0)
	R6 <4> <- R6   (midx: 0)
	goto	20   (midx: 0)
21:   (midx: 0)
//ili932x.c,226 :: 		TFT_CS_pin = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
  end
   (midx: 0)
_TFT_backlight_state:
  begin   (midx: 0)
//ili932x.c,146 :: 		void TFT_backlight_state(unsigned char value)
_TFT_backlight_state:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//ili932x.c,148 :: 		TFT_BL_pin = (value & 0x01);
   (midx: 0)
	R2 <1> <-  R0 & 1   (midx: 0)
	R1 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
  end
   (midx: 0)
_TFT_init:
  begin   (midx: 0)
//ili932x.c,4 :: 		void TFT_init()
_TFT_init:
  begin   (midx: 0)
//ili932x.c,8 :: 		TFT_GPIO_init();
	CALL _TFT_GPIO_init   (midx: 0)
//ili932x.c,10 :: 		TFT_write_reg(0x0000, 0x0001);
	R1 <2> <- 1   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,11 :: 		delay_ms(50);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,13 :: 		device_code = TFT_read(0x0000, REG);
	R1 <1> <- 0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_read   (midx: 0)
	R1 <4> <- addr(TFT_init_device_code_L0)   (midx: 0)
	[R1] <2> <- R0   (midx: 0)
//ili932x.c,16 :: 		if((device_code == 0x9325) || (device_code == 0x9328))
	R1 <4> <- 37669   (midx: 0)
	if ( R0 = R1) then goto 162   (midx: 1)
	R0 <4> <- addr(TFT_init_device_code_L0)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- 37672   (midx: 0)
	if ( R1 = R0) then goto 161   (midx: 1)
	goto	3   (midx: 0)
162:   (midx: 0)
161:   (midx: 0)
//ili932x.c,18 :: 		TFT_write_reg(R229, 0x78F0);
	R1 <2> <- 30960   (midx: 0)
	R0 <2> <- 229   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,19 :: 		TFT_write_reg(R1, 0x0100);
	R1 <2> <- 256   (midx: 0)
	R0 <2> <- 1   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,20 :: 		TFT_write_reg(R2, 0x0700);
	R1 <2> <- 1792   (midx: 0)
	R0 <2> <- 2   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,21 :: 		TFT_write_reg(R3, 0x1030);
	R1 <2> <- 4144   (midx: 0)
	R0 <2> <- 3   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,22 :: 		TFT_write_reg(R4, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 4   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,23 :: 		TFT_write_reg(R8, 0x0202);
	R1 <2> <- 514   (midx: 0)
	R0 <2> <- 8   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,24 :: 		TFT_write_reg(R9, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 9   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,25 :: 		TFT_write_reg(R10, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 10   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,26 :: 		TFT_write_reg(R12, 0x0001);
	R1 <2> <- 1   (midx: 0)
	R0 <2> <- 12   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,27 :: 		TFT_write_reg(R13, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 13   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,28 :: 		TFT_write_reg(R15, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 15   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,29 :: 		TFT_write_reg(R16, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 16   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,30 :: 		TFT_write_reg(R17, 0x0007);
	R1 <2> <- 7   (midx: 0)
	R0 <2> <- 17   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,31 :: 		TFT_write_reg(R18, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 18   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,32 :: 		TFT_write_reg(R19, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 19   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,33 :: 		TFT_write_reg(R7, 0x0001);
	R1 <2> <- 1   (midx: 0)
	R0 <2> <- 7   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,34 :: 		delay_ms(50);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,35 :: 		TFT_write_reg(R16, 0x1690);
	R1 <2> <- 5776   (midx: 0)
	R0 <2> <- 16   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,36 :: 		TFT_write_reg(R17, 0x0227);
	R1 <2> <- 551   (midx: 0)
	R0 <2> <- 17   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,37 :: 		delay_ms(50);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,38 :: 		TFT_write_reg(R18, 0x009D);
	R1 <2> <- 157   (midx: 0)
	R0 <2> <- 18   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,39 :: 		delay_ms(50);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,40 :: 		TFT_write_reg(R19, 0x1900);
	R1 <2> <- 6400   (midx: 0)
	R0 <2> <- 19   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,41 :: 		TFT_write_reg(R41, 0x0025);
	R1 <2> <- 37   (midx: 0)
	R0 <2> <- 41   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,42 :: 		TFT_write_reg(R43, 0x000D);
	R1 <2> <- 13   (midx: 0)
	R0 <2> <- 43   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,43 :: 		delay_ms(50);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,44 :: 		TFT_write_reg(R32, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 32   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,45 :: 		TFT_write_reg(R33, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 33   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,46 :: 		delay_ms(50);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,47 :: 		TFT_write_reg(R49, 0x0007);
	R1 <2> <- 7   (midx: 0)
	R0 <2> <- 49   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,48 :: 		TFT_write_reg(R50, 0x0303);
	R1 <2> <- 771   (midx: 0)
	R0 <2> <- 50   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,49 :: 		TFT_write_reg(R51, 0x0003);
	R1 <2> <- 3   (midx: 0)
	R0 <2> <- 51   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,50 :: 		TFT_write_reg(R53, 0x0206);
	R1 <2> <- 518   (midx: 0)
	R0 <2> <- 53   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,51 :: 		TFT_write_reg(R54, 0x0008);
	R1 <2> <- 8   (midx: 0)
	R0 <2> <- 54   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,52 :: 		TFT_write_reg(R55, 0x0406);
	R1 <2> <- 1030   (midx: 0)
	R0 <2> <- 55   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,53 :: 		TFT_write_reg(R56, 0x0304);
	R1 <2> <- 772   (midx: 0)
	R0 <2> <- 56   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,54 :: 		TFT_write_reg(R57, 0x0007);
	R1 <2> <- 7   (midx: 0)
	R0 <2> <- 57   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,55 :: 		TFT_write_reg(R60, 0x0602);
	R1 <2> <- 1538   (midx: 0)
	R0 <2> <- 60   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,56 :: 		TFT_write_reg(R61, 0x0008);
	R1 <2> <- 8   (midx: 0)
	R0 <2> <- 61   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,57 :: 		delay_ms(50);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,58 :: 		TFT_write_reg(R80, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 80   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,59 :: 		TFT_write_reg(R81, 0x00EF);
	R1 <2> <- 239   (midx: 0)
	R0 <2> <- 81   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,60 :: 		TFT_write_reg(R82, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 82   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,61 :: 		TFT_write_reg(R83, 0x013F);
	R1 <2> <- 319   (midx: 0)
	R0 <2> <- 83   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,62 :: 		TFT_write_reg(R96, 0xA700);
	R1 <2> <- 42752   (midx: 0)
	R0 <2> <- 96   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,63 :: 		TFT_write_reg(R97, 0x0001);
	R1 <2> <- 1   (midx: 0)
	R0 <2> <- 97   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,64 :: 		TFT_write_reg(R106, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 106   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,65 :: 		TFT_write_reg(R128, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 128   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,66 :: 		TFT_write_reg(R129, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 129   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,67 :: 		TFT_write_reg(R130, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 130   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,68 :: 		TFT_write_reg(R131, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 131   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,69 :: 		TFT_write_reg(R132, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 132   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,70 :: 		TFT_write_reg(R133, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 133   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,71 :: 		TFT_write_reg(R144, 0x0010);
	R1 <2> <- 16   (midx: 0)
	R0 <2> <- 144   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,72 :: 		TFT_write_reg(R146, 0x0600);
	R1 <2> <- 1536   (midx: 0)
	R0 <2> <- 146   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,73 :: 		TFT_write_reg(R7, 0x0133);
	R1 <2> <- 307   (midx: 0)
	R0 <2> <- 7   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,74 :: 		}
3:   (midx: 0)
//ili932x.c,76 :: 		if((device_code == 0x9320) || (device_code == 0x9300))
	R0 <4> <- addr(TFT_init_device_code_L0)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- 37664   (midx: 0)
	if ( R1 = R0) then goto 164   (midx: 1)
	R0 <4> <- addr(TFT_init_device_code_L0)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	if ( R0 = 37632) then goto 163   (midx: 1)
	goto	12   (midx: 0)
164:   (midx: 0)
163:   (midx: 0)
//ili932x.c,78 :: 		TFT_write_reg(R0, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,79 :: 		TFT_write_reg(R1, 0x0100);
	R1 <2> <- 256   (midx: 0)
	R0 <2> <- 1   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,80 :: 		TFT_write_reg(R2, 0x0700);
	R1 <2> <- 1792   (midx: 0)
	R0 <2> <- 2   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,81 :: 		TFT_write_reg(R3, 0x1030);
	R1 <2> <- 4144   (midx: 0)
	R0 <2> <- 3   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,82 :: 		TFT_write_reg(R4, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 4   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,83 :: 		TFT_write_reg(R8, 0x0202);
	R1 <2> <- 514   (midx: 0)
	R0 <2> <- 8   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,84 :: 		TFT_write_reg(R9, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 9   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,85 :: 		TFT_write_reg(R10, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 10   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,86 :: 		TFT_write_reg(R12, (1 << 0));
	R1 <2> <- 1   (midx: 0)
	R0 <2> <- 12   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,87 :: 		TFT_write_reg(R13, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 13   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,88 :: 		TFT_write_reg(R15, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 15   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,89 :: 		delay_ms(10);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,90 :: 		TFT_write_reg(R7, 0x0101);
	R1 <2> <- 257   (midx: 0)
	R0 <2> <- 7   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,91 :: 		delay_ms(10);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,92 :: 		TFT_write_reg(R16, ((1 << 12) | (0 << 8) | (1 << 7) | (1 << 6) | (0 << 4)));
	R1 <2> <- 4288   (midx: 0)
	R0 <2> <- 16   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,93 :: 		TFT_write_reg(R17, 0x0007);
	R1 <2> <- 7   (midx: 0)
	R0 <2> <- 17   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,94 :: 		TFT_write_reg(R18, (1 << 8) | (1 << 4)| (0 << 0));
	R1 <2> <- 272   (midx: 0)
	R0 <2> <- 18   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,95 :: 		TFT_write_reg(R19, 0x0B00);
	R1 <2> <- 2816   (midx: 0)
	R0 <2> <- 19   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,96 :: 		TFT_write_reg(R41, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 41   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,97 :: 		TFT_write_reg(R43, ((1 << 14) | (1 << 4)));
	R1 <2> <- 16400   (midx: 0)
	R0 <2> <- 43   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,98 :: 		TFT_write_reg(R80, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 80   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,99 :: 		TFT_write_reg(R81, 0x00EF);
	R1 <2> <- 239   (midx: 0)
	R0 <2> <- 81   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,100 :: 		TFT_write_reg(R82, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 82   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,101 :: 		TFT_write_reg(R83, 0x013F);
	R1 <2> <- 319   (midx: 0)
	R0 <2> <- 83   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,102 :: 		TFT_write_reg(R96, 0x2700);
	R1 <2> <- 9984   (midx: 0)
	R0 <2> <- 96   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,103 :: 		TFT_write_reg(R97, 0x0001);
	R1 <2> <- 1   (midx: 0)
	R0 <2> <- 97   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,104 :: 		TFT_write_reg(R106, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 106   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,105 :: 		TFT_write_reg(R128, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 128   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,106 :: 		TFT_write_reg(R129, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 129   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,107 :: 		TFT_write_reg(R130, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 130   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,108 :: 		TFT_write_reg(R131, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 131   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,109 :: 		TFT_write_reg(R132, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 132   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,110 :: 		TFT_write_reg(R133, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 133   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,111 :: 		TFT_write_reg(R144, ((0 << 7) | (16 << 0)));
	R1 <2> <- 16   (midx: 0)
	R0 <2> <- 144   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,112 :: 		TFT_write_reg(R146, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 146   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,113 :: 		TFT_write_reg(R147, 0x0001);
	R1 <2> <- 1   (midx: 0)
	R0 <2> <- 147   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,114 :: 		TFT_write_reg(R149, 0x0110);
	R1 <2> <- 272   (midx: 0)
	R0 <2> <- 149   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,115 :: 		TFT_write_reg(R151, (0 << 8));
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 151   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,116 :: 		TFT_write_reg(R152, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 152   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,117 :: 		TFT_write_reg(R7, 0x0173);
	R1 <2> <- 371   (midx: 0)
	R0 <2> <- 7   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,118 :: 		delay_ms(100);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ili932x.c,119 :: 		}
12:   (midx: 0)
//ili932x.c,121 :: 		TFT_fill(Black);
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_fill   (midx: 0)
//ili932x.c,122 :: 		TFT_backlight_state(ON);
	R0 <1> <- 1   (midx: 0)
	CALL _TFT_backlight_state   (midx: 0)
  end
   (midx: 0)
_TFT_BGR2RGB:
  begin   (midx: 0)
//ili932x.c,230 :: 		unsigned int TFT_BGR2RGB(unsigned int colour)
_TFT_BGR2RGB:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
//ili932x.c,232 :: 		unsigned int r = 0x0000;
   (midx: 0)
//ili932x.c,233 :: 		unsigned int g = 0x0000;
   (midx: 0)
//ili932x.c,234 :: 		unsigned int b = 0x0000;
   (midx: 0)
//ili932x.c,235 :: 		unsigned int rgb_colour = 0x0000;
   (midx: 0)
//ili932x.c,237 :: 		b = ((colour >> 0)  & 0x1F);
	R2 <2> <-  R0 & 31   (midx: 1)
//ili932x.c,238 :: 		g = ((colour >> 5)  & 0x3F);
	R1 <2> <-  R0 shr 5   (midx: 1)
	R4 <2> <-  R1 & 63   (midx: 1)
//ili932x.c,239 :: 		r = ((colour >> 11) & 0x1F);
   (midx: 0)
	R1 <2> <-  R0 shr 11   (midx: 1)
	R3 <2> <-  R1 & 31   (midx: 1)
//ili932x.c,241 :: 		rgb_colour = ((b << 11) + (g << 5) + (r << 0));
	R2 <2> <-  R2 shl 11   (midx: 1)
	R1 <2> <-  R4 shl 5   (midx: 1)
	R1 <2> <-  R2 + R1   (midx: 1)
	R1 <2> <-  R1 + R3   (midx: 1)
//ili932x.c,243 :: 		return rgb_colour;
	R0 <2> <- R1   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_RGB565_converter:
  begin   (midx: 0)
//ili932x.c,247 :: 		unsigned int RGB565_converter(unsigned char r, unsigned char g, unsigned char b)
_RGB565_converter:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,249 :: 		return (((((unsigned int)r) >> 3) << 11) | ((((unsigned int)g) >> 2) << 5) | (((unsigned int)b) >> 3));
   (midx: 0)
	R3 <2> <- R0   (midx: 0)
	R3 <2> <-  R3 shr 3   (midx: 1)
	R4 <2> <-  R3 shl 11   (midx: 1)
   (midx: 0)
	R3 <2> <- R1   (midx: 0)
	R3 <2> <-  R3 shr 2   (midx: 1)
	R3 <2> <-  R3 shl 5   (midx: 1)
	R4 <2> <-  R4 | R3   (midx: 1)
   (midx: 0)
	R3 <2> <- R2   (midx: 0)
	R3 <2> <-  R3 shr 3   (midx: 1)
	R3 <2> <-  R4 | R3   (midx: 1)
	R0 <2> <- R3   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_TFT_set_display_window:
  begin   (midx: 0)
//ili932x.c,283 :: 		void TFT_set_display_window(unsigned int x_pos, unsigned int y_pos, unsigned int w, unsigned int h)
_TFT_set_display_window:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <2> <- R0   (midx: 0)
	R7 <2> <- R1   (midx: 0)
	R8 <2> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R9 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,285 :: 		TFT_write_reg(R80, x_pos);
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- 80   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,286 :: 		TFT_write_reg(R81, (w + x_pos));
   (midx: 0)
	R4 <2> <-  R8 + R6   (midx: 1)
	R1 <2> <- R4   (midx: 0)
	R0 <2> <- 81   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,287 :: 		TFT_write_reg(R82, y_pos);
	R1 <2> <- R7   (midx: 0)
	R0 <2> <- 82   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,288 :: 		TFT_write_reg(R83, (h + y_pos));
   (midx: 0)
	R4 <2> <-  R9 + R7   (midx: 1)
	R1 <2> <- R4   (midx: 0)
	R0 <2> <- 83   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,289 :: 		TFT_set_cursor(x_pos, y_pos);
   (midx: 0)
	R1 <2> <- R7   (midx: 0)
   (midx: 0)
	R0 <2> <- R6   (midx: 0)
	CALL _TFT_set_cursor   (midx: 0)
  end
   (midx: 0)
_Get_Pixel:
  begin   (midx: 0)
//ili932x.c,293 :: 		unsigned int Get_Pixel(unsigned int x_pos, unsigned int y_pos)
_Get_Pixel:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,295 :: 		unsigned int value = 0x0000;
   (midx: 0)
//ili932x.c,297 :: 		TFT_set_cursor(x_pos, y_pos);
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_set_cursor   (midx: 0)
//ili932x.c,298 :: 		TFT_CS_pin = 0;
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//ili932x.c,299 :: 		TFT_write_RAM_prepare();
	CALL _TFT_write_RAM_prepare   (midx: 0)
//ili932x.c,300 :: 		value = TFT_read(0x0000, DAT);
	R1 <1> <- 1   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_read   (midx: 0)
//ili932x.c,301 :: 		value = TFT_read(0x0000, DAT);
	R1 <1> <- 1   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_read   (midx: 0)
//ili932x.c,302 :: 		TFT_CS_pin = 1;
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(GPIOC_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//ili932x.c,303 :: 		value = TFT_BGR2RGB(value);
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_BGR2RGB   (midx: 0)
//ili932x.c,305 :: 		return value;
	R0 <2> <- R0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_Draw_Pixel:
  begin   (midx: 0)
//ili932x.c,309 :: 		void Draw_Pixel(unsigned int x_pos, unsigned int y_pos, unsigned int colour)
_Draw_Pixel:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R7 <2> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,311 :: 		TFT_set_cursor(x_pos, y_pos);
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_set_cursor   (midx: 0)
//ili932x.c,312 :: 		TFT_write_RAM_prepare();
	CALL _TFT_write_RAM_prepare   (midx: 0)
//ili932x.c,313 :: 		TFT_write(colour, DAT);
	R1 <1> <- 1   (midx: 0)
   (midx: 0)
	R0 <2> <- R7   (midx: 0)
	CALL _TFT_write   (midx: 0)
  end
   (midx: 0)
_Draw_Line:
  begin   (midx: 0)
//ili932x.c,317 :: 		void Draw_Line(signed int x1, signed int y1, signed int x2, signed int y2, unsigned int colour)
_Draw_Line:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R8 <2> <- R0   (midx: 0)
	R9 <2> <- R1   (midx: 0)
	FARG_Draw_Line_x2 <2> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_Draw_Line_y2 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R10 <2> <- FARG_Draw_Line_colour   (midx: 0)
//ili932x.c,319 :: 		signed int dx = 0x0000;
   (midx: 0)
//ili932x.c,320 :: 		signed int dy = 0x0000;
   (midx: 0)
//ili932x.c,321 :: 		signed int stepx = 0x0000;
   (midx: 0)
//ili932x.c,322 :: 		signed int stepy = 0x0000;
   (midx: 0)
//ili932x.c,323 :: 		signed int fraction = 0x0000;
   (midx: 0)
//ili932x.c,325 :: 		dy = (y2 - y1);
	R4 <2> <- FARG_Draw_Line_y2   (midx: 0)
	R5 <2> <-  R4 - R9   (midx: 5)
   (midx: 0)
	R2 <2> <- R5   (midx: 0)
//ili932x.c,326 :: 		dx = (x2 - x1);
	R4 <2> <- FARG_Draw_Line_x2   (midx: 0)
	R12 <2> <-  R4 - R8   (midx: 5)
   (midx: 0)
	R12 <2> <- R12   (midx: 0)
//ili932x.c,328 :: 		if (dy < 0)
	if ( R5 >= 0) then goto 22   (midx: 5)
//ili932x.c,330 :: 		dy = -dy;
   (midx: 0)
	R0 <2> <-  0 - R2   (midx: 5)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
//ili932x.c,331 :: 		stepy = -1;
   (midx: 0)
	R11 <2> <- -1   (midx: 0)
//ili932x.c,332 :: 		}
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R11 <2> <- R11   (midx: 0)
	goto	23   (midx: 0)
22:   (midx: 0)
//ili932x.c,335 :: 		stepy = 1;
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R11 <2> <- 1   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	R11 <2> <- R11   (midx: 0)
//ili932x.c,336 :: 		}
23:   (midx: 0)
//ili932x.c,338 :: 		if (dx < 0)
   (midx: 0)
   (midx: 0)
	if ( R12 >= 0) then goto 24   (midx: 5)
//ili932x.c,340 :: 		dx = -dx;
   (midx: 0)
	R1 <2> <-  0 - R12   (midx: 5)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
//ili932x.c,341 :: 		stepx = -1;
	R4 <2> <- -1   (midx: 0)
	Draw_Line_stepx_L0 <2> <- R4   (midx: 0)
//ili932x.c,342 :: 		}
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	goto	25   (midx: 0)
24:   (midx: 0)
//ili932x.c,345 :: 		stepx = 1;
   (midx: 0)
	R4 <2> <- 1   (midx: 0)
   (midx: 0)
	Draw_Line_stepx_L0 <2> <- R4   (midx: 0)
	R1 <2> <- R12   (midx: 0)
//ili932x.c,346 :: 		}
25:   (midx: 0)
//ili932x.c,348 :: 		dx <<= 0x01;
   (midx: 0)
   (midx: 0)
	R12 <2> <-  R1 shl 1   (midx: 5)
   (midx: 0)
	R12 <2> <- R12   (midx: 0)
//ili932x.c,349 :: 		dy <<= 0x01;
	R0 <2> <-  R0 shl 1   (midx: 5)
	R0 <2> <- R0   (midx: 0)
//ili932x.c,351 :: 		Draw_Pixel(x1, y1, colour);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R2 <2> <- R10   (midx: 0)
	R1 <2> <- R9   (midx: 0)
	R0 <2> <- R8   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//ili932x.c,353 :: 		if (dx > dy)
	if ( R12 <= R0) then goto 26   (midx: 5)
//ili932x.c,355 :: 		fraction = (dy - (dx >> 1));
	R4 <2> <-  R12 shr 1   (midx: 5)
	R2 <2> <-  R0 - R4   (midx: 5)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <2> <- R2   (midx: 0)
	R6 <2> <- R8   (midx: 0)
	R3 <2> <- R9   (midx: 0)
	R10 <2> <- R10   (midx: 0)
	R11 <2> <- R11   (midx: 0)
	R12 <2> <- R12   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R1 <2> <- R2   (midx: 0)
//ili932x.c,356 :: 		while (x1 != x2)
27:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <2> <- FARG_Draw_Line_x2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R6 = R4) then goto 28   (midx: 5)
//ili932x.c,358 :: 		if (fraction >= 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R1 < 0) then goto 165   (midx: 5)
//ili932x.c,360 :: 		y1 += stepy;
   (midx: 0)
	R9 <2> <-  R3 + R11   (midx: 5)
   (midx: 0)
	R9 <2> <- R9   (midx: 0)
//ili932x.c,361 :: 		fraction -= dx;
   (midx: 0)
	R2 <2> <-  R1 - R12   (midx: 5)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <2> <- R2   (midx: 0)
	R9 <2> <- R9   (midx: 0)
	R1 <2> <- R2   (midx: 0)
//ili932x.c,362 :: 		}
	goto	29   (midx: 0)
165:   (midx: 0)
//ili932x.c,358 :: 		if (fraction >= 0)
	R1 <2> <- R1   (midx: 0)
	R9 <2> <- R3   (midx: 0)
//ili932x.c,362 :: 		}
29:   (midx: 0)
//ili932x.c,363 :: 		x1 += stepx;
   (midx: 0)
   (midx: 0)
	R4 <2> <- Draw_Line_stepx_L0   (midx: 0)
   (midx: 0)
	R5 <2> <-  R6 + R4   (midx: 5)
   (midx: 0)
	R8 <2> <- R5   (midx: 0)
//ili932x.c,364 :: 		fraction += dy;
   (midx: 0)
	R4 <2> <-  R1 + R0   (midx: 5)
   (midx: 0)
	R2 <2> <- R4   (midx: 0)
//ili932x.c,366 :: 		Draw_Pixel(x1, y1, colour);
	R2 <2> <- PUSH(R2)   (midx: 255)
	R0 <2> <- PUSH(R0)   (midx: 255)
	R2 <2> <- R10   (midx: 0)
	R1 <2> <- R9   (midx: 0)
	R0 <2> <- R5   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
	R0 <2> <- POP   (midx: 255)
	R2 <2> <- POP   (midx: 255)
//ili932x.c,367 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <2> <- R8   (midx: 0)
	R3 <2> <- R9   (midx: 0)
	R10 <2> <- R10   (midx: 0)
	R11 <2> <- R11   (midx: 0)
	R12 <2> <- R12   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R1 <2> <- R2   (midx: 0)
	goto	27   (midx: 0)
28:   (midx: 0)
//ili932x.c,368 :: 		}
	goto	30   (midx: 0)
26:   (midx: 0)
//ili932x.c,371 :: 		fraction = (dx - (dy >> 1));
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <2> <-  R0 shr 1   (midx: 5)
	R1 <2> <-  R12 - R4   (midx: 5)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R2 <2> <- R10   (midx: 0)
	R10 <2> <- R8   (midx: 0)
	R3 <2> <- R9   (midx: 0)
	R11 <2> <- R11   (midx: 0)
	R12 <2> <- R12   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R1 <2> <- R1   (midx: 0)
//ili932x.c,373 :: 		while (y1 != y2)
31:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <2> <- FARG_Draw_Line_y2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R3 = R4) then goto 32   (midx: 5)
//ili932x.c,375 :: 		if (fraction >= 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R1 < 0) then goto 166   (midx: 5)
//ili932x.c,377 :: 		x1 += stepx;
	R4 <2> <- Draw_Line_stepx_L0   (midx: 0)
   (midx: 0)
	R4 <2> <-  R10 + R4   (midx: 5)
   (midx: 0)
	R5 <2> <- R4   (midx: 0)
//ili932x.c,378 :: 		fraction -= dy;
   (midx: 0)
	R4 <2> <-  R1 - R0   (midx: 5)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <2> <- R4   (midx: 0)
	R8 <2> <- R5   (midx: 0)
	R1 <2> <- R6   (midx: 0)
//ili932x.c,379 :: 		}
	goto	33   (midx: 0)
166:   (midx: 0)
//ili932x.c,375 :: 		if (fraction >= 0)
	R1 <2> <- R1   (midx: 0)
	R8 <2> <- R10   (midx: 0)
//ili932x.c,379 :: 		}
33:   (midx: 0)
//ili932x.c,380 :: 		y1 += stepy;
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R5 <2> <-  R3 + R11   (midx: 5)
   (midx: 0)
	R9 <2> <- R5   (midx: 0)
//ili932x.c,381 :: 		fraction += dx;
   (midx: 0)
	R4 <2> <-  R1 + R12   (midx: 5)
   (midx: 0)
	R4 <2> <- R4   (midx: 0)
//ili932x.c,382 :: 		Draw_Pixel(x1, y1, colour);
	R4 <2> <- PUSH(R4)   (midx: 255)
	R2 <2> <- PUSH(R2)   (midx: 255)
	R0 <2> <- PUSH(R0)   (midx: 255)
	R2 <2> <- R2   (midx: 0)
	R1 <2> <- R5   (midx: 0)
	R0 <2> <- R8   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
	R0 <2> <- POP   (midx: 255)
	R2 <2> <- POP   (midx: 255)
	R4 <2> <- POP   (midx: 255)
//ili932x.c,383 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R10 <2> <- R8   (midx: 0)
	R3 <2> <- R9   (midx: 0)
	R2 <2> <- R2   (midx: 0)
	R11 <2> <- R11   (midx: 0)
	R12 <2> <- R12   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R1 <2> <- R4   (midx: 0)
	goto	31   (midx: 0)
32:   (midx: 0)
//ili932x.c,384 :: 		}
30:   (midx: 0)
  end
   (midx: 0)
_Draw_Rectangle:
  begin   (midx: 0)
//ili932x.c,388 :: 		void Draw_Rectangle(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char fill, unsigned char type, unsigned int colour, unsigned int back_colour)
_Draw_Rectangle:
  begin   (midx: 0)
   (midx: 0)
	FARG_Draw_Rectangle_x1 <2> <- R0   (midx: 0)
	FARG_Draw_Rectangle_y1 <2> <- R1   (midx: 0)
	FARG_Draw_Rectangle_x2 <2> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_Draw_Rectangle_y2 <2> <- R3   (midx: 0)
   (midx: 0)
	R0 <1> <- FARG_Draw_Rectangle_fill   (midx: 0)
	R4 <1> <- FARG_Draw_Rectangle_type   (midx: 0)
	FARG_Draw_Rectangle_type <1> <- R4   (midx: 0)
	R4 <2> <- FARG_Draw_Rectangle_colour   (midx: 0)
	FARG_Draw_Rectangle_colour <2> <- R4   (midx: 0)
	R4 <2> <- FARG_Draw_Rectangle_back_colour   (midx: 0)
	FARG_Draw_Rectangle_back_colour <2> <- R4   (midx: 0)
//ili932x.c,390 :: 		signed int i = 0x0000;
   (midx: 0)
//ili932x.c,391 :: 		signed int xmin = 0x0000;
   (midx: 0)
//ili932x.c,392 :: 		signed int xmax = 0x0000;
   (midx: 0)
//ili932x.c,393 :: 		signed int ymin = 0x0000;
   (midx: 0)
//ili932x.c,394 :: 		signed int ymax = 0x0000;
   (midx: 0)
//ili932x.c,396 :: 		if(fill != NO)
   (midx: 0)
	if ( R0 = 0) then goto 34   (midx: 0)
//ili932x.c,398 :: 		if(x1 < x2)
	R5 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	R4 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
	if ( R4 >= R5) then goto 35   (midx: 5)
//ili932x.c,400 :: 		xmin = x1;
   (midx: 0)
	R9 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
//ili932x.c,401 :: 		xmax = x2;
	R4 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	Draw_Rectangle_xmax_L0 <2> <- R4   (midx: 0)
//ili932x.c,402 :: 		}
   (midx: 0)
	R9 <2> <- R9   (midx: 0)
	goto	36   (midx: 0)
35:   (midx: 0)
//ili932x.c,405 :: 		xmin = x2;
   (midx: 0)
	R9 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
//ili932x.c,406 :: 		xmax = x1;
	R4 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
   (midx: 0)
	Draw_Rectangle_xmax_L0 <2> <- R4   (midx: 0)
	R9 <2> <- R9   (midx: 0)
//ili932x.c,407 :: 		}
36:   (midx: 0)
//ili932x.c,409 :: 		if(y1 < y2)
   (midx: 0)
	R5 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	R4 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	if ( R4 >= R5) then goto 37   (midx: 5)
//ili932x.c,411 :: 		ymin = y1;
	R4 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	Draw_Rectangle_ymin_L0 <2> <- R4   (midx: 0)
//ili932x.c,412 :: 		ymax = y2;
	R4 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	Draw_Rectangle_ymax_L0 <2> <- R4   (midx: 0)
//ili932x.c,413 :: 		}
	goto	38   (midx: 0)
37:   (midx: 0)
//ili932x.c,416 :: 		ymin = y2;
	R4 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	Draw_Rectangle_ymin_L0 <2> <- R4   (midx: 0)
//ili932x.c,417 :: 		ymax = y1;
	R4 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	Draw_Rectangle_ymax_L0 <2> <- R4   (midx: 0)
//ili932x.c,418 :: 		}
38:   (midx: 0)
//ili932x.c,420 :: 		for(; xmin <= xmax; ++xmin)
   (midx: 0)
	R7 <2> <- R9   (midx: 0)
39:   (midx: 0)
   (midx: 0)
	R4 <2> <- Draw_Rectangle_xmax_L0   (midx: 0)
	if ( R7 > R4) then goto 40   (midx: 5)
//ili932x.c,422 :: 		for(i = ymin; i <= ymax; ++i)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R9 <2> <- Draw_Rectangle_ymin_L0   (midx: 0)
	R8 <2> <- R9   (midx: 0)
	R9 <2> <- R7   (midx: 0)
42:   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <2> <- Draw_Rectangle_ymax_L0   (midx: 0)
	if ( R8 > R4) then goto 43   (midx: 5)
//ili932x.c,424 :: 		Draw_Pixel(xmin, i, colour);
	R2 <2> <- FARG_Draw_Rectangle_colour   (midx: 0)
	R1 <2> <- R8   (midx: 0)
	R0 <2> <- R9   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,422 :: 		for(i = ymin; i <= ymax; ++i)
   (midx: 0)
	R4 <2> <-  R8 + 1   (midx: 1)
   (midx: 0)
	R0 <2> <- R4   (midx: 0)
//ili932x.c,425 :: 		}
   (midx: 0)
	R9 <2> <- R9   (midx: 0)
	R8 <2> <- R0   (midx: 0)
	goto	42   (midx: 0)
43:   (midx: 0)
//ili932x.c,420 :: 		for(; xmin <= xmax; ++xmin)
	R9 <2> <-  R9 + 1   (midx: 1)
	R9 <2> <- R9   (midx: 0)
//ili932x.c,426 :: 		}
   (midx: 0)
	R7 <2> <- R9   (midx: 0)
	goto	39   (midx: 0)
40:   (midx: 0)
//ili932x.c,427 :: 		}
	goto	45   (midx: 0)
34:   (midx: 0)
//ili932x.c,431 :: 		Draw_Line(x1, y1, x2, y1, colour);
	R4 <2> <- FARG_Draw_Rectangle_colour   (midx: 0)
	R3 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	R2 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,432 :: 		Draw_Line(x1, y2, x2, y2, colour);
	R4 <2> <- FARG_Draw_Rectangle_colour   (midx: 0)
	R3 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	R2 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,433 :: 		Draw_Line(x1, y1, x1, y2, colour);
	R4 <2> <- FARG_Draw_Rectangle_colour   (midx: 0)
	R3 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	R2 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,434 :: 		Draw_Line(x2, y1, x2, y2, colour);
	R4 <2> <- FARG_Draw_Rectangle_colour   (midx: 0)
	R3 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	R2 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,435 :: 		}
45:   (midx: 0)
//ili932x.c,437 :: 		if(type != SQUARE)
	R4 <1> <- FARG_Draw_Rectangle_type   (midx: 0)
	if ( R4 = 0) then goto 46   (midx: 0)
//ili932x.c,439 :: 		Draw_Pixel(x1, y1, back_colour);
	R2 <2> <- FARG_Draw_Rectangle_back_colour   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,440 :: 		Draw_Pixel(x1, y2, back_colour);
	R2 <2> <- FARG_Draw_Rectangle_back_colour   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x1   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,441 :: 		Draw_Pixel(x2, y1, back_colour);
	R2 <2> <- FARG_Draw_Rectangle_back_colour   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y1   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,442 :: 		Draw_Pixel(x2, y2, back_colour);
	R2 <2> <- FARG_Draw_Rectangle_back_colour   (midx: 0)
	R1 <2> <- FARG_Draw_Rectangle_y2   (midx: 0)
	R0 <2> <- FARG_Draw_Rectangle_x2   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,443 :: 		}
46:   (midx: 0)
  end
   (midx: 0)
_Draw_Circle:
  begin   (midx: 0)
//ili932x.c,447 :: 		void Draw_Circle(signed int xc, signed int yc, signed int radius, unsigned char fill, unsigned int colour)
_Draw_Circle:
  begin   (midx: 0)
   (midx: 0)
	FARG_Draw_Circle_xc <2> <- R0   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	FARG_Draw_Circle_yc <2> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_Draw_Circle_fill <1> <- R3   (midx: 0)
   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	FARG_Draw_Circle_colour <2> <- R4   (midx: 0)
//ili932x.c,449 :: 		signed int a = 0x0000;
   (midx: 0)
	R4 <4> <- 0   (midx: 0)
	Draw_Circle_a_L0 <-initialize(0)   (midx: 0)
//ili932x.c,450 :: 		signed int b = 0x0000;
   (midx: 0)
//ili932x.c,451 :: 		signed int p = 0x0000;
   (midx: 0)
//ili932x.c,453 :: 		b = radius;
	Draw_Circle_b_L0 <2> <- R0   (midx: 0)
//ili932x.c,454 :: 		p = (1 - b);
   (midx: 0)
	R4 <2> <-  1 - R0   (midx: 5)
	Draw_Circle_p_L0 <2> <- R4   (midx: 0)
//ili932x.c,456 :: 		do
47:   (midx: 0)
//ili932x.c,458 :: 		if(fill != NO)
	R4 <1> <- FARG_Draw_Circle_fill   (midx: 0)
	if ( R4 = 0) then goto 50   (midx: 0)
//ili932x.c,460 :: 		Draw_Line((xc - a), (yc + b), (xc + a), (yc + b), colour);
	R8 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R7 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R3 <2> <- R7   (midx: 0)
	R2 <2> <- R6   (midx: 0)
	R1 <2> <- R7   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R8)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,461 :: 		Draw_Line((xc - a), (yc - b), (xc + a), (yc - b), colour);
	R8 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R7 <2> <-  R4 - R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R3 <2> <- R7   (midx: 0)
	R2 <2> <- R6   (midx: 0)
	R1 <2> <- R7   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R8)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,462 :: 		Draw_Line((xc - b), (yc + a), (xc + b), (yc + a), colour);
	R8 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R7 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R3 <2> <- R7   (midx: 0)
	R2 <2> <- R6   (midx: 0)
	R1 <2> <- R7   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R8)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,463 :: 		Draw_Line((xc - b), (yc - a), (xc + b), (yc - a), colour);
	R8 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R7 <2> <-  R4 - R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R3 <2> <- R7   (midx: 0)
	R2 <2> <- R6   (midx: 0)
	R1 <2> <- R7   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	FARG_Draw_Line_colour <2> <- PUSH(R8)   (midx: 0)
	CALL _Draw_Line   (midx: 0)
//ili932x.c,464 :: 		}
	goto	51   (midx: 0)
50:   (midx: 0)
//ili932x.c,467 :: 		Draw_Pixel((xc + a), (yc + b), colour);
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 + R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,468 :: 		Draw_Pixel((xc + b), (yc + a), colour);
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 + R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,469 :: 		Draw_Pixel((xc - a), (yc + b), colour);
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,470 :: 		Draw_Pixel((xc - b), (yc + a), colour);
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 + R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,471 :: 		Draw_Pixel((xc + b), (yc - a), colour);
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 - R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 + R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,472 :: 		Draw_Pixel((xc + a), (yc - b), colour);
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 - R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 + R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,473 :: 		Draw_Pixel((xc - a), (yc - b), colour);
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 - R5   (midx: 5)
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,474 :: 		Draw_Pixel((xc - b), (yc - a), colour);
	R5 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_yc   (midx: 0)
	R6 <2> <-  R4 - R5   (midx: 5)
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- FARG_Draw_Circle_xc   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R2 <2> <- FARG_Draw_Circle_colour   (midx: 0)
	R1 <2> <- R6   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//ili932x.c,475 :: 		}
51:   (midx: 0)
//ili932x.c,477 :: 		if(p < 0)
	R4 <2> <- Draw_Circle_p_L0   (midx: 0)
	if ( R4 >= 0) then goto 52   (midx: 5)
//ili932x.c,479 :: 		p += (0x03 + (0x02 * a++));
	R4 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <-  R4 shl 1   (midx: 5)
	R5 <2> <-  3 + R4   (midx: 5)
	R4 <2> <- Draw_Circle_p_L0   (midx: 0)
	R4 <2> <-  R4 + R5   (midx: 5)
	Draw_Circle_p_L0 <2> <- R4   (midx: 0)
	R4 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <-  R4 + 1   (midx: 1)
	Draw_Circle_a_L0 <2> <- R4   (midx: 0)
//ili932x.c,480 :: 		}
	goto	53   (midx: 0)
52:   (midx: 0)
//ili932x.c,483 :: 		p += (0x05 + (0x02 * ((a++) - (b--))));
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 5)
	R4 <2> <-  R4 shl 1   (midx: 5)
	R5 <2> <-  5 + R4   (midx: 5)
	R4 <2> <- Draw_Circle_p_L0   (midx: 0)
	R4 <2> <-  R4 + R5   (midx: 5)
	Draw_Circle_p_L0 <2> <- R4   (midx: 0)
	R4 <2> <- Draw_Circle_a_L0   (midx: 0)
	R4 <2> <-  R4 + 1   (midx: 1)
	Draw_Circle_a_L0 <2> <- R4   (midx: 0)
	R4 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <-  R4 - 1   (midx: 1)
	Draw_Circle_b_L0 <2> <- R4   (midx: 0)
//ili932x.c,484 :: 		}
53:   (midx: 0)
//ili932x.c,485 :: 		}while(a <= b);
	R5 <2> <- Draw_Circle_b_L0   (midx: 0)
	R4 <2> <- Draw_Circle_a_L0   (midx: 0)
	if ( R4 <= R5) then goto 47   (midx: 5)
  end
   (midx: 0)
_Draw_Font_Pixel:
  begin   (midx: 0)
//ili932x.c,489 :: 		void Draw_Font_Pixel(unsigned int x_pos, unsigned int y_pos, unsigned int colour, unsigned char pixel_size)
_Draw_Font_Pixel:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R7 <2> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R8 <1> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//ili932x.c,491 :: 		unsigned int i = 0x0000;
   (midx: 0)
//ili932x.c,493 :: 		TFT_set_cursor(x_pos, y_pos);
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_set_cursor   (midx: 0)
//ili932x.c,494 :: 		TFT_write_RAM_prepare();
	CALL _TFT_write_RAM_prepare   (midx: 0)
//ili932x.c,496 :: 		for(i = 0x0000; i < (pixel_size * pixel_size); i++)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	R6 <2> <- R7   (midx: 0)
	R7 <2> <- R0   (midx: 0)
	R5 <1> <- R8   (midx: 0)
54:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <2> <-  R5 * R5   (midx: 0)
   (midx: 0)
	if ( R7 >= R4) then goto 55   (midx: 1)
//ili932x.c,498 :: 		TFT_write(colour, DAT);
   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <2> <- R6   (midx: 0)
	CALL _TFT_write   (midx: 0)
//ili932x.c,496 :: 		for(i = 0x0000; i < (pixel_size * pixel_size); i++)
	R7 <2> <-  R7 + 1   (midx: 1)
	R7 <2> <- R7   (midx: 0)
//ili932x.c,499 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <2> <- R6   (midx: 0)
	R5 <1> <- R5   (midx: 0)
	R7 <2> <- R7   (midx: 0)
	goto	54   (midx: 0)
55:   (midx: 0)
  end
   (midx: 0)
_print_char:
  begin   (midx: 0)
//ili932x.c,503 :: 		void print_char(unsigned int x_pos, unsigned int y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, char ch)
_print_char:
  begin   (midx: 0)
   (midx: 0)
	FARG_print_char_x_pos <2> <- R0   (midx: 0)
	FARG_print_char_y_pos <2> <- R1   (midx: 0)
	R9 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_print_char_colour <2> <- R3   (midx: 0)
   (midx: 0)
	R4 <2> <- FARG_print_char_back_colour   (midx: 0)
	FARG_print_char_back_colour <2> <- R4   (midx: 0)
	R4 <1> <- FARG_print_char_ch   (midx: 0)
	FARG_print_char_ch <1> <- R4   (midx: 0)
//ili932x.c,505 :: 		unsigned char i = 0x00;
   (midx: 0)
//ili932x.c,506 :: 		unsigned char j = 0x00;
   (midx: 0)
//ili932x.c,508 :: 		unsigned int value = 0x0000;
   (midx: 0)
//ili932x.c,510 :: 		if(font_size <= 0)
   (midx: 0)
	if ( R9 > 0) then goto 167   (midx: 0)
//ili932x.c,512 :: 		font_size = 1;
   (midx: 0)
   (midx: 0)
	R5 <1> <- 1   (midx: 0)
	R9 <1> <- R5   (midx: 0)
//ili932x.c,513 :: 		}
	goto	57   (midx: 0)
167:   (midx: 0)
//ili932x.c,510 :: 		if(font_size <= 0)
	R9 <1> <- R9   (midx: 0)
//ili932x.c,513 :: 		}
57:   (midx: 0)
//ili932x.c,515 :: 		if(x_pos < font_size)
   (midx: 0)
	R4 <2> <- FARG_print_char_x_pos   (midx: 0)
	if ( R4 >= R9) then goto 58   (midx: 1)
//ili932x.c,517 :: 		x_pos = font_size;
	FARG_print_char_x_pos <2> <- R9   (midx: 0)
//ili932x.c,518 :: 		}
58:   (midx: 0)
//ili932x.c,520 :: 		for(i = 0x00; i < 0x05; i++)
	R4 <1> <- 0   (midx: 0)
   (midx: 0)
	print_char_i_L0 <1> <- R4   (midx: 0)
	R0 <1> <- R9   (midx: 0)
59:   (midx: 0)
   (midx: 0)
	R4 <1> <- print_char_i_L0   (midx: 0)
	if ( R4 >= 5) then goto 60   (midx: 0)
//ili932x.c,522 :: 		for(j = 0x00; j < 0x08; j++)
	R4 <1> <- 0   (midx: 0)
   (midx: 0)
	print_char_j_L0 <1> <- R4   (midx: 0)
	R9 <1> <- R0   (midx: 0)
62:   (midx: 0)
   (midx: 0)
	R4 <1> <- print_char_j_L0   (midx: 0)
	if ( R4 >= 8) then goto 63   (midx: 0)
//ili932x.c,525 :: 		value = ((font[((unsigned char)ch) - 0x20][i]));
	R4 <2> <- FARG_print_char_ch   (midx: 0)
	R5 <2> <-  R4 - 32   (midx: 0)
	R4 <4> <- 5   (midx: 0)
	R5 <4> <-  R4 * R5   (midx: 2)
	R4 <4> <- #tftdisp_font   (midx: 0)
	R5 <4> <-  R4 + R5   (midx: 2)
	R4 <4> <- print_char_i_L0   (midx: 0)
	R4 <4> <-  R5 + R4   (midx: 2)
	R4 <1> <- *R4   (midx: 0)
   (midx: 0)
	R0 <2> <- R4   (midx: 0)
//ili932x.c,527 :: 		if(((value >> j) & 0x01) != 0x00)
	R4 <2> <- print_char_j_L0   (midx: 0)
   (midx: 0)
	R4 <2> <-  R0 shr R4   (midx: 1)
	R4 <2> <-  R4 & 1   (midx: 1)
	if ( R4 = 0) then goto 65   (midx: 1)
//ili932x.c,529 :: 		Draw_Font_Pixel(x_pos, y_pos, colour, font_size);
	R3 <1> <- R9   (midx: 0)
	R2 <2> <- FARG_print_char_colour   (midx: 0)
	R1 <2> <- FARG_print_char_y_pos   (midx: 0)
	R0 <2> <- FARG_print_char_x_pos   (midx: 0)
	CALL _Draw_Font_Pixel   (midx: 0)
//ili932x.c,530 :: 		}
	goto	66   (midx: 0)
65:   (midx: 0)
//ili932x.c,533 :: 		Draw_Font_Pixel(x_pos, y_pos, back_colour, font_size);
	R3 <1> <- R9   (midx: 0)
	R2 <2> <- FARG_print_char_back_colour   (midx: 0)
	R1 <2> <- FARG_print_char_y_pos   (midx: 0)
	R0 <2> <- FARG_print_char_x_pos   (midx: 0)
	CALL _Draw_Font_Pixel   (midx: 0)
//ili932x.c,534 :: 		}
66:   (midx: 0)
//ili932x.c,536 :: 		y_pos += font_size;
	R4 <2> <- FARG_print_char_y_pos   (midx: 0)
	R4 <2> <-  R4 + R9   (midx: 1)
	FARG_print_char_y_pos <2> <- R4   (midx: 0)
//ili932x.c,522 :: 		for(j = 0x00; j < 0x08; j++)
	R4 <1> <- print_char_j_L0   (midx: 0)
	R4 <1> <-  R4 + 1   (midx: 0)
	print_char_j_L0 <1> <- R4   (midx: 0)
//ili932x.c,537 :: 		}
	R9 <1> <- R9   (midx: 0)
	goto	62   (midx: 0)
63:   (midx: 0)
//ili932x.c,538 :: 		y_pos -= (font_size << 0x03);
	R5 <2> <-  R9 shl 3   (midx: 1)
	R4 <2> <- FARG_print_char_y_pos   (midx: 0)
	R4 <2> <-  R4 - R5   (midx: 1)
	FARG_print_char_y_pos <2> <- R4   (midx: 0)
//ili932x.c,539 :: 		x_pos++;
	R4 <2> <- FARG_print_char_x_pos   (midx: 0)
	R4 <2> <-  R4 + 1   (midx: 1)
	FARG_print_char_x_pos <2> <- R4   (midx: 0)
//ili932x.c,520 :: 		for(i = 0x00; i < 0x05; i++)
	R4 <1> <- print_char_i_L0   (midx: 0)
	R4 <1> <-  R4 + 1   (midx: 0)
	print_char_i_L0 <1> <- R4   (midx: 0)
//ili932x.c,540 :: 		}
   (midx: 0)
	R0 <1> <- R9   (midx: 0)
	goto	59   (midx: 0)
60:   (midx: 0)
  end
   (midx: 0)
_print_str:
  begin   (midx: 0)
//ili932x.c,544 :: 		void print_str(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, char *ch)
_print_str:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_print_str_x_pos <1> <- R0   (midx: 0)
	FARG_print_str_y_pos <1> <- R1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <2> <- FARG_print_str_back_colour   (midx: 0)
   (midx: 0)
	R0 <4> <- FARG_print_str_ch   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R12 <1> <- R2   (midx: 0)
	R11 <2> <- R3   (midx: 0)
	R10 <2> <- R4   (midx: 0)
	R0 <4> <- R0   (midx: 0)
   (midx: 0)
//ili932x.c,546 :: 		do
67:   (midx: 0)
//ili932x.c,548 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, *ch++);
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <1> <- *R0   (midx: 0)
	R5 <1> <- R4   (midx: 0)
	R4 <2> <- R10   (midx: 0)
	R0 <4> <- PUSH(R0)   (midx: 255)
	R3 <2> <- R11   (midx: 0)
	R2 <1> <- R12   (midx: 0)
	R1 <2> <- FARG_print_str_y_pos   (midx: 0)
	R0 <2> <- FARG_print_str_x_pos   (midx: 0)
	FARG_print_char_ch <1> <- PUSH(R5)   (midx: 0)
	FARG_print_char_back_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _print_char   (midx: 0)
	R0 <4> <- POP   (midx: 255)
   (midx: 0)
	R5 <4> <-  R0 + 1   (midx: 2)
   (midx: 0)
   (midx: 0)
	R2 <4> <- R5   (midx: 0)
//ili932x.c,549 :: 		x_pos += 0x06;
	R4 <2> <- FARG_print_str_x_pos   (midx: 0)
	R4 <2> <-  R4 + 6   (midx: 0)
	FARG_print_str_x_pos <1> <- R4   (midx: 0)
//ili932x.c,550 :: 		}while((*ch >= 0x20) && (*ch <= 0x7F));
	R4 <1> <- *R5   (midx: 0)
   (midx: 0)
	if ( R4 < 32) then goto 170   (midx: 0)
   (midx: 0)
	R4 <1> <- *R2   (midx: 0)
	if ( R4 > 127) then goto 169   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R12 <1> <- R12   (midx: 0)
	R11 <2> <- R11   (midx: 0)
	R10 <2> <- R10   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	goto	67   (midx: 0)
170:   (midx: 0)
169:   (midx: 0)
  end
   (midx: 0)
_print_C:
  begin   (midx: 0)
//ili932x.c,554 :: 		void print_C(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, signed int value)
_print_C:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R8 <2> <- FARG_print_C_back_colour   (midx: 0)
   (midx: 0)
	R6 <2> <- FARG_print_C_value   (midx: 0)
//ili932x.c,556 :: 		unsigned char ch[6] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20};
   (midx: 0)
	R4 <4> <- 0   (midx: 0)
	print_C_ch_L0 <-initialize(0)   (midx: 0)
//ili932x.c,558 :: 		if(value < 0x00)
	if ( R6 >= 0) then goto 72   (midx: 5)
//ili932x.c,560 :: 		ch[0] = 0x2D;
	R5 <4> <- addr(print_C_ch_L0)   (midx: 0)
	R4 <1> <- 45   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,561 :: 		value = -value;
   (midx: 0)
	R9 <2> <-  0 - R6   (midx: 5)
   (midx: 0)
	R9 <2> <- R9   (midx: 0)
//ili932x.c,562 :: 		}
   (midx: 0)
	R9 <2> <- R9   (midx: 0)
	goto	73   (midx: 0)
72:   (midx: 0)
//ili932x.c,565 :: 		ch[0] = 0x20;
   (midx: 0)
	R5 <4> <- addr(print_C_ch_L0)   (midx: 0)
	R4 <1> <- 32   (midx: 0)
   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
	R9 <2> <- R6   (midx: 0)
//ili932x.c,566 :: 		}
73:   (midx: 0)
//ili932x.c,568 :: 		if((value > 99) && (value <= 999))
   (midx: 0)
	if ( R9 <= 99) then goto 175   (midx: 5)
	R4 <4> <- 999   (midx: 0)
	if ( R9 > R4) then goto 174   (midx: 5)
173:   (midx: 0)
//ili932x.c,570 :: 		ch[1] = ((value / 100) + 0x30);
	R7 <4> <- addr(print_C_ch_L0)   (midx: 0)
	R5 <4> <-  R7 + 1   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R4 <2> <-  R9 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,571 :: 		ch[2] = (((value % 100) / 10) + 0x30);
	R6 <4> <-  R7 + 2   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 10   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,572 :: 		ch[3] = ((value % 10) + 0x30);
	R6 <4> <-  R7 + 3   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,573 :: 		}
	goto	77   (midx: 0)
//ili932x.c,568 :: 		if((value > 99) && (value <= 999))
175:   (midx: 0)
   (midx: 0)
174:   (midx: 0)
//ili932x.c,574 :: 		else if((value > 9) && (value <= 99))
	if ( R9 <= 9) then goto 177   (midx: 5)
	if ( R9 > 99) then goto 176   (midx: 5)
172:   (midx: 0)
//ili932x.c,576 :: 		ch[1] = (((value % 100) / 10) + 0x30);
	R7 <4> <- addr(print_C_ch_L0)   (midx: 0)
	R6 <4> <-  R7 + 1   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 10   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,577 :: 		ch[2] = ((value % 10) + 0x30);
	R6 <4> <-  R7 + 2   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,578 :: 		ch[3] = 0x20;
	R5 <4> <-  R7 + 3   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,579 :: 		}
	goto	81   (midx: 0)
//ili932x.c,574 :: 		else if((value > 9) && (value <= 99))
177:   (midx: 0)
   (midx: 0)
176:   (midx: 0)
//ili932x.c,580 :: 		else if((value >= 0) && (value <= 9))
	if ( R9 < 0) then goto 179   (midx: 5)
	if ( R9 > 9) then goto 178   (midx: 5)
171:   (midx: 0)
//ili932x.c,582 :: 		ch[1] = ((value % 10) + 0x30);
	R7 <4> <- addr(print_C_ch_L0)   (midx: 0)
	R6 <4> <-  R7 + 1   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,583 :: 		ch[2] = 0x20;
	R5 <4> <-  R7 + 2   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,584 :: 		ch[3] = 0x20;
	R5 <4> <-  R7 + 3   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,580 :: 		else if((value >= 0) && (value <= 9))
179:   (midx: 0)
178:   (midx: 0)
//ili932x.c,585 :: 		}
81:   (midx: 0)
77:   (midx: 0)
//ili932x.c,587 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
	R5 <4> <- addr(print_C_ch_L0)   (midx: 0)
   (midx: 0)
	R4 <2> <- R8   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R5)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _print_str   (midx: 0)
  end
   (midx: 0)
_print_I:
  begin   (midx: 0)
//ili932x.c,591 :: 		void print_I(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, signed int value)
_print_I:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R8 <2> <- FARG_print_I_back_colour   (midx: 0)
   (midx: 0)
	R6 <2> <- FARG_print_I_value   (midx: 0)
//ili932x.c,593 :: 		unsigned char ch[6] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20};
   (midx: 0)
	R4 <4> <- 0   (midx: 0)
	print_I_ch_L0 <-initialize(0)   (midx: 0)
//ili932x.c,595 :: 		if(value < 0)
	if ( R6 >= 0) then goto 85   (midx: 5)
//ili932x.c,597 :: 		ch[0] = 0x2D;
	R5 <4> <- addr(print_I_ch_L0)   (midx: 0)
	R4 <1> <- 45   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,598 :: 		value = -value;
   (midx: 0)
	R9 <2> <-  0 - R6   (midx: 5)
   (midx: 0)
	R9 <2> <- R9   (midx: 0)
//ili932x.c,599 :: 		}
   (midx: 0)
	R9 <2> <- R9   (midx: 0)
	goto	86   (midx: 0)
85:   (midx: 0)
//ili932x.c,602 :: 		ch[0] = 0x20;
   (midx: 0)
	R5 <4> <- addr(print_I_ch_L0)   (midx: 0)
	R4 <1> <- 32   (midx: 0)
   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
	R9 <2> <- R6   (midx: 0)
//ili932x.c,603 :: 		}
86:   (midx: 0)
//ili932x.c,605 :: 		if(value > 9999)
   (midx: 0)
	R4 <4> <- 9999   (midx: 0)
	if ( R9 <= R4) then goto 87   (midx: 5)
//ili932x.c,607 :: 		ch[1] = ((value / 10000) + 0x30);
	R7 <4> <- addr(print_I_ch_L0)   (midx: 0)
	R5 <4> <-  R7 + 1   (midx: 2)
	R4 <2> <- 10000   (midx: 0)
	R4 <2> <-  R9 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,608 :: 		ch[2] = (((value % 10000)/ 1000) + 0x30);
	R6 <4> <-  R7 + 2   (midx: 2)
	R4 <2> <- 10000   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 1000   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,609 :: 		ch[3] = (((value % 1000) / 100) + 0x30);
	R6 <4> <-  R7 + 3   (midx: 2)
	R4 <2> <- 1000   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 100   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,610 :: 		ch[4] = (((value % 100) / 10) + 0x30);
	R6 <4> <-  R7 + 4   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 10   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,611 :: 		ch[5] = ((value % 10) + 0x30);
	R6 <4> <-  R7 + 5   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,612 :: 		}
	goto	88   (midx: 0)
87:   (midx: 0)
//ili932x.c,614 :: 		else if((value > 999) && (value <= 9999))
   (midx: 0)
	R4 <4> <- 999   (midx: 0)
	if ( R9 <= R4) then goto 184   (midx: 5)
	R4 <4> <- 9999   (midx: 0)
	if ( R9 > R4) then goto 183   (midx: 5)
182:   (midx: 0)
//ili932x.c,616 :: 		ch[1] = (((value % 10000)/ 1000) + 0x30);
	R7 <4> <- addr(print_I_ch_L0)   (midx: 0)
	R6 <4> <-  R7 + 1   (midx: 2)
	R4 <2> <- 10000   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 1000   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,617 :: 		ch[2] = (((value % 1000) / 100) + 0x30);
	R6 <4> <-  R7 + 2   (midx: 2)
	R4 <2> <- 1000   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 100   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,618 :: 		ch[3] = (((value % 100) / 10) + 0x30);
	R6 <4> <-  R7 + 3   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 10   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,619 :: 		ch[4] = ((value % 10) + 0x30);
	R6 <4> <-  R7 + 4   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,620 :: 		ch[5] = 0x20;
	R5 <4> <-  R7 + 5   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,621 :: 		}
	goto	92   (midx: 0)
//ili932x.c,614 :: 		else if((value > 999) && (value <= 9999))
184:   (midx: 0)
   (midx: 0)
183:   (midx: 0)
//ili932x.c,622 :: 		else if((value > 99) && (value <= 999))
	if ( R9 <= 99) then goto 186   (midx: 5)
	R4 <4> <- 999   (midx: 0)
	if ( R9 > R4) then goto 185   (midx: 5)
181:   (midx: 0)
//ili932x.c,624 :: 		ch[1] = (((value % 1000) / 100) + 0x30);
	R7 <4> <- addr(print_I_ch_L0)   (midx: 0)
	R6 <4> <-  R7 + 1   (midx: 2)
	R4 <2> <- 1000   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 100   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,625 :: 		ch[2] = (((value % 100) / 10) + 0x30);
	R6 <4> <-  R7 + 2   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 10   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,626 :: 		ch[3] = ((value % 10) + 0x30);
	R6 <4> <-  R7 + 3   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,627 :: 		ch[4] = 0x20;
	R5 <4> <-  R7 + 4   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,628 :: 		ch[5] = 0x20;
	R5 <4> <-  R7 + 5   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,629 :: 		}
	goto	96   (midx: 0)
//ili932x.c,622 :: 		else if((value > 99) && (value <= 999))
186:   (midx: 0)
   (midx: 0)
185:   (midx: 0)
//ili932x.c,630 :: 		else if((value > 9) && (value <= 99))
	if ( R9 <= 9) then goto 188   (midx: 5)
	if ( R9 > 99) then goto 187   (midx: 5)
180:   (midx: 0)
//ili932x.c,632 :: 		ch[1] = (((value % 100) / 10) + 0x30);
	R7 <4> <- addr(print_I_ch_L0)   (midx: 0)
	R6 <4> <-  R7 + 1   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R5 <2> <-  R9 mod R4   (midx: 5)
	R4 <2> <- 10   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,633 :: 		ch[2] = ((value % 10) + 0x30);
	R6 <4> <-  R7 + 2   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,634 :: 		ch[3] = 0x20;
	R5 <4> <-  R7 + 3   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,635 :: 		ch[4] = 0x20;
	R5 <4> <-  R7 + 4   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,636 :: 		ch[5] = 0x20;
	R5 <4> <-  R7 + 5   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,637 :: 		}
	goto	100   (midx: 0)
//ili932x.c,630 :: 		else if((value > 9) && (value <= 99))
188:   (midx: 0)
   (midx: 0)
187:   (midx: 0)
//ili932x.c,640 :: 		ch[1] = ((value % 10) + 0x30);
	R7 <4> <- addr(print_I_ch_L0)   (midx: 0)
	R6 <4> <-  R7 + 1   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R9 mod R5   (midx: 5)
	R4 <2> <-  R4 + 48   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,641 :: 		ch[2] = 0x20;
	R5 <4> <-  R7 + 2   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,642 :: 		ch[3] = 0x20;
	R5 <4> <-  R7 + 3   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,643 :: 		ch[4] = 0x20;
	R5 <4> <-  R7 + 4   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,644 :: 		ch[5] = 0x20;
	R5 <4> <-  R7 + 5   (midx: 2)
	R4 <1> <- 32   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,645 :: 		}
100:   (midx: 0)
96:   (midx: 0)
92:   (midx: 0)
88:   (midx: 0)
//ili932x.c,647 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
	R5 <4> <- addr(print_I_ch_L0)   (midx: 0)
   (midx: 0)
	R4 <2> <- R8   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R5)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _print_str   (midx: 0)
  end
   (midx: 0)
_print_D:
  begin   (midx: 0)
//ili932x.c,651 :: 		void print_D(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, unsigned int value, unsigned char points)
_print_D:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R7 <2> <- FARG_print_D_back_colour   (midx: 0)
   (midx: 0)
	R8 <2> <- FARG_print_D_value   (midx: 0)
   (midx: 0)
	R9 <1> <- FARG_print_D_points   (midx: 0)
//ili932x.c,653 :: 		unsigned char ch[6] = {0x2E, 0x20, 0x20, 0x20, 0x20, 0x20};
   (midx: 0)
	R4 <4> <- 0   (midx: 0)
	print_D_ch_L0 <-initialize(0)   (midx: 0)
//ili932x.c,655 :: 		ch[1] = ((value / 1000) + 0x30);
	R4 <4> <- addr(print_D_ch_L0)   (midx: 0)
	R5 <4> <-  R4 + 1   (midx: 2)
	R4 <2> <- 1000   (midx: 0)
	R4 <2> <-  R8 / R4   (midx: 1)
	R4 <2> <-  R4 + 48   (midx: 1)
	[R5] <1> <- R4   (midx: 0)
//ili932x.c,657 :: 		if(points > 1)
	if ( R9 <= 1) then goto 101   (midx: 0)
//ili932x.c,659 :: 		ch[2] = (((value % 1000) / 100) + 0x30);
	R4 <4> <- addr(print_D_ch_L0)   (midx: 0)
	R6 <4> <-  R4 + 2   (midx: 2)
	R4 <2> <- 1000   (midx: 0)
	R5 <2> <-  R8 mod R4   (midx: 1)
	R4 <2> <- 100   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 1)
	R4 <2> <-  R4 + 48   (midx: 1)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,661 :: 		if(points > 2)
	if ( R9 <= 2) then goto 102   (midx: 0)
//ili932x.c,663 :: 		ch[3] = (((value % 100) / 10) + 0x30);
	R4 <4> <- addr(print_D_ch_L0)   (midx: 0)
	R6 <4> <-  R4 + 3   (midx: 2)
	R4 <2> <- 100   (midx: 0)
	R5 <2> <-  R8 mod R4   (midx: 1)
	R4 <2> <- 10   (midx: 0)
	R4 <2> <-  R5 / R4   (midx: 1)
	R4 <2> <-  R4 + 48   (midx: 1)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,665 :: 		if(points > 3)
   (midx: 0)
	if ( R9 <= 3) then goto 103   (midx: 0)
//ili932x.c,667 :: 		ch[4] = ((value % 10) + 0x30);
	R4 <4> <- addr(print_D_ch_L0)   (midx: 0)
	R6 <4> <-  R4 + 4   (midx: 2)
	R5 <2> <- 10   (midx: 0)
   (midx: 0)
	R4 <2> <-  R8 mod R5   (midx: 1)
	R4 <2> <-  R4 + 48   (midx: 1)
	[R6] <1> <- R4   (midx: 0)
//ili932x.c,668 :: 		}
103:   (midx: 0)
//ili932x.c,669 :: 		}
102:   (midx: 0)
//ili932x.c,670 :: 		}
101:   (midx: 0)
//ili932x.c,672 :: 		print_str(x_pos, y_pos, font_size, colour, back_colour, ch);
	R5 <4> <- addr(print_D_ch_L0)   (midx: 0)
   (midx: 0)
	R4 <2> <- R7   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R5)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _print_str   (midx: 0)
  end
   (midx: 0)
_print_F:
  begin   (midx: 0)
//ili932x.c,676 :: 		void print_F(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned int colour, unsigned int back_colour, float value, unsigned char points)
_print_F:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_print_F_x_pos <1> <- R0   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R8 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R9 <2> <- FARG_print_F_back_colour   (midx: 0)
   (midx: 0)
	R10 <4> <- FARG_print_F_value   (midx: 0)
	R4 <1> <- FARG_print_F_points   (midx: 0)
	FARG_print_F_points <1> <- R4   (midx: 0)
//ili932x.c,678 :: 		signed long tmp = 0x0000;
   (midx: 0)
//ili932x.c,680 :: 		tmp = value;
	R1 <1> <- PUSH(R1)   (midx: 255)
	R0 <4> <- (type cast)R10   (midx: 0)
	R1 <1> <- POP   (midx: 255)
	print_F_tmp_L0 <4> <- R0   (midx: 0)
//ili932x.c,681 :: 		print_I(x_pos, y_pos, font_size, colour, back_colour, tmp);
	R5 <2> <- R0   (midx: 0)
	R4 <2> <- R9   (midx: 0)
	R10 <4> <- PUSH(R10)   (midx: 255)
	R9 <2> <- PUSH(R9)   (midx: 255)
	R8 <2> <- PUSH(R8)   (midx: 255)
	R3 <1> <- PUSH(R3)   (midx: 255)
	R1 <1> <- PUSH(R1)   (midx: 255)
	R2 <1> <- R3   (midx: 0)
	R3 <2> <- R8   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- FARG_print_F_x_pos   (midx: 0)
	FARG_print_I_value <2> <- PUSH(R5)   (midx: 0)
	FARG_print_I_back_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _print_I   (midx: 0)
	R1 <1> <- POP   (midx: 255)
	R3 <1> <- POP   (midx: 255)
	R8 <2> <- POP   (midx: 255)
	R9 <2> <- POP   (midx: 255)
	R10 <4> <- POP   (midx: 255)
//ili932x.c,682 :: 		tmp = ((value - tmp) * 10000);
	R1 <1> <- PUSH(R1)   (midx: 255)
	R0 <4> <- (type cast)print_F_tmp_L0   (midx: 0)
	R1 <1> <- POP   (midx: 255)
	FLOC_print_F+0 <4> <- R0   (midx: 0)
	FLOC_print_F+0 <4> <- R0   (midx: 0)
	R2 <4> <- FLOC_print_F+0   (midx: 0)
	R8 <2> <- PUSH(R8)   (midx: 255)
	R3 <1> <- PUSH(R3)   (midx: 255)
	R1 <1> <- PUSH(R1)   (midx: 255)
	R0 <4> <-  R10 - R2   (midx: 8)
	R1 <1> <- POP   (midx: 255)
	R3 <1> <- POP   (midx: 255)
	R8 <2> <- POP   (midx: 255)
	R2 <4> <- 1.000000E+004   (midx: 0)
	R3 <1> <- PUSH(R3)   (midx: 255)
	R1 <1> <- PUSH(R1)   (midx: 255)
	R0 <4> <-  R0 * R2   (midx: 9)
	R1 <1> <- POP   (midx: 255)
	R3 <1> <- POP   (midx: 255)
	R1 <1> <- PUSH(R1)   (midx: 255)
	R0 <4> <- (type cast)R0   (midx: 0)
	R1 <1> <- POP   (midx: 255)
	print_F_tmp_L0 <4> <- R0   (midx: 0)
//ili932x.c,684 :: 		if(tmp < 0)
	if ( R0 >= 0) then goto 104   (midx: 6)
//ili932x.c,686 :: 		tmp = -tmp;
	R4 <4> <- print_F_tmp_L0   (midx: 0)
	R4 <4> <-  0 - R4   (midx: 6)
	print_F_tmp_L0 <4> <- R4   (midx: 0)
//ili932x.c,687 :: 		}
104:   (midx: 0)
//ili932x.c,689 :: 		if((value >= 10000) && (value < 100000))
	R0 <4> <- 1.000000E+004   (midx: 0)
	R0 <4> <-  R10 >= R0   (midx: 9)
	if (!R0) then goto 194   (midx: 0)
	R0 <4> <- 1.000000E+005   (midx: 0)
	R0 <4> <-  R10 < R0   (midx: 9)
   (midx: 0)
	if (!R0) then goto 193   (midx: 0)
192:   (midx: 0)
//ili932x.c,691 :: 		print_D((x_pos + 36), y_pos, font_size, colour, back_colour, tmp, points);
	R7 <1> <- FARG_print_F_points   (midx: 0)
	R6 <2> <- print_F_tmp_L0   (midx: 0)
   (midx: 0)
	R5 <2> <- R9   (midx: 0)
	R4 <2> <- FARG_print_F_x_pos   (midx: 0)
	R4 <2> <-  R4 + 36   (midx: 0)
   (midx: 0)
	R2 <1> <- R3   (midx: 0)
   (midx: 0)
	R3 <2> <- R8   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R4   (midx: 0)
	FARG_print_D_points <1> <- PUSH(R7)   (midx: 0)
	FARG_print_D_value <2> <- PUSH(R6)   (midx: 0)
	FARG_print_D_back_colour <2> <- PUSH(R5)   (midx: 0)
	CALL _print_D   (midx: 0)
//ili932x.c,692 :: 		}
	goto	108   (midx: 0)
//ili932x.c,689 :: 		if((value >= 10000) && (value < 100000))
194:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
193:   (midx: 0)
//ili932x.c,693 :: 		else if((value >= 1000) && (value < 10000))
	R0 <4> <- 1.000000E+003   (midx: 0)
	R0 <4> <-  R10 >= R0   (midx: 9)
	if (!R0) then goto 196   (midx: 0)
	R0 <4> <- 1.000000E+004   (midx: 0)
	R0 <4> <-  R10 < R0   (midx: 9)
   (midx: 0)
	if (!R0) then goto 195   (midx: 0)
191:   (midx: 0)
//ili932x.c,695 :: 		print_D((x_pos + 30), y_pos, font_size, colour, back_colour, tmp, points);
	R7 <1> <- FARG_print_F_points   (midx: 0)
	R6 <2> <- print_F_tmp_L0   (midx: 0)
   (midx: 0)
	R5 <2> <- R9   (midx: 0)
	R4 <2> <- FARG_print_F_x_pos   (midx: 0)
	R4 <2> <-  R4 + 30   (midx: 0)
   (midx: 0)
	R2 <1> <- R3   (midx: 0)
   (midx: 0)
	R3 <2> <- R8   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R4   (midx: 0)
	FARG_print_D_points <1> <- PUSH(R7)   (midx: 0)
	FARG_print_D_value <2> <- PUSH(R6)   (midx: 0)
	FARG_print_D_back_colour <2> <- PUSH(R5)   (midx: 0)
	CALL _print_D   (midx: 0)
//ili932x.c,696 :: 		}
	goto	112   (midx: 0)
//ili932x.c,693 :: 		else if((value >= 1000) && (value < 10000))
196:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
195:   (midx: 0)
//ili932x.c,697 :: 		else if((value >= 100) && (value < 1000))
	R0 <4> <- 1.000000E+002   (midx: 0)
	R0 <4> <-  R10 >= R0   (midx: 9)
	if (!R0) then goto 198   (midx: 0)
	R0 <4> <- 1.000000E+003   (midx: 0)
	R0 <4> <-  R10 < R0   (midx: 9)
   (midx: 0)
	if (!R0) then goto 197   (midx: 0)
190:   (midx: 0)
//ili932x.c,699 :: 		print_D((x_pos + 24), y_pos, font_size, colour, back_colour, tmp, points);
	R7 <1> <- FARG_print_F_points   (midx: 0)
	R6 <2> <- print_F_tmp_L0   (midx: 0)
   (midx: 0)
	R5 <2> <- R9   (midx: 0)
	R4 <2> <- FARG_print_F_x_pos   (midx: 0)
	R4 <2> <-  R4 + 24   (midx: 0)
   (midx: 0)
	R2 <1> <- R3   (midx: 0)
   (midx: 0)
	R3 <2> <- R8   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R4   (midx: 0)
	FARG_print_D_points <1> <- PUSH(R7)   (midx: 0)
	FARG_print_D_value <2> <- PUSH(R6)   (midx: 0)
	FARG_print_D_back_colour <2> <- PUSH(R5)   (midx: 0)
	CALL _print_D   (midx: 0)
//ili932x.c,700 :: 		}
	goto	116   (midx: 0)
//ili932x.c,697 :: 		else if((value >= 100) && (value < 1000))
198:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
197:   (midx: 0)
//ili932x.c,701 :: 		else if((value >= 10) && (value < 100))
	R0 <4> <- 1.000000E+001   (midx: 0)
	R0 <4> <-  R10 >= R0   (midx: 9)
	if (!R0) then goto 200   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	R0 <4> <-  R10 < R0   (midx: 9)
   (midx: 0)
	if (!R0) then goto 199   (midx: 0)
189:   (midx: 0)
//ili932x.c,703 :: 		print_D((x_pos + 18), y_pos, font_size, colour, back_colour, tmp, points);
	R7 <1> <- FARG_print_F_points   (midx: 0)
	R6 <2> <- print_F_tmp_L0   (midx: 0)
   (midx: 0)
	R5 <2> <- R9   (midx: 0)
	R4 <2> <- FARG_print_F_x_pos   (midx: 0)
	R4 <2> <-  R4 + 18   (midx: 0)
   (midx: 0)
	R2 <1> <- R3   (midx: 0)
   (midx: 0)
	R3 <2> <- R8   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R4   (midx: 0)
	FARG_print_D_points <1> <- PUSH(R7)   (midx: 0)
	FARG_print_D_value <2> <- PUSH(R6)   (midx: 0)
	FARG_print_D_back_colour <2> <- PUSH(R5)   (midx: 0)
	CALL _print_D   (midx: 0)
//ili932x.c,704 :: 		}
	goto	120   (midx: 0)
//ili932x.c,701 :: 		else if((value >= 10) && (value < 100))
200:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
199:   (midx: 0)
//ili932x.c,705 :: 		else if(value < 10)
	R0 <4> <- 1.000000E+001   (midx: 0)
	R0 <4> <-  R10 < R0   (midx: 9)
	if (!R0) then goto 121   (midx: 0)
//ili932x.c,707 :: 		print_D((x_pos + 12), y_pos, font_size, colour, back_colour, tmp, points);
	R7 <1> <- FARG_print_F_points   (midx: 0)
	R6 <2> <- print_F_tmp_L0   (midx: 0)
	R5 <2> <- R9   (midx: 0)
	R4 <2> <- FARG_print_F_x_pos   (midx: 0)
	R4 <2> <-  R4 + 12   (midx: 0)
	R10 <4> <- PUSH(R10)   (midx: 255)
	R9 <2> <- PUSH(R9)   (midx: 255)
	R8 <2> <- PUSH(R8)   (midx: 255)
	R3 <1> <- PUSH(R3)   (midx: 255)
	R1 <1> <- PUSH(R1)   (midx: 255)
	R2 <1> <- R3   (midx: 0)
	R3 <2> <- R8   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R4   (midx: 0)
	FARG_print_D_points <1> <- PUSH(R7)   (midx: 0)
	FARG_print_D_value <2> <- PUSH(R6)   (midx: 0)
	FARG_print_D_back_colour <2> <- PUSH(R5)   (midx: 0)
	CALL _print_D   (midx: 0)
	R1 <1> <- POP   (midx: 255)
	R3 <1> <- POP   (midx: 255)
	R8 <2> <- POP   (midx: 255)
	R9 <2> <- POP   (midx: 255)
	R10 <4> <- POP   (midx: 255)
//ili932x.c,709 :: 		if((value) < 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
   (midx: 0)
	R0 <4> <-  R10 < R0   (midx: 9)
	if (!R0) then goto 122   (midx: 0)
//ili932x.c,711 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, 0x2D);
	R5 <1> <- 45   (midx: 0)
   (midx: 0)
	R4 <2> <- R9   (midx: 0)
   (midx: 0)
	R2 <1> <- R3   (midx: 0)
   (midx: 0)
	R3 <2> <- R8   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- FARG_print_F_x_pos   (midx: 0)
	FARG_print_char_ch <1> <- PUSH(R5)   (midx: 0)
	FARG_print_char_back_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _print_char   (midx: 0)
//ili932x.c,712 :: 		}
	goto	123   (midx: 0)
122:   (midx: 0)
//ili932x.c,715 :: 		print_char(x_pos, y_pos, font_size, colour, back_colour, 0x20);
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R5 <1> <- 32   (midx: 0)
   (midx: 0)
	R4 <2> <- R9   (midx: 0)
   (midx: 0)
	R2 <1> <- R3   (midx: 0)
   (midx: 0)
	R3 <2> <- R8   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- FARG_print_F_x_pos   (midx: 0)
	FARG_print_char_ch <1> <- PUSH(R5)   (midx: 0)
	FARG_print_char_back_colour <2> <- PUSH(R4)   (midx: 0)
	CALL _print_char   (midx: 0)
//ili932x.c,716 :: 		}
123:   (midx: 0)
//ili932x.c,717 :: 		}
121:   (midx: 0)
120:   (midx: 0)
116:   (midx: 0)
112:   (midx: 0)
108:   (midx: 0)
  end
   (midx: 0)
_Draw_BMP:
  begin   (midx: 0)
//ili932x.c,721 :: 		void Draw_BMP(unsigned int x_pos, unsigned int y_pos, unsigned int H, unsigned int W, unsigned char *bitmap)
_Draw_BMP:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R2 <2> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <2> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R5 <4> <- FARG_Draw_BMP_bitmap   (midx: 0)
//ili932x.c,723 :: 		unsigned long index = 0;
   (midx: 0)
//ili932x.c,724 :: 		unsigned long size = (W * H);
	R4 <2> <-  R3 * R2   (midx: 1)
   (midx: 0)
	R10 <4> <- R4   (midx: 0)
//ili932x.c,725 :: 		unsigned int *bitmap_ptr = (unsigned int*)bitmap;
   (midx: 0)
   (midx: 0)
	R11 <4> <- R5   (midx: 0)
//ili932x.c,727 :: 		TFT_set_display_window(x_pos, y_pos, (W - 1), (H - 1));
   (midx: 0)
	R5 <2> <-  R2 - 1   (midx: 1)
   (midx: 0)
	R4 <2> <-  R3 - 1   (midx: 1)
	R3 <2> <- R5   (midx: 0)
	R2 <2> <- R4   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_set_display_window   (midx: 0)
//ili932x.c,728 :: 		TFT_write_RAM_prepare();
	CALL _TFT_write_RAM_prepare   (midx: 0)
//ili932x.c,730 :: 		for(index = 0; index < size; index++)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <4> <- 0   (midx: 0)
	R5 <4> <- R10   (midx: 0)
	R7 <4> <- R11   (midx: 0)
	R6 <4> <- R6   (midx: 0)
124:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R6 >= R5) then goto 125   (midx: 2)
//ili932x.c,732 :: 		TFT_write(*bitmap_ptr++, DAT);
	R4 <2> <- *R7   (midx: 0)
	R4 <2> <- R4   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <2> <- R4   (midx: 0)
	CALL _TFT_write   (midx: 0)
   (midx: 0)
	R4 <4> <-  R7 + 2   (midx: 2)
   (midx: 0)
	R0 <4> <- R4   (midx: 0)
//ili932x.c,730 :: 		for(index = 0; index < size; index++)
	R6 <4> <-  R6 + 1   (midx: 2)
	R6 <4> <- R6   (midx: 0)
//ili932x.c,733 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R5 <4> <- R5   (midx: 0)
	R7 <4> <- R0   (midx: 0)
	R6 <4> <- R6   (midx: 0)
	goto	124   (midx: 0)
125:   (midx: 0)
//ili932x.c,735 :: 		TFT_write_reg(R80, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 80   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,736 :: 		TFT_write_reg(R81, 0x00EF);
	R1 <2> <- 239   (midx: 0)
	R0 <2> <- 81   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,737 :: 		TFT_write_reg(R82, 0x0000);
	R1 <2> <- 0   (midx: 0)
	R0 <2> <- 82   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
//ili932x.c,738 :: 		TFT_write_reg(R83, 0x013F);
	R1 <2> <- 319   (midx: 0)
	R0 <2> <- 83   (midx: 0)
	CALL _TFT_write_reg   (midx: 0)
  end
   (midx: 0)
_tp_GPIO_init:
  begin   (midx: 0)
//touch.c,13 :: 		void tp_GPIO_init()
_tp_GPIO_init:
  begin   (midx: 0)
//touch.c,15 :: 		GPIO_Clk_Enable(&GPIOA_BASE);
	R0 <4> <- #GPIOA_BASE   (midx: 0)
	CALL _GPIO_Clk_Enable   (midx: 0)
//touch.c,18 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
	R2 <4> <- 524308   (midx: 0)
//touch.c,17 :: 		(_GPIO_PINMASK_4 | _GPIO_PINMASK_5 | _GPIO_PINMASK_7),
	R1 <2> <- 176   (midx: 0)
//touch.c,16 :: 		GPIO_Config(&GPIOA_BASE,
	R0 <4> <- #GPIOA_BASE   (midx: 0)
//touch.c,18 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_MAX | _GPIO_CFG_OTYPE_PP));
	CALL _GPIO_Config   (midx: 0)
//touch.c,20 :: 		GPIO_Config(&GPIOA_BASE, _GPIO_PINMASK_6, (_GPIO_CFG_DIGITAL_INPUT | _GPIO_CFG_PULL_UP));
	R2 <4> <- 194   (midx: 0)
	R1 <2> <- 64   (midx: 0)
	R0 <4> <- #GPIOA_BASE   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//touch.c,22 :: 		GPIO_Clk_Enable(&GPIOC_BASE);
	R0 <4> <- #GPIOC_BASE   (midx: 0)
	CALL _GPIO_Clk_Enable   (midx: 0)
//touch.c,23 :: 		GPIO_Config(&GPIOC_BASE, _GPIO_PINMASK_13, (_GPIO_CFG_DIGITAL_INPUT | _GPIO_CFG_PULL_UP));
	R2 <4> <- 194   (midx: 0)
	R1 <2> <- 8192   (midx: 0)
	R0 <4> <- #GPIOC_BASE   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
  end
   (midx: 0)
_tp_init:
  begin   (midx: 0)
//touch.c,4 :: 		void tp_init()
_tp_init:
  begin   (midx: 0)
//touch.c,6 :: 		tp_GPIO_init();
	CALL _tp_GPIO_init   (midx: 0)
//touch.c,7 :: 		TP_CS_pin = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//touch.c,8 :: 		MOSI_pin = 1;
	R0 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//touch.c,9 :: 		SCK_pin = 1;
	R0 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
  end
   (midx: 0)
_TP_read:
  begin   (midx: 0)
//touch.c,27 :: 		unsigned int TP_read()
_TP_read:
  begin   (midx: 0)
//touch.c,29 :: 		unsigned char i = 0x0C;
   (midx: 0)
   (midx: 0)
	R2 <-initialize(12)   (midx: 0)
//touch.c,30 :: 		unsigned int value = 0x0000;
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <-initialize(0)   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	R1 <2> <- R1   (midx: 0)
//touch.c,32 :: 		while(i > 0x00)
127:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R2 <= 0) then goto 128   (midx: 0)
//touch.c,34 :: 		value <<= 1;
   (midx: 0)
	R0 <2> <-  R1 shl 1   (midx: 1)
   (midx: 0)
	R3 <2> <- R0   (midx: 0)
//touch.c,36 :: 		SCK_pin = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//touch.c,37 :: 		SCK_pin = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//touch.c,39 :: 		if(MISO_pin == 1)
	R1 <4> <- addr(GPIOA_IDRbits+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 201   (midx: 21)
//touch.c,41 :: 		value++;
   (midx: 0)
	R1 <2> <-  R3 + 1   (midx: 1)
   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R1 <2> <- R1   (midx: 0)
//touch.c,42 :: 		}
	goto	129   (midx: 0)
201:   (midx: 0)
//touch.c,39 :: 		if(MISO_pin == 1)
	R1 <2> <- R3   (midx: 0)
//touch.c,42 :: 		}
129:   (midx: 0)
//touch.c,44 :: 		i--;
   (midx: 0)
	R2 <1> <-  R2 - 1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//touch.c,45 :: 		};
   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	goto	127   (midx: 0)
128:   (midx: 0)
//touch.c,47 :: 		return value;
   (midx: 0)
	R0 <2> <- R1   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_tp_write:
  begin   (midx: 0)
//touch.c,51 :: 		void tp_write(unsigned char value)
_tp_write:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//touch.c,53 :: 		unsigned char i = 0x08;
   (midx: 0)
   (midx: 0)
	R3 <-initialize(8)   (midx: 0)
//touch.c,55 :: 		SCK_pin = 0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
   (midx: 0)
   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
	R3 <1> <- PUSH(R3)   (midx: 254)
	R3 <1> <- R0   (midx: 0)
	R0 <1> <- POP   (midx: 254)
//touch.c,57 :: 		while(i > 0)
130:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R0 <= 0) then goto 131   (midx: 0)
//touch.c,59 :: 		if((value & 0x80) != 0x00)
	R1 <1> <-  R3 & 128   (midx: 0)
	if ( R1 = 0) then goto 132   (midx: 0)
//touch.c,61 :: 		MOSI_pin = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
//touch.c,62 :: 		}
	goto	133   (midx: 0)
132:   (midx: 0)
//touch.c,65 :: 		MOSI_pin = 0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
//touch.c,66 :: 		}
133:   (midx: 0)
//touch.c,68 :: 		value <<= 1;
	R1 <2> <-  R3 shl 1   (midx: 1)
	R3 <1> <- R1   (midx: 0)
//touch.c,70 :: 		SCK_pin = 0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
//touch.c,71 :: 		SCK_pin = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R1] <0> <- R2   (midx: 20)
//touch.c,73 :: 		i--;
	R0 <1> <-  R0 - 1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//touch.c,74 :: 		};
   (midx: 0)
   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	goto	130   (midx: 0)
131:   (midx: 0)
  end
   (midx: 0)
_map:
  begin   (midx: 0)
//touch.c,160 :: 		float map(float value, float x_min, float x_max, float y_min, float y_max)
_map:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R10 <4> <- R0   (midx: 0)
	R11 <4> <- R1   (midx: 0)
	R12 <4> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R9 <4> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <4> <- FARG_map_y_max   (midx: 0)
//touch.c,162 :: 		return (y_min + (((y_max - y_min) / (x_max - x_min)) * (value - x_min)));
   (midx: 0)
	R0 <4> <-  R4 - R9   (midx: 8)
	FLOC_map+4 <4> <- R0   (midx: 0)
   (midx: 0)
	R0 <4> <-  R12 - R11   (midx: 8)
	FLOC_map+0 <4> <- R0   (midx: 0)
	R0 <4> <- FLOC_map+4   (midx: 0)
	R1 <4> <- PUSH(R1)   (midx: 255)
	R1 <4> <- FLOC_map+0   (midx: 0)
	R0 <4> <-  R0 / R1   (midx: 8)
	R1 <4> <- POP   (midx: 255)
	FLOC_map+0 <4> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <4> <-  R10 - R11   (midx: 8)
	R2 <4> <- FLOC_map+0   (midx: 0)
	R0 <4> <-  R2 * R0   (midx: 8)
   (midx: 0)
	R0 <4> <-  R9 + R0   (midx: 8)
	R0 <4> <- R0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_constrain:
  begin   (midx: 0)
//touch.c,166 :: 		float constrain(float value, float value_min, float value_max)
_constrain:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- R1   (midx: 0)
	R1 <4> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R5 <4> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//touch.c,168 :: 		if(value >= value_max)
	R0 <4> <-  R1 >= R5   (midx: 8)
   (midx: 0)
   (midx: 0)
	if (!R0) then goto 143   (midx: 0)
//touch.c,170 :: 		return value_max;
   (midx: 0)
	R0 <4> <- R5   (midx: 0)
	return   (midx: 0)
//touch.c,171 :: 		}
143:   (midx: 0)
//touch.c,172 :: 		else if(value <= value_min)
   (midx: 0)
   (midx: 0)
	R0 <4> <-  R1 <= R3   (midx: 8)
   (midx: 0)
	if (!R0) then goto 145   (midx: 0)
//touch.c,174 :: 		return value_min;
   (midx: 0)
	R0 <4> <- R3   (midx: 0)
	return   (midx: 0)
//touch.c,175 :: 		}
145:   (midx: 0)
//touch.c,178 :: 		return value;
   (midx: 0)
   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_filter_data:
  begin   (midx: 0)
//touch.c,113 :: 		unsigned int filter_data(unsigned int value, unsigned char axis)
_filter_data:
  begin   (midx: 0)
   (midx: 0)
	FARG_filter_data_value <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R1   (midx: 0)
   (midx: 0)
//touch.c,117 :: 		float sum = 0.0;
   (midx: 0)
	R2 <4> <- 0   (midx: 0)
	filter_data_sum_L0 <-initialize(0.000000E+000)   (midx: 0)
//touch.c,118 :: 		float min_R = 0.0;
   (midx: 0)
//touch.c,119 :: 		float max_R = 0.0;
   (midx: 0)
//touch.c,120 :: 		float axis_max = 0.0;
   (midx: 0)
//touch.c,122 :: 		unsigned int res = 0x0000;
   (midx: 0)
//touch.c,124 :: 		unsigned char i = 0x00;
   (midx: 0)
//touch.c,126 :: 		switch(axis)
   (midx: 0)
	goto	136   (midx: 0)
//touch.c,128 :: 		case 1:
138:   (midx: 0)
//touch.c,130 :: 		min_R = RL_min;
	R2 <4> <- 4.000000E+002   (midx: 0)
	filter_data_min_R_L0 <4> <- R2   (midx: 0)
//touch.c,131 :: 		max_R = RL_max;
	R2 <4> <- 3.700000E+003   (midx: 0)
	filter_data_max_R_L0 <4> <- R2   (midx: 0)
//touch.c,132 :: 		axis_max = res_l;
	R2 <4> <- 3.190000E+002   (midx: 0)
	filter_data_axis_max_L0 <4> <- R2   (midx: 0)
//touch.c,133 :: 		break;
	goto	137   (midx: 0)
//touch.c,135 :: 		default:
139:   (midx: 0)
//touch.c,137 :: 		min_R = RW_min;
	R2 <4> <- 3.700000E+003   (midx: 0)
	filter_data_min_R_L0 <4> <- R2   (midx: 0)
//touch.c,138 :: 		max_R = RW_max;
	R2 <4> <- 4.000000E+002   (midx: 0)
	filter_data_max_R_L0 <4> <- R2   (midx: 0)
//touch.c,139 :: 		axis_max = res_w;
	R2 <4> <- 2.390000E+002   (midx: 0)
	filter_data_axis_max_L0 <4> <- R2   (midx: 0)
//touch.c,140 :: 		break;
	goto	137   (midx: 0)
//touch.c,142 :: 		}
136:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R0 = 1) then goto 138   (midx: 0)
	goto	139   (midx: 0)
137:   (midx: 0)
//touch.c,144 :: 		temp[0] = map((((float)value) - error), min_R, max_R, 0.0, axis_max);
	R2 <4> <- addr(filter_data_temp_L0)   (midx: 0)
	FLOC_filter_data+52 <4> <- R2   (midx: 0)
	R2 <4> <- R2   (midx: 2)
	FLOC_filter_data+48 <4> <- R2   (midx: 0)
	R2 <4> <- filter_data_axis_max_L0   (midx: 0)
	FLOC_filter_data+44 <4> <- R2   (midx: 0)
	R0 <4> <- (type cast)FARG_filter_data_value   (midx: 0)
	R2 <4> <- 5.000000E+001   (midx: 0)
	R0 <4> <-  R0 - R2   (midx: 9)
	R2 <4> <- FLOC_filter_data+44   (midx: 0)
	FARG_map_y_max <4> <- PUSH(R2)   (midx: 0)
	R3 <4> <- 0.000000E+000   (midx: 0)
	R2 <4> <- filter_data_max_R_L0   (midx: 0)
	R1 <4> <- filter_data_min_R_L0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _map   (midx: 0)
	R2 <4> <- FLOC_filter_data+48   (midx: 0)
	[R2] <4> <- R0   (midx: 0)
//touch.c,145 :: 		temp[1] = map((((float)value) + error), min_R, max_R, 0.0, axis_max);
	R2 <4> <- FLOC_filter_data+52   (midx: 0)
	R2 <4> <-  R2 + 4   (midx: 2)
	FLOC_filter_data+48 <4> <- R2   (midx: 0)
	R2 <4> <- filter_data_axis_max_L0   (midx: 0)
	FLOC_filter_data+44 <4> <- R2   (midx: 0)
	R0 <4> <- (type cast)FARG_filter_data_value   (midx: 0)
	R2 <4> <- 5.000000E+001   (midx: 0)
	R0 <4> <-  R0 + R2   (midx: 9)
	R2 <4> <- FLOC_filter_data+44   (midx: 0)
	FARG_map_y_max <4> <- PUSH(R2)   (midx: 0)
	R3 <4> <- 0.000000E+000   (midx: 0)
	R2 <4> <- filter_data_max_R_L0   (midx: 0)
	R1 <4> <- filter_data_min_R_L0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _map   (midx: 0)
	R2 <4> <- FLOC_filter_data+48   (midx: 0)
	[R2] <4> <- R0   (midx: 0)
//touch.c,146 :: 		temp[2] = map(((float)value), min_R, max_R, 0.0, axis_max);
	R2 <4> <- FLOC_filter_data+52   (midx: 0)
	R2 <4> <-  R2 + 8   (midx: 2)
	FLOC_filter_data+48 <4> <- R2   (midx: 0)
	R2 <4> <- filter_data_axis_max_L0   (midx: 0)
	FLOC_filter_data+44 <4> <- R2   (midx: 0)
	R0 <4> <- (type cast)FARG_filter_data_value   (midx: 0)
	R2 <4> <- FLOC_filter_data+44   (midx: 0)
	FARG_map_y_max <4> <- PUSH(R2)   (midx: 0)
	R3 <4> <- 0.000000E+000   (midx: 0)
	R2 <4> <- filter_data_max_R_L0   (midx: 0)
	R1 <4> <- filter_data_min_R_L0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _map   (midx: 0)
	R2 <4> <- FLOC_filter_data+48   (midx: 0)
	[R2] <4> <- R0   (midx: 0)
//touch.c,148 :: 		for(i = 0; i < 3; i++)
   (midx: 0)
   (midx: 0)
	R9 <1> <- 0   (midx: 0)
	R9 <1> <- R9   (midx: 0)
140:   (midx: 0)
   (midx: 0)
	if ( R9 >= 3) then goto 141   (midx: 0)
//touch.c,150 :: 		sum += temp[i];
	R3 <4> <- addr(filter_data_temp_L0)   (midx: 0)
	R2 <4> <-  R9 shl 2   (midx: 2)
	R2 <4> <-  R3 + R2   (midx: 2)
	R2 <4> <- *R2   (midx: 0)
	R0 <4> <- filter_data_sum_L0   (midx: 0)
	R0 <4> <-  R0 + R2   (midx: 8)
	filter_data_sum_L0 <4> <- R0   (midx: 0)
//touch.c,148 :: 		for(i = 0; i < 3; i++)
   (midx: 0)
	R2 <1> <-  R9 + 1   (midx: 0)
   (midx: 0)
	R0 <1> <- R2   (midx: 0)
//touch.c,151 :: 		}
   (midx: 0)
	R9 <1> <- R0   (midx: 0)
	goto	140   (midx: 0)
141:   (midx: 0)
//touch.c,153 :: 		sum /= 3.0;
	R0 <4> <- filter_data_sum_L0   (midx: 0)
	R2 <4> <- 3.000000E+000   (midx: 0)
	R0 <4> <-  R0 / R2   (midx: 9)
//touch.c,154 :: 		res = constrain(sum, 0.0, axis_max);
	R2 <4> <- filter_data_axis_max_L0   (midx: 0)
	R1 <4> <- 0.000000E+000   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _constrain   (midx: 0)
	R0 <2> <- (type cast)R0   (midx: 0)
//touch.c,156 :: 		return res;
	R0 <2> <- R0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_TP_read_coordinates:
  begin   (midx: 0)
//touch.c,78 :: 		void TP_read_coordinates(unsigned int *x_pos, unsigned int *y_pos)
_TP_read_coordinates:
  begin   (midx: 0)
	FARG_TP_read_coordinates_x_pos <4> <- R0   (midx: 0)
   (midx: 0)
	FARG_TP_read_coordinates_y_pos <4> <- R1   (midx: 0)
//touch.c,80 :: 		unsigned int temp = 0x0000;
   (midx: 0)
//touch.c,81 :: 		unsigned int avg_x = 0x0000;
   (midx: 0)
	R2 <4> <- 0   (midx: 0)
	TP_read_coordinates_avg_x_L0 <-initialize(0)   (midx: 0)
//touch.c,82 :: 		unsigned int avg_y = 0x0000;
   (midx: 0)
	TP_read_coordinates_avg_y_L0 <-initialize(0)   (midx: 0)
//touch.c,84 :: 		unsigned char samples = 0x10;
   (midx: 0)
   (midx: 0)
	R5 <-initialize(16)   (midx: 0)
//touch.c,86 :: 		TP_CS_pin = 0;
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
	R4 <1> <- R5   (midx: 0)
//touch.c,87 :: 		while(samples > 0)
134:   (midx: 0)
   (midx: 0)
	if ( R4 <= 0) then goto 135   (midx: 0)
//touch.c,89 :: 		tp_write(CMD_RDY);
	R0 <1> <- 144   (midx: 0)
	CALL _tp_write   (midx: 0)
//touch.c,90 :: 		SCK_pin = 1;
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//touch.c,91 :: 		SCK_pin = 0;
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//touch.c,92 :: 		avg_y += TP_read();
	CALL _TP_read   (midx: 0)
	R2 <2> <- TP_read_coordinates_avg_y_L0   (midx: 0)
	R2 <2> <-  R2 + R0   (midx: 1)
	TP_read_coordinates_avg_y_L0 <2> <- R2   (midx: 0)
//touch.c,94 :: 		tp_write(CMD_RDX);
	R0 <1> <- 208   (midx: 0)
	CALL _tp_write   (midx: 0)
//touch.c,95 :: 		SCK_pin = 1;
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//touch.c,96 :: 		SCK_pin = 0;
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//touch.c,97 :: 		avg_x += TP_read();
	CALL _TP_read   (midx: 0)
	R2 <2> <- TP_read_coordinates_avg_x_L0   (midx: 0)
	R2 <2> <-  R2 + R0   (midx: 1)
	TP_read_coordinates_avg_x_L0 <2> <- R2   (midx: 0)
//touch.c,99 :: 		samples--;
   (midx: 0)
	R2 <1> <-  R4 - 1   (midx: 0)
   (midx: 0)
	R0 <1> <- R2   (midx: 0)
//touch.c,100 :: 		};
   (midx: 0)
	R4 <1> <- R0   (midx: 0)
	goto	134   (midx: 0)
135:   (midx: 0)
//touch.c,101 :: 		TP_CS_pin = 1;
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(GPIOA_ODRbits+0)   (midx: 0)
	[R2] <0> <- R3   (midx: 20)
//touch.c,103 :: 		temp = (avg_x >> 4);
	R2 <2> <- TP_read_coordinates_avg_x_L0   (midx: 0)
	R2 <2> <-  R2 shr 4   (midx: 1)
//touch.c,104 :: 		temp = filter_data(temp, 1);
	R1 <1> <- 1   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	CALL _filter_data   (midx: 0)
//touch.c,105 :: 		*x_pos = temp;
	R2 <4> <- FARG_TP_read_coordinates_x_pos   (midx: 0)
	[R2] <2> <- R0   (midx: 0)
//touch.c,107 :: 		temp = (avg_y >> 4);
	R2 <2> <- TP_read_coordinates_avg_y_L0   (midx: 0)
	R2 <2> <-  R2 shr 4   (midx: 1)
//touch.c,108 :: 		temp = filter_data(temp, 0);
	R1 <1> <- 0   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	CALL _filter_data   (midx: 0)
//touch.c,109 :: 		*y_pos = temp;
	R2 <4> <- FARG_TP_read_coordinates_y_pos   (midx: 0)
	[R2] <2> <- R0   (midx: 0)
  end
   (midx: 0)
_setup_MCU:
  begin   (midx: 0)
//tftdisp.c,34 :: 		void setup_MCU()
_setup_MCU:
  begin   (midx: 0)
//tftdisp.c,36 :: 		tp_init();
	CALL _tp_init   (midx: 0)
//tftdisp.c,37 :: 		TFT_init();
	CALL _TFT_init   (midx: 0)
  end
   (midx: 0)
_test_RGB:
  begin   (midx: 0)
//tftdisp.c,50 :: 		void test_RGB()
_test_RGB:
  begin   (midx: 0)
//tftdisp.c,52 :: 		TFT_fill(Red);
	R0 <2> <- 63488   (midx: 0)
	CALL _TFT_fill   (midx: 0)
//tftdisp.c,53 :: 		delay_ms(600);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//tftdisp.c,54 :: 		TFT_fill(Green);
	R0 <2> <- 2016   (midx: 0)
	CALL _TFT_fill   (midx: 0)
//tftdisp.c,55 :: 		delay_ms(600);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//tftdisp.c,56 :: 		TFT_fill(Blue);
	R0 <2> <- 31   (midx: 0)
	CALL _TFT_fill   (midx: 0)
//tftdisp.c,57 :: 		delay_ms(600);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//tftdisp.c,58 :: 		TFT_fill(Black);
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_fill   (midx: 0)
  end
   (midx: 0)
_draw_flag:
  begin   (midx: 0)
//tftdisp.c,41 :: 		void draw_flag()
_draw_flag:
  begin   (midx: 0)
//tftdisp.c,43 :: 		Draw_Rectangle(20, 20, 299, 219, YES, SQUARE, Green, Green);
	R3 <2> <- 2016   (midx: 0)
	R2 <2> <- 2016   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	FARG_Draw_Rectangle_back_colour <2> <- PUSH(R3)   (midx: 0)
	FARG_Draw_Rectangle_colour <2> <- PUSH(R2)   (midx: 0)
	FARG_Draw_Rectangle_type <1> <- PUSH(R1)   (midx: 0)
	FARG_Draw_Rectangle_fill <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 219   (midx: 0)
	R2 <2> <- 299   (midx: 0)
	R1 <2> <- 20   (midx: 0)
	R0 <2> <- 20   (midx: 0)
	CALL _Draw_Rectangle   (midx: 0)
//tftdisp.c,44 :: 		Draw_Circle(160, 120, 60, YES, Red);
	R0 <2> <- 63488   (midx: 0)
	FARG_Draw_Circle_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <1> <- 1   (midx: 0)
	R2 <2> <- 60   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <2> <- 160   (midx: 0)
	CALL _Draw_Circle   (midx: 0)
//tftdisp.c,45 :: 		delay_ms(4000);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//tftdisp.c,46 :: 		TFT_fill(Black);
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_fill   (midx: 0)
  end
   (midx: 0)
_print_test_data:
  begin   (midx: 0)
//tftdisp.c,62 :: 		void print_test_data()
_print_test_data:
  begin   (midx: 0)
//tftdisp.c,64 :: 		unsigned char s = 0;
   (midx: 0)
//tftdisp.c,65 :: 		signed char c = -9;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	print_test_data_c_L0 <-initialize(-9)   (midx: 0)
//tftdisp.c,67 :: 		signed int i = -9;
   (midx: 0)
	print_test_data_i_L0 <-initialize(-9)   (midx: 0)
//tftdisp.c,69 :: 		float f = -9.0;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	print_test_data_f_L0 <-initialize(-9.000000E+000)   (midx: 0)
//tftdisp.c,72 :: 		print_str(10, 10, 1, Red, Black, "MicroArena");
	?lstr2_tftdisp <-initialize(0)   (midx: 0)
	R0 <4> <- addr(?lstr2_tftdisp)   (midx: 0)
	R1 <4> <- R0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R1)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 63488   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 10   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_str   (midx: 0)
//tftdisp.c,73 :: 		print_str(10, 30, 2, Green, Black, "MicroArena");
	?lstr3_tftdisp <-initialize(0)   (midx: 0)
	R0 <4> <- addr(?lstr3_tftdisp)   (midx: 0)
	R1 <4> <- R0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R1)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 2016   (midx: 0)
	R2 <1> <- 2   (midx: 0)
	R1 <1> <- 30   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_str   (midx: 0)
//tftdisp.c,74 :: 		print_str(10, 60, 3, Blue, Black, "MicroArena");
	?lstr4_tftdisp <-initialize(0)   (midx: 0)
	R0 <4> <- addr(?lstr4_tftdisp)   (midx: 0)
	R1 <4> <- R0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R1)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 31   (midx: 0)
	R2 <1> <- 3   (midx: 0)
	R1 <1> <- 60   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_str   (midx: 0)
//tftdisp.c,76 :: 		print_str(10, 90, 3, White, Black, "https://www.facebook.com/MicroArena");
	?lstr5_tftdisp <-initialize(0)   (midx: 0)
	R0 <4> <- addr(?lstr5_tftdisp)   (midx: 0)
	R1 <4> <- R0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R1)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 65535   (midx: 0)
	R2 <1> <- 3   (midx: 0)
	R1 <1> <- 90   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_str   (midx: 0)
//tftdisp.c,78 :: 		for(s = 0; s < 250; s++)
	R0 <1> <- 0   (midx: 0)
	print_test_data_s_L0 <1> <- R0   (midx: 0)
154:   (midx: 0)
	R0 <1> <- print_test_data_s_L0   (midx: 0)
	if ( R0 >= 250) then goto 155   (midx: 0)
//tftdisp.c,80 :: 		print_C(10, 160, 1, Red, Black, c);
	R1 <2> <- print_test_data_c_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_C_value <2> <- PUSH(R1)   (midx: 0)
	FARG_print_C_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 63488   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 160   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_C   (midx: 0)
//tftdisp.c,81 :: 		print_I(10, 180, 1, Green, Black, i);
	R1 <2> <- print_test_data_i_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_I_value <2> <- PUSH(R1)   (midx: 0)
	FARG_print_I_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 2016   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 180   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_I   (midx: 0)
//tftdisp.c,82 :: 		print_F(10, 200, 1, Blue, Black, f, 1);
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- print_test_data_f_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_F_points <1> <- PUSH(R2)   (midx: 0)
	FARG_print_F_value <4> <- PUSH(R1)   (midx: 0)
	FARG_print_F_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 31   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 200   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_F   (midx: 0)
//tftdisp.c,84 :: 		print_C(60, 160, 2, Red, Black, c);
	R1 <2> <- print_test_data_c_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_C_value <2> <- PUSH(R1)   (midx: 0)
	FARG_print_C_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 63488   (midx: 0)
	R2 <1> <- 2   (midx: 0)
	R1 <1> <- 160   (midx: 0)
	R0 <1> <- 60   (midx: 0)
	CALL _print_C   (midx: 0)
//tftdisp.c,85 :: 		print_I(60, 180, 2, Green, Black, i);
	R1 <2> <- print_test_data_i_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_I_value <2> <- PUSH(R1)   (midx: 0)
	FARG_print_I_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 2016   (midx: 0)
	R2 <1> <- 2   (midx: 0)
	R1 <1> <- 180   (midx: 0)
	R0 <1> <- 60   (midx: 0)
	CALL _print_I   (midx: 0)
//tftdisp.c,86 :: 		print_F(60, 200, 2, Blue, Black, f, 1);
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- print_test_data_f_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_F_points <1> <- PUSH(R2)   (midx: 0)
	FARG_print_F_value <4> <- PUSH(R1)   (midx: 0)
	FARG_print_F_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 31   (midx: 0)
	R2 <1> <- 2   (midx: 0)
	R1 <1> <- 200   (midx: 0)
	R0 <1> <- 60   (midx: 0)
	CALL _print_F   (midx: 0)
//tftdisp.c,88 :: 		print_C(120, 140, 3, Red, Black, c);
	R1 <2> <- print_test_data_c_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_C_value <2> <- PUSH(R1)   (midx: 0)
	FARG_print_C_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 63488   (midx: 0)
	R2 <1> <- 3   (midx: 0)
	R1 <1> <- 140   (midx: 0)
	R0 <1> <- 120   (midx: 0)
	CALL _print_C   (midx: 0)
//tftdisp.c,89 :: 		print_I(120, 174, 3, Green, Black, i);
	R1 <2> <- print_test_data_i_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_I_value <2> <- PUSH(R1)   (midx: 0)
	FARG_print_I_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 2016   (midx: 0)
	R2 <1> <- 3   (midx: 0)
	R1 <1> <- 174   (midx: 0)
	R0 <1> <- 120   (midx: 0)
	CALL _print_I   (midx: 0)
//tftdisp.c,90 :: 		print_F(120, 210, 3, Blue, Black, f, 1);
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- print_test_data_f_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_F_points <1> <- PUSH(R2)   (midx: 0)
	FARG_print_F_value <4> <- PUSH(R1)   (midx: 0)
	FARG_print_F_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 31   (midx: 0)
	R2 <1> <- 3   (midx: 0)
	R1 <1> <- 210   (midx: 0)
	R0 <1> <- 120   (midx: 0)
	CALL _print_F   (midx: 0)
//tftdisp.c,92 :: 		c++;
	R0 <1> <- print_test_data_c_L0   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	print_test_data_c_L0 <1> <- R0   (midx: 0)
//tftdisp.c,93 :: 		i++;
	R0 <2> <- print_test_data_i_L0   (midx: 0)
	R0 <2> <-  R0 + 1   (midx: 1)
	print_test_data_i_L0 <2> <- R0   (midx: 0)
//tftdisp.c,94 :: 		f += 0.1;
	R2 <4> <- print_test_data_f_L0   (midx: 0)
	R0 <4> <- 1.000000E-001   (midx: 0)
	R0 <4> <-  R2 + R0   (midx: 9)
	print_test_data_f_L0 <4> <- R0   (midx: 0)
//tftdisp.c,96 :: 		delay_ms(45);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//tftdisp.c,78 :: 		for(s = 0; s < 250; s++)
	R0 <1> <- print_test_data_s_L0   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	print_test_data_s_L0 <1> <- R0   (midx: 0)
//tftdisp.c,97 :: 		}
	goto	154   (midx: 0)
155:   (midx: 0)
//tftdisp.c,98 :: 		TFT_fill(White);
	R0 <2> <- 65535   (midx: 0)
	CALL _TFT_fill   (midx: 0)
  end
   (midx: 0)
_print_image:
  begin   (midx: 0)
//tftdisp.c,102 :: 		void print_image()
_print_image:
  begin   (midx: 0)
//tftdisp.c,104 :: 		Draw_BMP(16, 20, 285, 200, gImage_test);
	R0 <4> <- #_gImage_test   (midx: 0)
	FARG_Draw_BMP_bitmap <4> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 200   (midx: 0)
	R2 <2> <- 285   (midx: 0)
	R1 <2> <- 20   (midx: 0)
	R0 <2> <- 16   (midx: 0)
	CALL _Draw_BMP   (midx: 0)
//tftdisp.c,105 :: 		delay_ms(6000);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//tftdisp.c,106 :: 		TFT_fill(Black);
	R0 <2> <- 0   (midx: 0)
	CALL _TFT_fill   (midx: 0)
  end
   (midx: 0)
_main:
  begin   (midx: 0)
//tftdisp.c,13 :: 		void main()
_main:
  begin   (midx: 0)
//tftdisp.c,15 :: 		setup_MCU();
	CALL _setup_MCU   (midx: 0)
//tftdisp.c,17 :: 		test_RGB();
	CALL _test_RGB   (midx: 0)
//tftdisp.c,18 :: 		draw_flag();
	CALL _draw_flag   (midx: 0)
//tftdisp.c,19 :: 		print_test_data();
	CALL _print_test_data   (midx: 0)
//tftdisp.c,20 :: 		print_image();
	CALL _print_image   (midx: 0)
//tftdisp.c,21 :: 		print_str(10, 10, 2, White, Black, "Draw Check");
	?lstr1_tftdisp <-initialize(0)   (midx: 0)
	R0 <4> <- addr(?lstr1_tftdisp)   (midx: 0)
	R1 <4> <- R0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	FARG_print_str_ch <4> <- PUSH(R1)   (midx: 0)
	FARG_print_str_back_colour <2> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 65535   (midx: 0)
	R2 <1> <- 2   (midx: 0)
	R1 <1> <- 10   (midx: 0)
	R0 <1> <- 10   (midx: 0)
	CALL _print_str   (midx: 0)
//tftdisp.c,23 :: 		while(1)
147:   (midx: 0)
//tftdisp.c,25 :: 		if(TP_INT_pin == 0)
	R1 <4> <- addr(GPIOC_IDRbits+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 149   (midx: 21)
//tftdisp.c,27 :: 		TP_read_coordinates(&tpx, &tpy);
	R1 <4> <- #_tpy   (midx: 0)
	R0 <4> <- #_tpx   (midx: 0)
	CALL _TP_read_coordinates   (midx: 0)
//tftdisp.c,28 :: 		Draw_Pixel(tpx, tpy, White);
	R0 <4> <- addr(_tpy)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_tpx)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R2 <2> <- 65535   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _Draw_Pixel   (midx: 0)
//tftdisp.c,29 :: 		}
149:   (midx: 0)
//tftdisp.c,30 :: 		};
	goto	147   (midx: 0)
  end
   (midx: 0)
