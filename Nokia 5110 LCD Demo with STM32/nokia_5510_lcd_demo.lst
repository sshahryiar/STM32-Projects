;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11-Dec-15 12:18:07 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x4FFC2000  	536891388
0x0004	0x19090000  	6409
0x0008	0x18110000  	6161
0x000C	0x18110000  	6161
0x0010	0x18110000  	6161
0x0014	0x18110000  	6161
0x0018	0x18110000  	6161
0x001C	0x18110000  	6161
0x0020	0x18110000  	6161
0x0024	0x18110000  	6161
0x0028	0x18110000  	6161
0x002C	0x18110000  	6161
0x0030	0x18110000  	6161
0x0034	0x18110000  	6161
0x0038	0x18110000  	6161
0x003C	0x18110000  	6161
0x0040	0x18110000  	6161
0x0044	0x18110000  	6161
0x0048	0x18110000  	6161
0x004C	0x18110000  	6161
0x0050	0x18110000  	6161
0x0054	0x18110000  	6161
0x0058	0x18110000  	6161
0x005C	0x18110000  	6161
0x0060	0x18110000  	6161
0x0064	0x18110000  	6161
0x0068	0x18110000  	6161
0x006C	0x18110000  	6161
0x0070	0x18110000  	6161
0x0074	0x18110000  	6161
0x0078	0x18110000  	6161
0x007C	0x18110000  	6161
0x0080	0x18110000  	6161
0x0084	0x18110000  	6161
0x0088	0x18110000  	6161
0x008C	0x18110000  	6161
0x0090	0x18110000  	6161
0x0094	0x18110000  	6161
0x0098	0x18110000  	6161
0x009C	0x18110000  	6161
0x00A0	0x18110000  	6161
0x00A4	0x18110000  	6161
0x00A8	0x18110000  	6161
0x00AC	0x18110000  	6161
0x00B0	0x18110000  	6161
0x00B4	0x18110000  	6161
0x00B8	0x18110000  	6161
0x00BC	0x18110000  	6161
0x00C0	0x18110000  	6161
0x00C4	0x18110000  	6161
0x00C8	0x18110000  	6161
0x00CC	0x18110000  	6161
0x00D0	0x18110000  	6161
0x00D4	0x18110000  	6161
0x00D8	0x18110000  	6161
0x00DC	0x18110000  	6161
0x00E0	0x18110000  	6161
0x00E4	0x18110000  	6161
0x00E8	0x18110000  	6161
0x00EC	0x18110000  	6161
0x00F0	0x18110000  	6161
0x00F4	0x18110000  	6161
0x00F8	0x18110000  	6161
0x00FC	0x18110000  	6161
0x0100	0x18110000  	6161
0x0104	0x18110000  	6161
0x0108	0x18110000  	6161
0x010C	0x18110000  	6161
0x0110	0x18110000  	6161
0x0114	0x18110000  	6161
0x0118	0x18110000  	6161
0x011C	0x18110000  	6161
0x0120	0x18110000  	6161
0x0124	0x18110000  	6161
0x0128	0x18110000  	6161
0x012C	0x18110000  	6161
; end of ____SysVT
_main:
;nokia_5510_lcd_demo.c, 8 :: 		void main()
0x1908	0xB083    SUB	SP, SP, #12
0x190A	0xF7FFFF85  BL	6168
0x190E	0xF000FC21  BL	8532
0x1912	0xF7FFFF73  BL	6140
0x1916	0xF000FBDD  BL	8404
;nokia_5510_lcd_demo.c, 10 :: 		unsigned char g = 0;
;nokia_5510_lcd_demo.c, 14 :: 		signed char c = -9;
0x191A	0xF10D0B04  ADD	R11, SP, #4
0x191E	0xF10B0A08  ADD	R10, R11, #8
0x1922	0xF8DFC388  LDR	R12, [PC, #904]
0x1926	0xF7FFFC63  BL	___CC2DW+0
;nokia_5510_lcd_demo.c, 15 :: 		signed int i = -66;
;nokia_5510_lcd_demo.c, 16 :: 		float f = -0.04;
;nokia_5510_lcd_demo.c, 18 :: 		setup();
0x192A	0xF7FFFC41  BL	_setup+0
;nokia_5510_lcd_demo.c, 20 :: 		PCD8544_backlight_state(ON);
0x192E	0x2001    MOVS	R0, #1
0x1930	0xF7FFFC4A  BL	_PCD8544_backlight_state+0
;nokia_5510_lcd_demo.c, 21 :: 		PCD8544_print_image(mikro_bmp);
0x1934	0x48DE    LDR	R0, [PC, #888]
0x1936	0xF7FFFEA7  BL	_PCD8544_print_image+0
;nokia_5510_lcd_demo.c, 22 :: 		delay_ms(2000);
0x193A	0xF24357FF  MOVW	R7, #13823
0x193E	0xF2C0176E  MOVT	R7, #366
L_main208:
0x1942	0x1E7F    SUBS	R7, R7, #1
0x1944	0xD1FD    BNE	L_main208
0x1946	0xBF00    NOP
0x1948	0xBF00    NOP
0x194A	0xBF00    NOP
0x194C	0xBF00    NOP
0x194E	0xBF00    NOP
;nokia_5510_lcd_demo.c, 24 :: 		PCD8544_backlight_state(OFF);
0x1950	0x2000    MOVS	R0, #0
0x1952	0xF7FFFC39  BL	_PCD8544_backlight_state+0
;nokia_5510_lcd_demo.c, 25 :: 		delay_ms(2000);
0x1956	0xF24357FF  MOVW	R7, #13823
0x195A	0xF2C0176E  MOVT	R7, #366
0x195E	0xBF00    NOP
0x1960	0xBF00    NOP
L_main210:
0x1962	0x1E7F    SUBS	R7, R7, #1
0x1964	0xD1FD    BNE	L_main210
0x1966	0xBF00    NOP
0x1968	0xBF00    NOP
0x196A	0xBF00    NOP
;nokia_5510_lcd_demo.c, 27 :: 		PCD8544_clear_screen(WHITE);
0x196C	0x2001    MOVS	R0, #1
0x196E	0xF7FFF80B  BL	_PCD8544_clear_screen+0
;nokia_5510_lcd_demo.c, 29 :: 		PCD8544_backlight_state(ON);
0x1972	0x2001    MOVS	R0, #1
0x1974	0xF7FFFC28  BL	_PCD8544_backlight_state+0
;nokia_5510_lcd_demo.c, 30 :: 		Draw_Rectangle(2, 2, 81, 45, OFF, BLACK);
0x1978	0x2100    MOVS	R1, #0
0x197A	0x2000    MOVS	R0, #0
0x197C	0xB402    PUSH	(R1)
0x197E	0xB401    PUSH	(R0)
0x1980	0x232D    MOVS	R3, #45
0x1982	0xB21B    SXTH	R3, R3
0x1984	0x2251    MOVS	R2, #81
0x1986	0xB212    SXTH	R2, R2
0x1988	0x2102    MOVS	R1, #2
0x198A	0xB209    SXTH	R1, R1
0x198C	0x2002    MOVS	R0, #2
0x198E	0xB200    SXTH	R0, R0
0x1990	0xF7FFFE94  BL	_Draw_Rectangle+0
0x1994	0xB002    ADD	SP, SP, #8
;nokia_5510_lcd_demo.c, 31 :: 		delay_ms(200);
0x1996	0xF64967FF  MOVW	R7, #40703
0x199A	0xF2C00724  MOVT	R7, #36
0x199E	0xBF00    NOP
0x19A0	0xBF00    NOP
L_main212:
0x19A2	0x1E7F    SUBS	R7, R7, #1
0x19A4	0xD1FD    BNE	L_main212
0x19A6	0xBF00    NOP
0x19A8	0xBF00    NOP
0x19AA	0xBF00    NOP
;nokia_5510_lcd_demo.c, 33 :: 		Draw_Circle(6, 6, 2, ON, BLACK);
0x19AC	0x2000    MOVS	R0, #0
0x19AE	0xB401    PUSH	(R0)
0x19B0	0x2301    MOVS	R3, #1
0x19B2	0x2202    MOVS	R2, #2
0x19B4	0xB212    SXTH	R2, R2
0x19B6	0x2106    MOVS	R1, #6
0x19B8	0xB209    SXTH	R1, R1
0x19BA	0x2006    MOVS	R0, #6
0x19BC	0xB200    SXTH	R0, R0
0x19BE	0xF7FFFC3F  BL	_Draw_Circle+0
0x19C2	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 34 :: 		delay_ms(200);
0x19C4	0xF64967FF  MOVW	R7, #40703
0x19C8	0xF2C00724  MOVT	R7, #36
0x19CC	0xBF00    NOP
0x19CE	0xBF00    NOP
L_main214:
0x19D0	0x1E7F    SUBS	R7, R7, #1
0x19D2	0xD1FD    BNE	L_main214
0x19D4	0xBF00    NOP
0x19D6	0xBF00    NOP
0x19D8	0xBF00    NOP
;nokia_5510_lcd_demo.c, 35 :: 		Draw_Circle(77, 6, 2, ON, BLACK);
0x19DA	0x2000    MOVS	R0, #0
0x19DC	0xB401    PUSH	(R0)
0x19DE	0x2301    MOVS	R3, #1
0x19E0	0x2202    MOVS	R2, #2
0x19E2	0xB212    SXTH	R2, R2
0x19E4	0x2106    MOVS	R1, #6
0x19E6	0xB209    SXTH	R1, R1
0x19E8	0x204D    MOVS	R0, #77
0x19EA	0xB200    SXTH	R0, R0
0x19EC	0xF7FFFC28  BL	_Draw_Circle+0
0x19F0	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 36 :: 		delay_ms(200);
0x19F2	0xF64967FF  MOVW	R7, #40703
0x19F6	0xF2C00724  MOVT	R7, #36
L_main216:
0x19FA	0x1E7F    SUBS	R7, R7, #1
0x19FC	0xD1FD    BNE	L_main216
0x19FE	0xBF00    NOP
0x1A00	0xBF00    NOP
0x1A02	0xBF00    NOP
0x1A04	0xBF00    NOP
0x1A06	0xBF00    NOP
;nokia_5510_lcd_demo.c, 37 :: 		Draw_Circle(77, 41, 2, ON, BLACK);
0x1A08	0x2000    MOVS	R0, #0
0x1A0A	0xB401    PUSH	(R0)
0x1A0C	0x2301    MOVS	R3, #1
0x1A0E	0x2202    MOVS	R2, #2
0x1A10	0xB212    SXTH	R2, R2
0x1A12	0x2129    MOVS	R1, #41
0x1A14	0xB209    SXTH	R1, R1
0x1A16	0x204D    MOVS	R0, #77
0x1A18	0xB200    SXTH	R0, R0
0x1A1A	0xF7FFFC11  BL	_Draw_Circle+0
0x1A1E	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 38 :: 		delay_ms(200);
0x1A20	0xF64967FF  MOVW	R7, #40703
0x1A24	0xF2C00724  MOVT	R7, #36
L_main218:
0x1A28	0x1E7F    SUBS	R7, R7, #1
0x1A2A	0xD1FD    BNE	L_main218
0x1A2C	0xBF00    NOP
0x1A2E	0xBF00    NOP
0x1A30	0xBF00    NOP
0x1A32	0xBF00    NOP
0x1A34	0xBF00    NOP
;nokia_5510_lcd_demo.c, 39 :: 		Draw_Circle(6, 41, 2, ON, BLACK);
0x1A36	0x2000    MOVS	R0, #0
0x1A38	0xB401    PUSH	(R0)
0x1A3A	0x2301    MOVS	R3, #1
0x1A3C	0x2202    MOVS	R2, #2
0x1A3E	0xB212    SXTH	R2, R2
0x1A40	0x2129    MOVS	R1, #41
0x1A42	0xB209    SXTH	R1, R1
0x1A44	0x2006    MOVS	R0, #6
0x1A46	0xB200    SXTH	R0, R0
0x1A48	0xF7FFFBFA  BL	_Draw_Circle+0
0x1A4C	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 40 :: 		delay_ms(200);
0x1A4E	0xF64967FF  MOVW	R7, #40703
0x1A52	0xF2C00724  MOVT	R7, #36
0x1A56	0xBF00    NOP
0x1A58	0xBF00    NOP
L_main220:
0x1A5A	0x1E7F    SUBS	R7, R7, #1
0x1A5C	0xD1FD    BNE	L_main220
0x1A5E	0xBF00    NOP
0x1A60	0xBF00    NOP
0x1A62	0xBF00    NOP
;nokia_5510_lcd_demo.c, 42 :: 		Draw_Line(2, 11, 10, 11, BLACK);
0x1A64	0x2000    MOVS	R0, #0
0x1A66	0xB401    PUSH	(R0)
0x1A68	0x230B    MOVS	R3, #11
0x1A6A	0xB21B    SXTH	R3, R3
0x1A6C	0x220A    MOVS	R2, #10
0x1A6E	0xB212    SXTH	R2, R2
0x1A70	0x210B    MOVS	R1, #11
0x1A72	0xB209    SXTH	R1, R1
0x1A74	0x2002    MOVS	R0, #2
0x1A76	0xB200    SXTH	R0, R0
0x1A78	0xF7FEFD20  BL	_Draw_Line+0
0x1A7C	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 43 :: 		Draw_Line(73, 11, 81, 11, BLACK);
0x1A7E	0x2000    MOVS	R0, #0
0x1A80	0xB401    PUSH	(R0)
0x1A82	0x230B    MOVS	R3, #11
0x1A84	0xB21B    SXTH	R3, R3
0x1A86	0x2251    MOVS	R2, #81
0x1A88	0xB212    SXTH	R2, R2
0x1A8A	0x210B    MOVS	R1, #11
0x1A8C	0xB209    SXTH	R1, R1
0x1A8E	0x2049    MOVS	R0, #73
0x1A90	0xB200    SXTH	R0, R0
0x1A92	0xF7FEFD13  BL	_Draw_Line+0
0x1A96	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 44 :: 		delay_ms(200);
0x1A98	0xF64967FF  MOVW	R7, #40703
0x1A9C	0xF2C00724  MOVT	R7, #36
L_main222:
0x1AA0	0x1E7F    SUBS	R7, R7, #1
0x1AA2	0xD1FD    BNE	L_main222
0x1AA4	0xBF00    NOP
0x1AA6	0xBF00    NOP
0x1AA8	0xBF00    NOP
0x1AAA	0xBF00    NOP
0x1AAC	0xBF00    NOP
;nokia_5510_lcd_demo.c, 45 :: 		Draw_Line(2, 36, 10, 36, BLACK);
0x1AAE	0x2000    MOVS	R0, #0
0x1AB0	0xB401    PUSH	(R0)
0x1AB2	0x2324    MOVS	R3, #36
0x1AB4	0xB21B    SXTH	R3, R3
0x1AB6	0x220A    MOVS	R2, #10
0x1AB8	0xB212    SXTH	R2, R2
0x1ABA	0x2124    MOVS	R1, #36
0x1ABC	0xB209    SXTH	R1, R1
0x1ABE	0x2002    MOVS	R0, #2
0x1AC0	0xB200    SXTH	R0, R0
0x1AC2	0xF7FEFCFB  BL	_Draw_Line+0
0x1AC6	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 46 :: 		Draw_Line(73, 36, 81, 36, BLACK);
0x1AC8	0x2000    MOVS	R0, #0
0x1ACA	0xB401    PUSH	(R0)
0x1ACC	0x2324    MOVS	R3, #36
0x1ACE	0xB21B    SXTH	R3, R3
0x1AD0	0x2251    MOVS	R2, #81
0x1AD2	0xB212    SXTH	R2, R2
0x1AD4	0x2124    MOVS	R1, #36
0x1AD6	0xB209    SXTH	R1, R1
0x1AD8	0x2049    MOVS	R0, #73
0x1ADA	0xB200    SXTH	R0, R0
0x1ADC	0xF7FEFCEE  BL	_Draw_Line+0
0x1AE0	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 47 :: 		delay_ms(200);
0x1AE2	0xF64967FF  MOVW	R7, #40703
0x1AE6	0xF2C00724  MOVT	R7, #36
L_main224:
0x1AEA	0x1E7F    SUBS	R7, R7, #1
0x1AEC	0xD1FD    BNE	L_main224
0x1AEE	0xBF00    NOP
0x1AF0	0xBF00    NOP
0x1AF2	0xBF00    NOP
0x1AF4	0xBF00    NOP
0x1AF6	0xBF00    NOP
;nokia_5510_lcd_demo.c, 48 :: 		Draw_Line(11, 45, 11, 2, BLACK);
0x1AF8	0x2000    MOVS	R0, #0
0x1AFA	0xB401    PUSH	(R0)
0x1AFC	0x2302    MOVS	R3, #2
0x1AFE	0xB21B    SXTH	R3, R3
0x1B00	0x220B    MOVS	R2, #11
0x1B02	0xB212    SXTH	R2, R2
0x1B04	0x212D    MOVS	R1, #45
0x1B06	0xB209    SXTH	R1, R1
0x1B08	0x200B    MOVS	R0, #11
0x1B0A	0xB200    SXTH	R0, R0
0x1B0C	0xF7FEFCD6  BL	_Draw_Line+0
0x1B10	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 49 :: 		Draw_Line(72, 45, 72, 2, BLACK);
0x1B12	0x2000    MOVS	R0, #0
0x1B14	0xB401    PUSH	(R0)
0x1B16	0x2302    MOVS	R3, #2
0x1B18	0xB21B    SXTH	R3, R3
0x1B1A	0x2248    MOVS	R2, #72
0x1B1C	0xB212    SXTH	R2, R2
0x1B1E	0x212D    MOVS	R1, #45
0x1B20	0xB209    SXTH	R1, R1
0x1B22	0x2048    MOVS	R0, #72
0x1B24	0xB200    SXTH	R0, R0
0x1B26	0xF7FEFCC9  BL	_Draw_Line+0
0x1B2A	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 50 :: 		delay_ms(200);
0x1B2C	0xF64967FF  MOVW	R7, #40703
0x1B30	0xF2C00724  MOVT	R7, #36
0x1B34	0xBF00    NOP
0x1B36	0xBF00    NOP
L_main226:
0x1B38	0x1E7F    SUBS	R7, R7, #1
0x1B3A	0xD1FD    BNE	L_main226
0x1B3C	0xBF00    NOP
0x1B3E	0xBF00    NOP
0x1B40	0xBF00    NOP
;nokia_5510_lcd_demo.c, 52 :: 		PCD8544_backlight_state(OFF);
0x1B42	0x2000    MOVS	R0, #0
0x1B44	0xF7FFFB40  BL	_PCD8544_backlight_state+0
;nokia_5510_lcd_demo.c, 53 :: 		delay_ms(400);
0x1B48	0xF64357FF  MOVW	R7, #15871
0x1B4C	0xF2C00749  MOVT	R7, #73
L_main228:
0x1B50	0x1E7F    SUBS	R7, R7, #1
0x1B52	0xD1FD    BNE	L_main228
0x1B54	0xBF00    NOP
0x1B56	0xBF00    NOP
0x1B58	0xBF00    NOP
0x1B5A	0xBF00    NOP
0x1B5C	0xBF00    NOP
;nokia_5510_lcd_demo.c, 55 :: 		PCD8544_backlight_state(ON);
0x1B5E	0x2001    MOVS	R0, #1
0x1B60	0xF7FFFB32  BL	_PCD8544_backlight_state+0
;nokia_5510_lcd_demo.c, 57 :: 		for(g = 0; g <= 9; g++)
; g start address is: 40 (R10)
0x1B64	0xF2400A00  MOVW	R10, #0
; g end address is: 40 (R10)
0x1B68	0xFA5FF78A  UXTB	R7, R10
L_main230:
; g start address is: 28 (R7)
0x1B6C	0x2F09    CMP	R7, #9
0x1B6E	0xD823    BHI	L_main231
;nokia_5510_lcd_demo.c, 59 :: 		PCD8544_set_cursor((18 + (g * 5)), 2);
0x1B70	0x2005    MOVS	R0, #5
0x1B72	0xB200    SXTH	R0, R0
0x1B74	0x4378    MULS	R0, R7, R0
0x1B76	0xB200    SXTH	R0, R0
0x1B78	0x3012    ADDS	R0, #18
0x1B7A	0x2102    MOVS	R1, #2
0x1B7C	0xB2C0    UXTB	R0, R0
0x1B7E	0xF7FEFAD7  BL	_PCD8544_set_cursor+0
;nokia_5510_lcd_demo.c, 60 :: 		PCD8544_print_char(txt1[g], WHITE);
0x1B82	0x484C    LDR	R0, [PC, #304]
0x1B84	0x19C0    ADDS	R0, R0, R7
0x1B86	0x7800    LDRB	R0, [R0, #0]
0x1B88	0x2101    MOVS	R1, #1
0x1B8A	0xF7FEFAE5  BL	_PCD8544_print_char+0
;nokia_5510_lcd_demo.c, 61 :: 		delay_ms(90);
0x1B8E	0xF88D7000  STRB	R7, [SP, #0]
0x1B92	0xF64727BF  MOVW	R7, #31423
0x1B96	0xF2C00710  MOVT	R7, #16
L_main233:
0x1B9A	0x1E7F    SUBS	R7, R7, #1
0x1B9C	0xD1FD    BNE	L_main233
0x1B9E	0xBF00    NOP
0x1BA0	0xBF00    NOP
0x1BA2	0xBF00    NOP
0x1BA4	0xBF00    NOP
0x1BA6	0xBF00    NOP
0x1BA8	0xF89D7000  LDRB	R7, [SP, #0]
;nokia_5510_lcd_demo.c, 57 :: 		for(g = 0; g <= 9; g++)
0x1BAC	0x1C78    ADDS	R0, R7, #1
; g end address is: 28 (R7)
; g start address is: 40 (R10)
0x1BAE	0xFA5FFA80  UXTB	R10, R0
;nokia_5510_lcd_demo.c, 62 :: 		}
0x1BB2	0xFA5FF78A  UXTB	R7, R10
; g end address is: 40 (R10)
0x1BB6	0xE7D9    B	L_main230
L_main231:
;nokia_5510_lcd_demo.c, 64 :: 		for(g = 0; g <= 9; g++)
; g start address is: 28 (R7)
0x1BB8	0x2700    MOVS	R7, #0
; g end address is: 28 (R7)
L_main235:
; g start address is: 28 (R7)
0x1BBA	0x2F09    CMP	R7, #9
0x1BBC	0xD820    BHI	L_main236
;nokia_5510_lcd_demo.c, 66 :: 		PCD8544_set_cursor((18 + (g * 5)), 3);
0x1BBE	0x2005    MOVS	R0, #5
0x1BC0	0xB200    SXTH	R0, R0
0x1BC2	0x4378    MULS	R0, R7, R0
0x1BC4	0xB200    SXTH	R0, R0
0x1BC6	0x3012    ADDS	R0, #18
0x1BC8	0x2103    MOVS	R1, #3
0x1BCA	0xB2C0    UXTB	R0, R0
0x1BCC	0xF7FEFAB0  BL	_PCD8544_set_cursor+0
;nokia_5510_lcd_demo.c, 67 :: 		PCD8544_print_char(txt2[g], WHITE);
0x1BD0	0x4839    LDR	R0, [PC, #228]
0x1BD2	0x19C0    ADDS	R0, R0, R7
0x1BD4	0x7800    LDRB	R0, [R0, #0]
0x1BD6	0x2101    MOVS	R1, #1
0x1BD8	0xF7FEFABE  BL	_PCD8544_print_char+0
;nokia_5510_lcd_demo.c, 68 :: 		delay_ms(90);
0x1BDC	0xF88D7000  STRB	R7, [SP, #0]
0x1BE0	0xF64727BF  MOVW	R7, #31423
0x1BE4	0xF2C00710  MOVT	R7, #16
L_main238:
0x1BE8	0x1E7F    SUBS	R7, R7, #1
0x1BEA	0xD1FD    BNE	L_main238
0x1BEC	0xBF00    NOP
0x1BEE	0xBF00    NOP
0x1BF0	0xBF00    NOP
0x1BF2	0xBF00    NOP
0x1BF4	0xBF00    NOP
0x1BF6	0xF89D7000  LDRB	R7, [SP, #0]
;nokia_5510_lcd_demo.c, 64 :: 		for(g = 0; g <= 9; g++)
0x1BFA	0x1C78    ADDS	R0, R7, #1
; g end address is: 28 (R7)
; g start address is: 0 (R0)
;nokia_5510_lcd_demo.c, 69 :: 		}
0x1BFC	0xB2C7    UXTB	R7, R0
; g end address is: 0 (R0)
0x1BFE	0xE7DC    B	L_main235
L_main236:
;nokia_5510_lcd_demo.c, 70 :: 		delay_ms(4000);
0x1C00	0xF64637FF  MOVW	R7, #27647
0x1C04	0xF2C027DC  MOVT	R7, #732
L_main240:
0x1C08	0x1E7F    SUBS	R7, R7, #1
0x1C0A	0xD1FD    BNE	L_main240
0x1C0C	0xBF00    NOP
0x1C0E	0xBF00    NOP
0x1C10	0xBF00    NOP
0x1C12	0xBF00    NOP
0x1C14	0xBF00    NOP
;nokia_5510_lcd_demo.c, 72 :: 		PCD8544_clear_screen(WHITE);
0x1C16	0x2001    MOVS	R0, #1
0x1C18	0xF7FEFEB6  BL	_PCD8544_clear_screen+0
;nokia_5510_lcd_demo.c, 74 :: 		PCD8544_print_string(1, 2, "CHR:", WHITE);
0x1C1C	0x4827    LDR	R0, [PC, #156]
0x1C1E	0x2301    MOVS	R3, #1
0x1C20	0x4602    MOV	R2, R0
0x1C22	0x2102    MOVS	R1, #2
0x1C24	0x2001    MOVS	R0, #1
0x1C26	0xF7FEFB19  BL	_PCD8544_print_string+0
;nokia_5510_lcd_demo.c, 75 :: 		PCD8544_print_string(1, 3, "INT:", WHITE);
0x1C2A	0x4825    LDR	R0, [PC, #148]
0x1C2C	0x2301    MOVS	R3, #1
0x1C2E	0x4602    MOV	R2, R0
0x1C30	0x2103    MOVS	R1, #3
0x1C32	0x2001    MOVS	R0, #1
0x1C34	0xF7FEFB12  BL	_PCD8544_print_string+0
;nokia_5510_lcd_demo.c, 76 :: 		PCD8544_print_string(1, 4, "FLT:", WHITE);
0x1C38	0x4822    LDR	R0, [PC, #136]
0x1C3A	0x2301    MOVS	R3, #1
0x1C3C	0x4602    MOV	R2, R0
0x1C3E	0x2104    MOVS	R1, #4
0x1C40	0x2001    MOVS	R0, #1
0x1C42	0xF7FEFB0B  BL	_PCD8544_print_string+0
;nokia_5510_lcd_demo.c, 78 :: 		while(1)
L_main242:
;nokia_5510_lcd_demo.c, 80 :: 		print_chr(26, 2, c, WHITE);
0x1C46	0x2301    MOVS	R3, #1
0x1C48	0xF99D2004  LDRSB	R2, [SP, #4]
0x1C4C	0x2102    MOVS	R1, #2
0x1C4E	0x201A    MOVS	R0, #26
0x1C50	0xF7FFFC34  BL	_print_chr+0
;nokia_5510_lcd_demo.c, 81 :: 		print_int(26, 3, i, WHITE);
0x1C54	0x2301    MOVS	R3, #1
0x1C56	0xF9BD2006  LDRSH	R2, [SP, #6]
0x1C5A	0x2103    MOVS	R1, #3
0x1C5C	0x201A    MOVS	R0, #26
0x1C5E	0xF7FFF8A3  BL	_print_int+0
;nokia_5510_lcd_demo.c, 82 :: 		print_float(26, 4, f, 2, WHITE);
0x1C62	0x2001    MOVS	R0, #1
0x1C64	0xB401    PUSH	(R0)
0x1C66	0x2302    MOVS	R3, #2
0x1C68	0x9A03    LDR	R2, [SP, #12]
0x1C6A	0x2104    MOVS	R1, #4
0x1C6C	0x201A    MOVS	R0, #26
0x1C6E	0xF7FEFEE3  BL	_print_float+0
0x1C72	0xB001    ADD	SP, SP, #4
;nokia_5510_lcd_demo.c, 83 :: 		c++;
0x1C74	0xF99D0004  LDRSB	R0, [SP, #4]
0x1C78	0x1C40    ADDS	R0, R0, #1
0x1C7A	0xF88D0004  STRB	R0, [SP, #4]
;nokia_5510_lcd_demo.c, 84 :: 		i++;
0x1C7E	0xF9BD0006  LDRSH	R0, [SP, #6]
0x1C82	0x1C40    ADDS	R0, R0, #1
0x1C84	0xF8AD0006  STRH	R0, [SP, #6]
;nokia_5510_lcd_demo.c, 85 :: 		f += 0.01;
0x1C88	0x9A02    LDR	R2, [SP, #8]
0x1C8A	0x480F    LDR	R0, [PC, #60]
0x1C8C	0xF7FFF80C  BL	__Add_FP+0
0x1C90	0x9002    STR	R0, [SP, #8]
;nokia_5510_lcd_demo.c, 86 :: 		delay_ms(400);
0x1C92	0xF64357FF  MOVW	R7, #15871
0x1C96	0xF2C00749  MOVT	R7, #73
L_main244:
0x1C9A	0x1E7F    SUBS	R7, R7, #1
0x1C9C	0xD1FD    BNE	L_main244
0x1C9E	0xBF00    NOP
0x1CA0	0xBF00    NOP
0x1CA2	0xBF00    NOP
0x1CA4	0xBF00    NOP
0x1CA6	0xBF00    NOP
;nokia_5510_lcd_demo.c, 87 :: 		};
0x1CA8	0xE7CD    B	L_main242
;nokia_5510_lcd_demo.c, 88 :: 		}
L_end_main:
L__main_end_loop:
0x1CAA	0xE7FE    B	L__main_end_loop
0x1CAC	0x20CB0000  	?ICSmain_c_L0+0
0x1CB0	0x1CCC0000  	_mikro_bmp+0
0x1CB4	0x20C00000  	main_txt1_L0+0
0x1CB8	0x20B50000  	main_txt2_L0+0
0x1CBC	0x00002000  	?lstr2_nokia_5510_lcd_demo+0
0x1CC0	0x00052000  	?lstr3_nokia_5510_lcd_demo+0
0x1CC4	0x000A2000  	?lstr4_nokia_5510_lcd_demo+0
0x1CC8	0xD70A3C23  	#1008981770
; end of _main
___CC2DW:
;__Lib_System_101_102_103.c, 27 :: 		
0x11F0	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 29 :: 		
L_loopDW:
;__Lib_System_101_102_103.c, 30 :: 		
0x11F2	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_101_102_103.c, 31 :: 		
0x11F6	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_101_102_103.c, 32 :: 		
0x11FA	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 33 :: 		
0x11FE	0xD1F8    BNE	L_loopDW
;__Lib_System_101_102_103.c, 35 :: 		
L_end___CC2DW:
0x1200	0xB001    ADD	SP, SP, #4
0x1202	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_101_102_103.c, 69 :: 		
0x1204	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 71 :: 		
0x1206	0xF04F0900  MOV	R9, #0
;__Lib_System_101_102_103.c, 72 :: 		
0x120A	0xF04F0C00  MOV	R12, #0
;__Lib_System_101_102_103.c, 73 :: 		
0x120E	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_101_102_103.c, 74 :: 		
0x1212	0xDC04    BGT	L_loopFZs
;__Lib_System_101_102_103.c, 75 :: 		
0x1214	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_101_102_103.c, 76 :: 		
0x1218	0xDB01    BLT	L_loopFZs
;__Lib_System_101_102_103.c, 77 :: 		
0x121A	0x46D4    MOV	R12, R10
;__Lib_System_101_102_103.c, 78 :: 		
0x121C	0x46EA    MOV	R10, SP
;__Lib_System_101_102_103.c, 79 :: 		
L_loopFZs:
;__Lib_System_101_102_103.c, 80 :: 		
0x121E	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_101_102_103.c, 81 :: 		
0x1222	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 82 :: 		
0x1226	0xD1FA    BNE	L_loopFZs
;__Lib_System_101_102_103.c, 83 :: 		
0x1228	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_101_102_103.c, 84 :: 		
0x122C	0xDD05    BLE	L_norep
;__Lib_System_101_102_103.c, 85 :: 		
0x122E	0x46E2    MOV	R10, R12
;__Lib_System_101_102_103.c, 86 :: 		
0x1230	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_101_102_103.c, 87 :: 		
0x1234	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_101_102_103.c, 88 :: 		
0x1238	0xE7F1    B	L_loopFZs
;__Lib_System_101_102_103.c, 89 :: 		
L_norep:
;__Lib_System_101_102_103.c, 91 :: 		
L_end___FillZeros:
0x123A	0xB001    ADD	SP, SP, #4
0x123C	0x4770    BX	LR
; end of ___FillZeros
_setup:
;nokia_5510_lcd_demo.c, 91 :: 		void setup()
0x11B0	0xB081    SUB	SP, SP, #4
0x11B2	0xF8CDE000  STR	LR, [SP, #0]
;nokia_5510_lcd_demo.c, 93 :: 		PCD8544_init();
0x11B6	0xF7FFFC11  BL	_PCD8544_init+0
;nokia_5510_lcd_demo.c, 94 :: 		PCD8544_clear_screen(WHITE);
0x11BA	0x2001    MOVS	R0, #1
0x11BC	0xF7FFFBE4  BL	_PCD8544_clear_screen+0
;nokia_5510_lcd_demo.c, 95 :: 		}
L_end_setup:
0x11C0	0xF8DDE000  LDR	LR, [SP, #0]
0x11C4	0xB001    ADD	SP, SP, #4
0x11C6	0x4770    BX	LR
; end of _setup
_PCD8544_init:
;pcd8544.c, 71 :: 		void PCD8544_init()
0x09DC	0xB081    SUB	SP, SP, #4
0x09DE	0xF8CDE000  STR	LR, [SP, #0]
;pcd8544.c, 73 :: 		setup_LCD_GPIOs();
0x09E2	0xF7FFFC8D  BL	_setup_LCD_GPIOs+0
;pcd8544.c, 74 :: 		PCD8544_reset();
0x09E6	0xF7FFFC6F  BL	_PCD8544_reset+0
;pcd8544.c, 75 :: 		PCD8544_write(CMD, (PCD8544_extended_instruction | PCD8544_function_set));
0x09EA	0x2121    MOVS	R1, #33
0x09EC	0x2000    MOVS	R0, #0
0x09EE	0xF7FFFBEF  BL	_PCD8544_write+0
;pcd8544.c, 76 :: 		PCD8544_write(CMD, (PCD8544_set_bias | 0x02));
0x09F2	0x2112    MOVS	R1, #18
0x09F4	0x2000    MOVS	R0, #0
0x09F6	0xF7FFFBEB  BL	_PCD8544_write+0
;pcd8544.c, 77 :: 		PCD8544_set_contrast(0x39);
0x09FA	0x2039    MOVS	R0, #57
0x09FC	0xF7FFFBCE  BL	_PCD8544_set_contrast+0
;pcd8544.c, 78 :: 		PCD8544_write(CMD, PCD8544_set_temp);
0x0A00	0x2104    MOVS	R1, #4
0x0A02	0x2000    MOVS	R0, #0
0x0A04	0xF7FFFBE4  BL	_PCD8544_write+0
;pcd8544.c, 79 :: 		PCD8544_write(CMD, (PCD8544_display_normal | PCD8544_display_control));
0x0A08	0x210C    MOVS	R1, #12
0x0A0A	0x2000    MOVS	R0, #0
0x0A0C	0xF7FFFBE0  BL	_PCD8544_write+0
;pcd8544.c, 80 :: 		PCD8544_write(CMD, PCD8544_function_set);
0x0A10	0x2120    MOVS	R1, #32
0x0A12	0x2000    MOVS	R0, #0
0x0A14	0xF7FFFBDC  BL	_PCD8544_write+0
;pcd8544.c, 81 :: 		PCD8544_write(CMD, PCD8544_display_all_on);
0x0A18	0x2101    MOVS	R1, #1
0x0A1A	0x2000    MOVS	R0, #0
0x0A1C	0xF7FFFBD8  BL	_PCD8544_write+0
;pcd8544.c, 82 :: 		PCD8544_write(CMD, PCD8544_display_normal);
0x0A20	0x2104    MOVS	R1, #4
0x0A22	0x2000    MOVS	R0, #0
0x0A24	0xF7FFFBD4  BL	_PCD8544_write+0
;pcd8544.c, 83 :: 		PCD8544_clear_buffer(OFF);
0x0A28	0x2000    MOVS	R0, #0
0x0A2A	0xF7FFFC37  BL	_PCD8544_clear_buffer+0
;pcd8544.c, 84 :: 		}
L_end_PCD8544_init:
0x0A2E	0xF8DDE000  LDR	LR, [SP, #0]
0x0A32	0xB001    ADD	SP, SP, #4
0x0A34	0x4770    BX	LR
; end of _PCD8544_init
_setup_LCD_GPIOs:
;pcd8544.c, 4 :: 		void setup_LCD_GPIOs()
;pcd8544.c, 6 :: 		enable_GPIOB(true);
0x0300	0x2101    MOVS	R1, #1
0x0302	0x483F    LDR	R0, [PC, #252]
0x0304	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 8 :: 		setup_GPIOB(BL_pin, (output_mode_high_speed | GPIO_PP_output));
0x0306	0x483F    LDR	R0, [PC, #252]
0x0308	0x6801    LDR	R1, [R0, #0]
0x030A	0xF06F000F  MVN	R0, #15
0x030E	0x4001    ANDS	R1, R0
0x0310	0x483C    LDR	R0, [PC, #240]
0x0312	0x6001    STR	R1, [R0, #0]
0x0314	0x483B    LDR	R0, [PC, #236]
0x0316	0x6800    LDR	R0, [R0, #0]
0x0318	0xF0400103  ORR	R1, R0, #3
0x031C	0x4839    LDR	R0, [PC, #228]
0x031E	0x6001    STR	R1, [R0, #0]
L_setup_LCD_GPIOs9:
;pcd8544.c, 9 :: 		setup_GPIOB(CE_pin, (output_mode_high_speed | GPIO_PP_output));
0x0320	0x4838    LDR	R0, [PC, #224]
0x0322	0x6801    LDR	R1, [R0, #0]
0x0324	0xF06F6070  MVN	R0, #251658240
0x0328	0x4001    ANDS	R1, R0
0x032A	0x4836    LDR	R0, [PC, #216]
0x032C	0x6001    STR	R1, [R0, #0]
0x032E	0x4835    LDR	R0, [PC, #212]
0x0330	0x6800    LDR	R0, [R0, #0]
0x0332	0xF0407140  ORR	R1, R0, #50331648
0x0336	0x4833    LDR	R0, [PC, #204]
0x0338	0x6001    STR	R1, [R0, #0]
L_setup_LCD_GPIOs22:
;pcd8544.c, 10 :: 		setup_GPIOB(RST_pin, (output_mode_high_speed | GPIO_PP_output));
0x033A	0x4832    LDR	R0, [PC, #200]
0x033C	0x6801    LDR	R1, [R0, #0]
0x033E	0xF46F0070  MVN	R0, #15728640
0x0342	0x4001    ANDS	R1, R0
0x0344	0x482F    LDR	R0, [PC, #188]
0x0346	0x6001    STR	R1, [R0, #0]
0x0348	0x482E    LDR	R0, [PC, #184]
0x034A	0x6800    LDR	R0, [R0, #0]
0x034C	0xF4401140  ORR	R1, R0, #3145728
0x0350	0x482C    LDR	R0, [PC, #176]
0x0352	0x6001    STR	R1, [R0, #0]
L_setup_LCD_GPIOs35:
;pcd8544.c, 11 :: 		setup_GPIOB(DC_pin, (output_mode_high_speed | GPIO_PP_output));
0x0354	0x482B    LDR	R0, [PC, #172]
0x0356	0x6801    LDR	R1, [R0, #0]
0x0358	0xF06F4070  MVN	R0, #-268435456
0x035C	0x4001    ANDS	R1, R0
0x035E	0x4829    LDR	R0, [PC, #164]
0x0360	0x6001    STR	R1, [R0, #0]
0x0362	0x4828    LDR	R0, [PC, #160]
0x0364	0x6800    LDR	R0, [R0, #0]
0x0366	0xF0405140  ORR	R1, R0, #805306368
0x036A	0x4826    LDR	R0, [PC, #152]
0x036C	0x6001    STR	R1, [R0, #0]
L_setup_LCD_GPIOs48:
;pcd8544.c, 12 :: 		setup_GPIOB(SDO_pin, (output_mode_high_speed | GPIO_PP_output));
L_setup_LCD_GPIOs55:
0x036E	0x4826    LDR	R0, [PC, #152]
0x0370	0x6801    LDR	R1, [R0, #0]
0x0372	0xF06F000F  MVN	R0, #15
0x0376	0x4001    ANDS	R1, R0
0x0378	0x4823    LDR	R0, [PC, #140]
0x037A	0x6001    STR	R1, [R0, #0]
0x037C	0x4822    LDR	R0, [PC, #136]
0x037E	0x6800    LDR	R0, [R0, #0]
0x0380	0xF0400103  ORR	R1, R0, #3
0x0384	0x4820    LDR	R0, [PC, #128]
0x0386	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 13 :: 		setup_GPIOB(SCK_pin, (output_mode_high_speed | GPIO_PP_output));
L_setup_LCD_GPIOs66:
0x0388	0x481F    LDR	R0, [PC, #124]
0x038A	0x6800    LDR	R0, [R0, #0]
0x038C	0xF000010F  AND	R1, R0, #15
0x0390	0x481D    LDR	R0, [PC, #116]
0x0392	0x6001    STR	R1, [R0, #0]
0x0394	0x481C    LDR	R0, [PC, #112]
0x0396	0x6800    LDR	R0, [R0, #0]
0x0398	0xF0400130  ORR	R1, R0, #48
0x039C	0x481A    LDR	R0, [PC, #104]
0x039E	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 15 :: 		GPIOB_pin_high(BL_pin);
0x03A0	0x481A    LDR	R0, [PC, #104]
0x03A2	0x6800    LDR	R0, [R0, #0]
0x03A4	0xF0400101  ORR	R1, R0, #1
0x03A8	0x4818    LDR	R0, [PC, #96]
0x03AA	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 16 :: 		GPIOB_pin_high(CE_pin);
0x03AC	0x4817    LDR	R0, [PC, #92]
0x03AE	0x6800    LDR	R0, [R0, #0]
0x03B0	0xF0400140  ORR	R1, R0, #64
0x03B4	0x4815    LDR	R0, [PC, #84]
0x03B6	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 17 :: 		GPIOB_pin_high(DC_pin);
0x03B8	0x4814    LDR	R0, [PC, #80]
0x03BA	0x6800    LDR	R0, [R0, #0]
0x03BC	0xF0400180  ORR	R1, R0, #128
0x03C0	0x4812    LDR	R0, [PC, #72]
0x03C2	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 18 :: 		GPIOB_pin_low(RST_pin);
0x03C4	0x4812    LDR	R0, [PC, #72]
0x03C6	0x6800    LDR	R0, [R0, #0]
0x03C8	0xF0400120  ORR	R1, R0, #32
0x03CC	0x4810    LDR	R0, [PC, #64]
0x03CE	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 19 :: 		GPIOB_pin_low(SDO_pin);
0x03D0	0x480F    LDR	R0, [PC, #60]
0x03D2	0x6800    LDR	R0, [R0, #0]
0x03D4	0xF4407180  ORR	R1, R0, #256
0x03D8	0x480D    LDR	R0, [PC, #52]
0x03DA	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 20 :: 		GPIOB_pin_low(SCK_pin);
0x03DC	0x480C    LDR	R0, [PC, #48]
0x03DE	0x6800    LDR	R0, [R0, #0]
0x03E0	0xF4407100  ORR	R1, R0, #512
0x03E4	0x480A    LDR	R0, [PC, #40]
0x03E6	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 22 :: 		delay_ms(10);
0x03E8	0xF24D47BF  MOVW	R7, #54463
0x03EC	0xF2C00701  MOVT	R7, #1
L_setup_LCD_GPIOs74:
0x03F0	0x1E7F    SUBS	R7, R7, #1
0x03F2	0xD1FD    BNE	L_setup_LCD_GPIOs74
0x03F4	0xBF00    NOP
0x03F6	0xBF00    NOP
0x03F8	0xBF00    NOP
0x03FA	0xBF00    NOP
0x03FC	0xBF00    NOP
;pcd8544.c, 23 :: 		}
L_end_setup_LCD_GPIOs:
0x03FE	0x4770    BX	LR
0x0400	0x030C4242  	RCC_APB2ENRbits+0
0x0404	0x0C004001  	GPIOB_CRL+0
0x0408	0x0C044001  	GPIOB_CRH+0
0x040C	0x0C104001  	GPIOB_BSRR+0
0x0410	0x0C144001  	GPIOB_BRR+0
; end of _setup_LCD_GPIOs
_PCD8544_reset:
;pcd8544.c, 63 :: 		void PCD8544_reset()
;pcd8544.c, 65 :: 		GPIOB_pin_low(RST_pin);
0x02C8	0x480B    LDR	R0, [PC, #44]
0x02CA	0x6800    LDR	R0, [R0, #0]
0x02CC	0xF0400120  ORR	R1, R0, #32
0x02D0	0x4809    LDR	R0, [PC, #36]
0x02D2	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 66 :: 		delay_us(100);
0x02D4	0xF24047AF  MOVW	R7, #1199
0x02D8	0xF2C00700  MOVT	R7, #0
0x02DC	0xBF00    NOP
0x02DE	0xBF00    NOP
L_PCD8544_reset82:
0x02E0	0x1E7F    SUBS	R7, R7, #1
0x02E2	0xD1FD    BNE	L_PCD8544_reset82
0x02E4	0xBF00    NOP
0x02E6	0xBF00    NOP
0x02E8	0xBF00    NOP
;pcd8544.c, 67 :: 		GPIOB_pin_high(RST_pin);
0x02EA	0x4804    LDR	R0, [PC, #16]
0x02EC	0x6800    LDR	R0, [R0, #0]
0x02EE	0xF0400120  ORR	R1, R0, #32
0x02F2	0x4802    LDR	R0, [PC, #8]
0x02F4	0x6001    STR	R1, [R0, #0]
;pcd8544.c, 68 :: 		}
L_end_PCD8544_reset:
0x02F6	0x4770    BX	LR
0x02F8	0x0C144001  	GPIOB_BRR+0
0x02FC	0x0C104001  	GPIOB_BSRR+0
; end of _PCD8544_reset
_PCD8544_write:
;pcd8544.c, 26 :: 		void PCD8544_write(unsigned char type, unsigned char value)
; value start address is: 4 (R1)
; type start address is: 0 (R0)
0x01D0	0xB2C2    UXTB	R2, R0
; value end address is: 4 (R1)
; type end address is: 0 (R0)
; type start address is: 8 (R2)
; value start address is: 4 (R1)
;pcd8544.c, 28 :: 		unsigned char s = 0x08;
; s start address is: 0 (R0)
0x01D2	0x2008    MOVS	R0, #8
;pcd8544.c, 30 :: 		if(type != 0)
0x01D4	0xB132    CBZ	R2, L_PCD8544_write76
; type end address is: 8 (R2)
;pcd8544.c, 32 :: 		GPIOB_pin_high(DC_pin);
0x01D6	0x4A1F    LDR	R2, [PC, #124]
0x01D8	0x6812    LDR	R2, [R2, #0]
0x01DA	0xF0420380  ORR	R3, R2, #128
0x01DE	0x4A1D    LDR	R2, [PC, #116]
0x01E0	0x6013    STR	R3, [R2, #0]
;pcd8544.c, 33 :: 		}
0x01E2	0xE005    B	L_PCD8544_write77
L_PCD8544_write76:
;pcd8544.c, 36 :: 		GPIOB_pin_low(DC_pin);
0x01E4	0x4A1C    LDR	R2, [PC, #112]
0x01E6	0x6812    LDR	R2, [R2, #0]
0x01E8	0xF0420380  ORR	R3, R2, #128
0x01EC	0x4A1A    LDR	R2, [PC, #104]
0x01EE	0x6013    STR	R3, [R2, #0]
;pcd8544.c, 37 :: 		}
L_PCD8544_write77:
;pcd8544.c, 39 :: 		GPIOB_pin_low(CE_pin);
0x01F0	0x4A19    LDR	R2, [PC, #100]
0x01F2	0x6812    LDR	R2, [R2, #0]
0x01F4	0xF0420340  ORR	R3, R2, #64
0x01F8	0x4A17    LDR	R2, [PC, #92]
0x01FA	0x6013    STR	R3, [R2, #0]
; value end address is: 4 (R1)
; s end address is: 0 (R0)
;pcd8544.c, 41 :: 		while(s > 0)
L_PCD8544_write78:
; s start address is: 0 (R0)
; value start address is: 4 (R1)
0x01FC	0x2800    CMP	R0, #0
0x01FE	0xD921    BLS	L_PCD8544_write79
;pcd8544.c, 43 :: 		GPIOB_pin_low(SCK_pin);
0x0200	0x4A15    LDR	R2, [PC, #84]
0x0202	0x6812    LDR	R2, [R2, #0]
0x0204	0xF4427300  ORR	R3, R2, #512
0x0208	0x4A13    LDR	R2, [PC, #76]
0x020A	0x6013    STR	R3, [R2, #0]
;pcd8544.c, 45 :: 		if((value & 0x80) == 0)
0x020C	0xF0010280  AND	R2, R1, #128
0x0210	0xB2D2    UXTB	R2, R2
0x0212	0xB932    CBNZ	R2, L_PCD8544_write80
;pcd8544.c, 47 :: 		GPIOB_pin_low(SDO_pin);
0x0214	0x4A10    LDR	R2, [PC, #64]
0x0216	0x6812    LDR	R2, [R2, #0]
0x0218	0xF4427380  ORR	R3, R2, #256
0x021C	0x4A0E    LDR	R2, [PC, #56]
0x021E	0x6013    STR	R3, [R2, #0]
;pcd8544.c, 48 :: 		}
0x0220	0xE005    B	L_PCD8544_write81
L_PCD8544_write80:
;pcd8544.c, 51 :: 		GPIOB_pin_high(SDO_pin);
0x0222	0x4A0C    LDR	R2, [PC, #48]
0x0224	0x6812    LDR	R2, [R2, #0]
0x0226	0xF4427380  ORR	R3, R2, #256
0x022A	0x4A0A    LDR	R2, [PC, #40]
0x022C	0x6013    STR	R3, [R2, #0]
;pcd8544.c, 52 :: 		}
L_PCD8544_write81:
;pcd8544.c, 54 :: 		value <<= 1;
0x022E	0x004A    LSLS	R2, R1, #1
0x0230	0xB2D1    UXTB	R1, R2
;pcd8544.c, 55 :: 		GPIOB_pin_high(SCK_pin);
0x0232	0x4A08    LDR	R2, [PC, #32]
0x0234	0x6812    LDR	R2, [R2, #0]
0x0236	0xF4427300  ORR	R3, R2, #512
0x023A	0x4A06    LDR	R2, [PC, #24]
0x023C	0x6013    STR	R3, [R2, #0]
;pcd8544.c, 56 :: 		s--;
0x023E	0x1E40    SUBS	R0, R0, #1
0x0240	0xB2C0    UXTB	R0, R0
;pcd8544.c, 57 :: 		};
; value end address is: 4 (R1)
; s end address is: 0 (R0)
0x0242	0xE7DB    B	L_PCD8544_write78
L_PCD8544_write79:
;pcd8544.c, 59 :: 		GPIOB_pin_high(CE_pin);
0x0244	0x4A03    LDR	R2, [PC, #12]
0x0246	0x6812    LDR	R2, [R2, #0]
0x0248	0xF0420340  ORR	R3, R2, #64
0x024C	0x4A01    LDR	R2, [PC, #4]
0x024E	0x6013    STR	R3, [R2, #0]
;pcd8544.c, 60 :: 		}
L_end_PCD8544_write:
0x0250	0x4770    BX	LR
0x0252	0xBF00    NOP
0x0254	0x0C104001  	GPIOB_BSRR+0
0x0258	0x0C144001  	GPIOB_BRR+0
; end of _PCD8544_write
_PCD8544_set_contrast:
;pcd8544.c, 100 :: 		void PCD8544_set_contrast(unsigned char value)
; value start address is: 0 (R0)
0x019C	0xB081    SUB	SP, SP, #4
0x019E	0xF8CDE000  STR	LR, [SP, #0]
; value end address is: 0 (R0)
; value start address is: 0 (R0)
;pcd8544.c, 102 :: 		if(value >= 0x7F)
0x01A2	0x287F    CMP	R0, #127
0x01A4	0xD301    BCC	L__PCD8544_set_contrast246
; value end address is: 0 (R0)
;pcd8544.c, 104 :: 		value = 0x7F;
; value start address is: 16 (R4)
0x01A6	0x247F    MOVS	R4, #127
; value end address is: 16 (R4)
;pcd8544.c, 105 :: 		}
0x01A8	0xE000    B	L_PCD8544_set_contrast86
L__PCD8544_set_contrast246:
;pcd8544.c, 102 :: 		if(value >= 0x7F)
0x01AA	0xB2C4    UXTB	R4, R0
;pcd8544.c, 105 :: 		}
L_PCD8544_set_contrast86:
;pcd8544.c, 107 :: 		PCD8544_write(CMD, (PCD8544_extended_instruction | PCD8544_function_set));
; value start address is: 16 (R4)
0x01AC	0x2121    MOVS	R1, #33
0x01AE	0x2000    MOVS	R0, #0
0x01B0	0xF000F80E  BL	_PCD8544_write+0
;pcd8544.c, 108 :: 		PCD8544_write(CMD, (PCD8544_set_VOP | value));
0x01B4	0xF0440180  ORR	R1, R4, #128
; value end address is: 16 (R4)
0x01B8	0x2000    MOVS	R0, #0
0x01BA	0xF000F809  BL	_PCD8544_write+0
;pcd8544.c, 109 :: 		PCD8544_write(CMD, PCD8544_function_set);
0x01BE	0x2120    MOVS	R1, #32
0x01C0	0x2000    MOVS	R0, #0
0x01C2	0xF000F805  BL	_PCD8544_write+0
;pcd8544.c, 110 :: 		}
L_end_PCD8544_set_contrast:
0x01C6	0xF8DDE000  LDR	LR, [SP, #0]
0x01CA	0xB001    ADD	SP, SP, #4
0x01CC	0x4770    BX	LR
; end of _PCD8544_set_contrast
_PCD8544_clear_buffer:
;pcd8544.c, 161 :: 		void PCD8544_clear_buffer(unsigned char colour)
; colour start address is: 0 (R0)
; colour end address is: 0 (R0)
; colour start address is: 0 (R0)
;pcd8544.c, 163 :: 		unsigned char x_pos = 0;
; x_pos start address is: 12 (R3)
0x029C	0x2300    MOVS	R3, #0
;pcd8544.c, 164 :: 		unsigned char y_pos = 0;
; y_pos start address is: 16 (R4)
0x029E	0x2400    MOVS	R4, #0
; colour end address is: 0 (R0)
; y_pos end address is: 16 (R4)
; x_pos end address is: 12 (R3)
;pcd8544.c, 166 :: 		for(x_pos; x_pos < X_max; x_pos++)
L_PCD8544_clear_buffer97:
; y_pos start address is: 16 (R4)
; x_pos start address is: 12 (R3)
; colour start address is: 0 (R0)
0x02A0	0x2B54    CMP	R3, #84
0x02A2	0xD20E    BCS	L_PCD8544_clear_buffer98
; colour end address is: 0 (R0)
; y_pos end address is: 16 (R4)
; x_pos end address is: 12 (R3)
;pcd8544.c, 168 :: 		for(y_pos; y_pos < Rows; y_pos++)
L_PCD8544_clear_buffer100:
; colour start address is: 0 (R0)
; x_pos start address is: 12 (R3)
; y_pos start address is: 16 (R4)
0x02A4	0x2C06    CMP	R4, #6
0x02A6	0xD209    BCS	L_PCD8544_clear_buffer101
;pcd8544.c, 170 :: 		PCD8544_buffer[x_pos][y_pos] = colour;
0x02A8	0x2106    MOVS	R1, #6
0x02AA	0xFB01F203  MUL	R2, R1, R3
0x02AE	0x4905    LDR	R1, [PC, #20]
0x02B0	0x1889    ADDS	R1, R1, R2
0x02B2	0x1909    ADDS	R1, R1, R4
0x02B4	0x7008    STRB	R0, [R1, #0]
;pcd8544.c, 168 :: 		for(y_pos; y_pos < Rows; y_pos++)
0x02B6	0x1C64    ADDS	R4, R4, #1
0x02B8	0xB2E4    UXTB	R4, R4
;pcd8544.c, 171 :: 		}
0x02BA	0xE7F3    B	L_PCD8544_clear_buffer100
L_PCD8544_clear_buffer101:
;pcd8544.c, 166 :: 		for(x_pos; x_pos < X_max; x_pos++)
0x02BC	0x1C5B    ADDS	R3, R3, #1
0x02BE	0xB2DB    UXTB	R3, R3
;pcd8544.c, 172 :: 		}
; colour end address is: 0 (R0)
; y_pos end address is: 16 (R4)
; x_pos end address is: 12 (R3)
0x02C0	0xE7EE    B	L_PCD8544_clear_buffer97
L_PCD8544_clear_buffer98:
;pcd8544.c, 173 :: 		}
L_end_PCD8544_clear_buffer:
0x02C2	0x4770    BX	LR
0x02C4	0x00112000  	_PCD8544_buffer+0
; end of _PCD8544_clear_buffer
_PCD8544_clear_screen:
;pcd8544.c, 176 :: 		void PCD8544_clear_screen(unsigned char colour)
; colour start address is: 0 (R0)
0x0988	0xB081    SUB	SP, SP, #4
0x098A	0xF8CDE000  STR	LR, [SP, #0]
; colour end address is: 0 (R0)
; colour start address is: 0 (R0)
;pcd8544.c, 178 :: 		unsigned char x_pos = 0;
;pcd8544.c, 179 :: 		unsigned char y_pos = 0;
;pcd8544.c, 181 :: 		for(y_pos = 0; y_pos < Rows; y_pos++)
; y_pos start address is: 40 (R10)
0x098E	0xF2400A00  MOVW	R10, #0
; colour end address is: 0 (R0)
; y_pos end address is: 40 (R10)
0x0992	0xFA5FF980  UXTB	R9, R0
L_PCD8544_clear_screen103:
; y_pos start address is: 40 (R10)
; colour start address is: 36 (R9)
0x0996	0xF1BA0F06  CMP	R10, #6
0x099A	0xD218    BCS	L_PCD8544_clear_screen104
;pcd8544.c, 183 :: 		for(x_pos = 0; x_pos < X_max; x_pos++)
; x_pos start address is: 44 (R11)
0x099C	0xF2400B00  MOVW	R11, #0
; colour end address is: 36 (R9)
; x_pos end address is: 44 (R11)
; y_pos end address is: 40 (R10)
L_PCD8544_clear_screen106:
; x_pos start address is: 44 (R11)
; colour start address is: 36 (R9)
; y_pos start address is: 40 (R10)
0x09A0	0xF1BB0F54  CMP	R11, #84
0x09A4	0xD20E    BCS	L_PCD8544_clear_screen107
;pcd8544.c, 185 :: 		PCD8544_print_string(x_pos, y_pos, " ", colour);
0x09A6	0x490C    LDR	R1, [PC, #48]
0x09A8	0xFA5FF389  UXTB	R3, R9
0x09AC	0x460A    MOV	R2, R1
0x09AE	0xFA5FF18A  UXTB	R1, R10
0x09B2	0xFA5FF08B  UXTB	R0, R11
0x09B6	0xF7FFFC51  BL	_PCD8544_print_string+0
;pcd8544.c, 183 :: 		for(x_pos = 0; x_pos < X_max; x_pos++)
0x09BA	0xF10B0B01  ADD	R11, R11, #1
0x09BE	0xFA5FFB8B  UXTB	R11, R11
;pcd8544.c, 186 :: 		}
; x_pos end address is: 44 (R11)
0x09C2	0xE7ED    B	L_PCD8544_clear_screen106
L_PCD8544_clear_screen107:
;pcd8544.c, 181 :: 		for(y_pos = 0; y_pos < Rows; y_pos++)
0x09C4	0xF10A0A01  ADD	R10, R10, #1
0x09C8	0xFA5FFA8A  UXTB	R10, R10
;pcd8544.c, 187 :: 		}
; colour end address is: 36 (R9)
; y_pos end address is: 40 (R10)
0x09CC	0xE7E3    B	L_PCD8544_clear_screen103
L_PCD8544_clear_screen104:
;pcd8544.c, 188 :: 		}
L_end_PCD8544_clear_screen:
0x09CE	0xF8DDE000  LDR	LR, [SP, #0]
0x09D2	0xB001    ADD	SP, SP, #4
0x09D4	0x4770    BX	LR
0x09D6	0xBF00    NOP
0x09D8	0x000F2000  	?lstr1_nokia_5510_lcd_demo+0
; end of _PCD8544_clear_screen
_PCD8544_print_string:
;pcd8544.c, 204 :: 		void PCD8544_print_string(unsigned char x_pos, unsigned char y_pos, unsigned char *ch, unsigned char colour)
; ch start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x025C	0xB083    SUB	SP, SP, #12
0x025E	0xF8CDE000  STR	LR, [SP, #0]
0x0262	0xF88D3008  STRB	R3, [SP, #8]
; ch end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 4 (R1)
; ch start address is: 8 (R2)
;pcd8544.c, 206 :: 		PCD8544_set_cursor(x_pos, y_pos);
0x0266	0x9201    STR	R2, [SP, #4]
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
0x0268	0xF7FFFF62  BL	_PCD8544_set_cursor+0
; ch end address is: 8 (R2)
0x026C	0x9A01    LDR	R2, [SP, #4]
0x026E	0x4617    MOV	R7, R2
;pcd8544.c, 208 :: 		do
L_PCD8544_print_string112:
;pcd8544.c, 210 :: 		PCD8544_print_char(*ch++, colour);
; ch start address is: 32 (R8)
; ch start address is: 28 (R7)
0x0270	0x783C    LDRB	R4, [R7, #0]
0x0272	0xF89D1008  LDRB	R1, [SP, #8]
0x0276	0xB2E0    UXTB	R0, R4
0x0278	0xF7FFFF6E  BL	_PCD8544_print_char+0
0x027C	0x1C7C    ADDS	R4, R7, #1
; ch end address is: 28 (R7)
; ch start address is: 32 (R8)
0x027E	0x46A0    MOV	R8, R4
; ch end address is: 32 (R8)
;pcd8544.c, 211 :: 		}while((*ch >= 0x20) && (*ch <= 0x7F));
0x0280	0x7824    LDRB	R4, [R4, #0]
0x0282	0x2C20    CMP	R4, #32
0x0284	0xD305    BCC	L__PCD8544_print_string250
; ch end address is: 32 (R8)
; ch start address is: 32 (R8)
0x0286	0xF8984000  LDRB	R4, [R8, #0]
0x028A	0x2C7F    CMP	R4, #127
0x028C	0xD801    BHI	L__PCD8544_print_string249
0x028E	0x4647    MOV	R7, R8
; ch end address is: 32 (R8)
0x0290	0xE7EE    B	L_PCD8544_print_string112
L__PCD8544_print_string250:
L__PCD8544_print_string249:
;pcd8544.c, 212 :: 		}
L_end_PCD8544_print_string:
0x0292	0xF8DDE000  LDR	LR, [SP, #0]
0x0296	0xB003    ADD	SP, SP, #12
0x0298	0x4770    BX	LR
; end of _PCD8544_print_string
_PCD8544_set_cursor:
;pcd8544.c, 113 :: 		void PCD8544_set_cursor(unsigned char x_pos, unsigned char y_pos)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0130	0xB081    SUB	SP, SP, #4
0x0132	0xF8CDE000  STR	LR, [SP, #0]
0x0136	0xB2CC    UXTB	R4, R1
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 16 (R4)
;pcd8544.c, 115 :: 		PCD8544_write(CMD, (PCD8544_set_X_addr | x_pos));
0x0138	0xF0400280  ORR	R2, R0, #128
; x_pos end address is: 0 (R0)
0x013C	0xB2D1    UXTB	R1, R2
0x013E	0x2000    MOVS	R0, #0
0x0140	0xF000F846  BL	_PCD8544_write+0
;pcd8544.c, 116 :: 		PCD8544_write(CMD, (PCD8544_set_Y_addr | y_pos));
0x0144	0xF0440240  ORR	R2, R4, #64
; y_pos end address is: 16 (R4)
0x0148	0xB2D1    UXTB	R1, R2
0x014A	0x2000    MOVS	R0, #0
0x014C	0xF000F840  BL	_PCD8544_write+0
;pcd8544.c, 117 :: 		}
L_end_PCD8544_set_cursor:
0x0150	0xF8DDE000  LDR	LR, [SP, #0]
0x0154	0xB001    ADD	SP, SP, #4
0x0156	0x4770    BX	LR
; end of _PCD8544_set_cursor
_PCD8544_print_char:
;pcd8544.c, 120 :: 		void PCD8544_print_char(unsigned char ch, unsigned char colour)
; colour start address is: 4 (R1)
; ch start address is: 0 (R0)
0x0158	0xB081    SUB	SP, SP, #4
0x015A	0xF8CDE000  STR	LR, [SP, #0]
; colour end address is: 4 (R1)
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
; colour start address is: 4 (R1)
;pcd8544.c, 122 :: 		unsigned char s = 0;
;pcd8544.c, 123 :: 		unsigned char chr = 0;
;pcd8544.c, 125 :: 		for(s = 0; s <= 4; s++)
; s start address is: 24 (R6)
0x015E	0x2600    MOVS	R6, #0
; ch end address is: 0 (R0)
; colour end address is: 4 (R1)
; s end address is: 24 (R6)
0x0160	0xB2C5    UXTB	R5, R0
0x0162	0xB2CC    UXTB	R4, R1
L_PCD8544_print_char87:
; s start address is: 24 (R6)
; ch start address is: 20 (R5)
; colour start address is: 16 (R4)
; colour start address is: 16 (R4)
; colour end address is: 16 (R4)
; ch start address is: 20 (R5)
; ch end address is: 20 (R5)
0x0164	0x2E04    CMP	R6, #4
0x0166	0xD813    BHI	L_PCD8544_print_char88
; colour end address is: 16 (R4)
; ch end address is: 20 (R5)
;pcd8544.c, 127 :: 		chr = font[(ch - 0x20)][s];
; ch start address is: 20 (R5)
; colour start address is: 16 (R4)
0x0168	0xF2A50320  SUBW	R3, R5, #32
0x016C	0xB21B    SXTH	R3, R3
0x016E	0x2205    MOVS	R2, #5
0x0170	0x4353    MULS	R3, R2, R3
0x0172	0x4A09    LDR	R2, [PC, #36]
0x0174	0x18D2    ADDS	R2, R2, R3
0x0176	0x1992    ADDS	R2, R2, R6
0x0178	0x7810    LDRB	R0, [R2, #0]
; chr start address is: 0 (R0)
;pcd8544.c, 128 :: 		if(colour == BLACK)
0x017A	0xB914    CBNZ	R4, L__PCD8544_print_char247
;pcd8544.c, 130 :: 		chr = ~chr;
0x017C	0x43C0    MVN	R0, R0
0x017E	0xB2C0    UXTB	R0, R0
; chr end address is: 0 (R0)
;pcd8544.c, 131 :: 		}
0x0180	0xE7FF    B	L_PCD8544_print_char90
L__PCD8544_print_char247:
;pcd8544.c, 128 :: 		if(colour == BLACK)
;pcd8544.c, 131 :: 		}
L_PCD8544_print_char90:
;pcd8544.c, 132 :: 		PCD8544_write(DAT, chr);
; chr start address is: 0 (R0)
0x0182	0xB2C1    UXTB	R1, R0
; chr end address is: 0 (R0)
0x0184	0x2001    MOVS	R0, #1
0x0186	0xF000F823  BL	_PCD8544_write+0
;pcd8544.c, 125 :: 		for(s = 0; s <= 4; s++)
0x018A	0x1C76    ADDS	R6, R6, #1
0x018C	0xB2F6    UXTB	R6, R6
;pcd8544.c, 133 :: 		}
; colour end address is: 16 (R4)
; ch end address is: 20 (R5)
; s end address is: 24 (R6)
0x018E	0xE7E9    B	L_PCD8544_print_char87
L_PCD8544_print_char88:
;pcd8544.c, 134 :: 		}
L_end_PCD8544_print_char:
0x0190	0xF8DDE000  LDR	LR, [SP, #0]
0x0194	0xB001    ADD	SP, SP, #4
0x0196	0x4770    BX	LR
0x0198	0x1EC40000  	nokia_5510_lcd_demo_font+0
; end of _PCD8544_print_char
_PCD8544_backlight_state:
;pcd8544.c, 87 :: 		void PCD8544_backlight_state(unsigned char value)
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
;pcd8544.c, 89 :: 		if(value != 0)
0x11C8	0xB130    CBZ	R0, L_PCD8544_backlight_state84
; value end address is: 0 (R0)
;pcd8544.c, 91 :: 		GPIOB_pin_low(BL_pin);
0x11CA	0x4907    LDR	R1, [PC, #28]
0x11CC	0x6809    LDR	R1, [R1, #0]
0x11CE	0xF0410201  ORR	R2, R1, #1
0x11D2	0x4905    LDR	R1, [PC, #20]
0x11D4	0x600A    STR	R2, [R1, #0]
;pcd8544.c, 92 :: 		}
0x11D6	0xE005    B	L_PCD8544_backlight_state85
L_PCD8544_backlight_state84:
;pcd8544.c, 95 :: 		GPIOB_pin_high(BL_pin);
0x11D8	0x4904    LDR	R1, [PC, #16]
0x11DA	0x6809    LDR	R1, [R1, #0]
0x11DC	0xF0410201  ORR	R2, R1, #1
0x11E0	0x4902    LDR	R1, [PC, #8]
0x11E2	0x600A    STR	R2, [R1, #0]
;pcd8544.c, 96 :: 		}
L_PCD8544_backlight_state85:
;pcd8544.c, 97 :: 		}
L_end_PCD8544_backlight_state:
0x11E4	0x4770    BX	LR
0x11E6	0xBF00    NOP
0x11E8	0x0C144001  	GPIOB_BRR+0
0x11EC	0x0C104001  	GPIOB_BSRR+0
; end of _PCD8544_backlight_state
_PCD8544_print_image:
;pcd8544.c, 191 :: 		void PCD8544_print_image(const unsigned char *bmp)
; bmp start address is: 0 (R0)
0x1688	0xB081    SUB	SP, SP, #4
0x168A	0xF8CDE000  STR	LR, [SP, #0]
0x168E	0x4605    MOV	R5, R0
; bmp end address is: 0 (R0)
; bmp start address is: 20 (R5)
;pcd8544.c, 193 :: 		unsigned int s = 0;
;pcd8544.c, 195 :: 		PCD8544_set_cursor(0, 0);
0x1690	0x2100    MOVS	R1, #0
0x1692	0x2000    MOVS	R0, #0
0x1694	0xF7FEFD4C  BL	_PCD8544_set_cursor+0
;pcd8544.c, 197 :: 		for(s = 0; s < buffer_size; s++)
; s start address is: 0 (R0)
0x1698	0x2000    MOVS	R0, #0
; bmp end address is: 20 (R5)
; s end address is: 0 (R0)
0x169A	0x462C    MOV	R4, R5
0x169C	0xB285    UXTH	R5, R0
L_PCD8544_print_image109:
; s start address is: 20 (R5)
; bmp start address is: 16 (R4)
; bmp start address is: 16 (R4)
; bmp end address is: 16 (R4)
0x169E	0xF5B57FFC  CMP	R5, #504
0x16A2	0xD207    BCS	L_PCD8544_print_image110
; bmp end address is: 16 (R4)
;pcd8544.c, 199 :: 		PCD8544_Write(DAT, bmp[s]);
; bmp start address is: 16 (R4)
0x16A4	0x1961    ADDS	R1, R4, R5
0x16A6	0x7809    LDRB	R1, [R1, #0]
0x16A8	0x2001    MOVS	R0, #1
0x16AA	0xF7FEFD91  BL	_PCD8544_write+0
;pcd8544.c, 197 :: 		for(s = 0; s < buffer_size; s++)
0x16AE	0x1C6D    ADDS	R5, R5, #1
0x16B0	0xB2AD    UXTH	R5, R5
;pcd8544.c, 200 :: 		}
; bmp end address is: 16 (R4)
; s end address is: 20 (R5)
0x16B2	0xE7F4    B	L_PCD8544_print_image109
L_PCD8544_print_image110:
;pcd8544.c, 201 :: 		}
L_end_PCD8544_print_image:
0x16B4	0xF8DDE000  LDR	LR, [SP, #0]
0x16B8	0xB001    ADD	SP, SP, #4
0x16BA	0x4770    BX	LR
; end of _PCD8544_print_image
_Draw_Rectangle:
;pcd8544.c, 579 :: 		void Draw_Rectangle(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char fill, unsigned char colour)
; y2 start address is: 12 (R3)
; x2 start address is: 8 (R2)
; y1 start address is: 4 (R1)
; x1 start address is: 0 (R0)
0x16BC	0xB086    SUB	SP, SP, #24
0x16BE	0xF8CDE000  STR	LR, [SP, #0]
0x16C2	0xF8AD1004  STRH	R1, [SP, #4]
0x16C6	0xB219    SXTH	R1, R3
0x16C8	0xB213    SXTH	R3, R2
0x16CA	0xB202    SXTH	R2, R0
0x16CC	0xF9BD0004  LDRSH	R0, [SP, #4]
; y2 end address is: 12 (R3)
; x2 end address is: 8 (R2)
; y1 end address is: 4 (R1)
; x1 end address is: 0 (R0)
; x1 start address is: 8 (R2)
; y1 start address is: 0 (R0)
; x2 start address is: 12 (R3)
; y2 start address is: 4 (R1)
; fill start address is: 20 (R5)
0x16D0	0xF89D5018  LDRB	R5, [SP, #24]
0x16D4	0xF89D401C  LDRB	R4, [SP, #28]
0x16D8	0xF88D401C  STRB	R4, [SP, #28]
;pcd8544.c, 581 :: 		unsigned char i = 0x00;
;pcd8544.c, 582 :: 		unsigned char xmin = 0x00;
;pcd8544.c, 583 :: 		unsigned char xmax = 0x00;
;pcd8544.c, 584 :: 		unsigned char ymin = 0x00;
;pcd8544.c, 585 :: 		unsigned char ymax = 0x00;
;pcd8544.c, 587 :: 		if(fill != NO)
0x16DC	0x2D00    CMP	R5, #0
0x16DE	0xD036    BEQ	L_Draw_Rectangle189
; fill end address is: 20 (R5)
;pcd8544.c, 589 :: 		if(x1 < x2)
0x16E0	0x429A    CMP	R2, R3
0x16E2	0xDA05    BGE	L_Draw_Rectangle190
;pcd8544.c, 591 :: 		xmin = x1;
; xmin start address is: 16 (R4)
0x16E4	0xB2D4    UXTB	R4, R2
; x1 end address is: 8 (R2)
;pcd8544.c, 592 :: 		xmax = x2;
0x16E6	0xF88D3014  STRB	R3, [SP, #20]
; x2 end address is: 12 (R3)
;pcd8544.c, 593 :: 		}
0x16EA	0xFA5FFA84  UXTB	R10, R4
; xmin end address is: 16 (R4)
0x16EE	0xE004    B	L_Draw_Rectangle191
L_Draw_Rectangle190:
;pcd8544.c, 596 :: 		xmin = x2;
; xmin start address is: 16 (R4)
; x2 start address is: 12 (R3)
; x1 start address is: 8 (R2)
0x16F0	0xB2DC    UXTB	R4, R3
; x2 end address is: 12 (R3)
;pcd8544.c, 597 :: 		xmax = x1;
0x16F2	0xF88D2014  STRB	R2, [SP, #20]
; x1 end address is: 8 (R2)
; xmin end address is: 16 (R4)
0x16F6	0xFA5FFA84  UXTB	R10, R4
;pcd8544.c, 598 :: 		}
L_Draw_Rectangle191:
;pcd8544.c, 600 :: 		if(y1 < y2)
; xmin start address is: 40 (R10)
0x16FA	0x4288    CMP	R0, R1
0x16FC	0xDA04    BGE	L_Draw_Rectangle192
;pcd8544.c, 602 :: 		ymin = y1;
0x16FE	0xF88D0015  STRB	R0, [SP, #21]
; y1 end address is: 0 (R0)
;pcd8544.c, 603 :: 		ymax = y2;
0x1702	0xF88D1016  STRB	R1, [SP, #22]
; y2 end address is: 4 (R1)
;pcd8544.c, 604 :: 		}
0x1706	0xE003    B	L_Draw_Rectangle193
L_Draw_Rectangle192:
;pcd8544.c, 607 :: 		ymin = y2;
; y2 start address is: 4 (R1)
; y1 start address is: 0 (R0)
0x1708	0xF88D1015  STRB	R1, [SP, #21]
; y2 end address is: 4 (R1)
;pcd8544.c, 608 :: 		ymax = y1;
0x170C	0xF88D0016  STRB	R0, [SP, #22]
; y1 end address is: 0 (R0)
;pcd8544.c, 609 :: 		}
L_Draw_Rectangle193:
;pcd8544.c, 611 :: 		for(; xmin <= xmax; ++xmin)
; xmin end address is: 40 (R10)
L_Draw_Rectangle194:
; xmin start address is: 40 (R10)
0x1710	0xF89D4014  LDRB	R4, [SP, #20]
0x1714	0x45A2    CMP	R10, R4
0x1716	0xD819    BHI	L_Draw_Rectangle195
;pcd8544.c, 613 :: 		for(i = ymin; i <= ymax; ++i)
; i start address is: 48 (R12)
0x1718	0xF89DC015  LDRB	R12, [SP, #21]
; i end address is: 48 (R12)
; xmin end address is: 40 (R10)
0x171C	0xFA5FF78C  UXTB	R7, R12
L_Draw_Rectangle197:
; i start address is: 28 (R7)
; xmin start address is: 40 (R10)
0x1720	0xF89D4016  LDRB	R4, [SP, #22]
0x1724	0x42A7    CMP	R7, R4
0x1726	0xD80C    BHI	L_Draw_Rectangle198
;pcd8544.c, 615 :: 		Draw_Pixel(xmin, i, colour);
0x1728	0xF89D201C  LDRB	R2, [SP, #28]
0x172C	0xB2F9    UXTB	R1, R7
0x172E	0xFA5FF08A  UXTB	R0, R10
0x1732	0xF7FEFE6F  BL	_Draw_Pixel+0
;pcd8544.c, 613 :: 		for(i = ymin; i <= ymax; ++i)
0x1736	0x1C7C    ADDS	R4, R7, #1
; i end address is: 28 (R7)
; i start address is: 48 (R12)
0x1738	0xFA5FFC84  UXTB	R12, R4
;pcd8544.c, 616 :: 		}
; i end address is: 48 (R12)
0x173C	0xFA5FF78C  UXTB	R7, R12
0x1740	0xE7EE    B	L_Draw_Rectangle197
L_Draw_Rectangle198:
;pcd8544.c, 611 :: 		for(; xmin <= xmax; ++xmin)
0x1742	0xF10A0A01  ADD	R10, R10, #1
0x1746	0xFA5FFA8A  UXTB	R10, R10
;pcd8544.c, 617 :: 		}
; xmin end address is: 40 (R10)
0x174A	0xE7E1    B	L_Draw_Rectangle194
L_Draw_Rectangle195:
;pcd8544.c, 618 :: 		}
0x174C	0xE051    B	L_Draw_Rectangle200
L_Draw_Rectangle189:
;pcd8544.c, 622 :: 		Draw_Line(x1, y1, x2, y1, colour);
; y2 start address is: 4 (R1)
; x2 start address is: 12 (R3)
; y1 start address is: 0 (R0)
; x1 start address is: 8 (R2)
0x174E	0xF89D401C  LDRB	R4, [SP, #28]
0x1752	0xF8AD1004  STRH	R1, [SP, #4]
0x1756	0xF8AD3008  STRH	R3, [SP, #8]
0x175A	0xF8AD000C  STRH	R0, [SP, #12]
0x175E	0xF8AD2010  STRH	R2, [SP, #16]
0x1762	0xB201    SXTH	R1, R0
0x1764	0xB210    SXTH	R0, R2
0x1766	0xB21A    SXTH	R2, R3
0x1768	0xB20B    SXTH	R3, R1
0x176A	0xB410    PUSH	(R4)
0x176C	0xF7FEFEA6  BL	_Draw_Line+0
0x1770	0xB001    ADD	SP, SP, #4
0x1772	0xF9BD2010  LDRSH	R2, [SP, #16]
0x1776	0xF9BD000C  LDRSH	R0, [SP, #12]
0x177A	0xF9BD3008  LDRSH	R3, [SP, #8]
0x177E	0xF9BD1004  LDRSH	R1, [SP, #4]
;pcd8544.c, 623 :: 		Draw_Line(x1, y2, x2, y2, colour);
0x1782	0xF89D401C  LDRB	R4, [SP, #28]
0x1786	0xF8AD1004  STRH	R1, [SP, #4]
0x178A	0xF8AD3008  STRH	R3, [SP, #8]
0x178E	0xF8AD000C  STRH	R0, [SP, #12]
0x1792	0xF8AD2010  STRH	R2, [SP, #16]
0x1796	0xB210    SXTH	R0, R2
0x1798	0xB21A    SXTH	R2, R3
0x179A	0xB20B    SXTH	R3, R1
0x179C	0xB410    PUSH	(R4)
0x179E	0xF7FEFE8D  BL	_Draw_Line+0
0x17A2	0xB001    ADD	SP, SP, #4
0x17A4	0xF9BD2010  LDRSH	R2, [SP, #16]
0x17A8	0xF9BD000C  LDRSH	R0, [SP, #12]
0x17AC	0xF9BD3008  LDRSH	R3, [SP, #8]
0x17B0	0xF9BD1004  LDRSH	R1, [SP, #4]
;pcd8544.c, 624 :: 		Draw_Line(x1, y1, x1, y2, colour);
0x17B4	0xF89D401C  LDRB	R4, [SP, #28]
0x17B8	0xF8AD1004  STRH	R1, [SP, #4]
0x17BC	0xF8AD3008  STRH	R3, [SP, #8]
0x17C0	0xF8AD000C  STRH	R0, [SP, #12]
0x17C4	0xB20B    SXTH	R3, R1
0x17C6	0xB201    SXTH	R1, R0
0x17C8	0xB210    SXTH	R0, R2
; x1 end address is: 8 (R2)
0x17CA	0xB410    PUSH	(R4)
0x17CC	0xF7FEFE76  BL	_Draw_Line+0
0x17D0	0xB001    ADD	SP, SP, #4
0x17D2	0xF9BD000C  LDRSH	R0, [SP, #12]
0x17D6	0xF9BD3008  LDRSH	R3, [SP, #8]
0x17DA	0xF9BD1004  LDRSH	R1, [SP, #4]
;pcd8544.c, 625 :: 		Draw_Line(x2, y1, x2, y2, colour);
0x17DE	0xF89D401C  LDRB	R4, [SP, #28]
0x17E2	0xB21A    SXTH	R2, R3
; y2 end address is: 4 (R1)
0x17E4	0xB20B    SXTH	R3, R1
0x17E6	0xB201    SXTH	R1, R0
; y1 end address is: 0 (R0)
0x17E8	0xB210    SXTH	R0, R2
; x2 end address is: 12 (R3)
0x17EA	0xB410    PUSH	(R4)
0x17EC	0xF7FEFE66  BL	_Draw_Line+0
0x17F0	0xB001    ADD	SP, SP, #4
;pcd8544.c, 626 :: 		}
L_Draw_Rectangle200:
;pcd8544.c, 627 :: 		}
L_end_Draw_Rectangle:
0x17F2	0xF8DDE000  LDR	LR, [SP, #0]
0x17F6	0xB006    ADD	SP, SP, #24
0x17F8	0x4770    BX	LR
; end of _Draw_Rectangle
_Draw_Pixel:
;pcd8544.c, 474 :: 		void Draw_Pixel(unsigned char x_pos, unsigned char y_pos, unsigned char colour)
; colour start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0414	0xB081    SUB	SP, SP, #4
0x0416	0xF8CDE000  STR	LR, [SP, #0]
0x041A	0xB2D6    UXTB	R6, R2
0x041C	0xB2CA    UXTB	R2, R1
; colour end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 8 (R2)
; colour start address is: 24 (R6)
;pcd8544.c, 476 :: 		unsigned char row = 0;
;pcd8544.c, 477 :: 		unsigned char value = 0;
;pcd8544.c, 479 :: 		if((x_pos < 0) || (x_pos >= X_max) || (y_pos < 0) || (y_pos >= Y_max))
0x041E	0x2800    CMP	R0, #0
0x0420	0xD306    BCC	L__Draw_Pixel285
0x0422	0x2854    CMP	R0, #84
0x0424	0xD204    BCS	L__Draw_Pixel284
0x0426	0x2A00    CMP	R2, #0
0x0428	0xD302    BCC	L__Draw_Pixel283
0x042A	0x2A30    CMP	R2, #48
0x042C	0xD200    BCS	L__Draw_Pixel282
0x042E	0xE000    B	L_Draw_Pixel171
; x_pos end address is: 0 (R0)
; y_pos end address is: 8 (R2)
; colour end address is: 24 (R6)
L__Draw_Pixel285:
L__Draw_Pixel284:
L__Draw_Pixel283:
L__Draw_Pixel282:
;pcd8544.c, 481 :: 		return;
0x0430	0xE03E    B	L_end_Draw_Pixel
;pcd8544.c, 482 :: 		}
L_Draw_Pixel171:
;pcd8544.c, 484 :: 		row = (y_pos >> 3);
; colour start address is: 24 (R6)
; y_pos start address is: 8 (R2)
; x_pos start address is: 0 (R0)
0x0432	0x08D5    LSRS	R5, R2, #3
0x0434	0xB2ED    UXTB	R5, R5
; row start address is: 4 (R1)
0x0436	0xB2E9    UXTB	R1, R5
;pcd8544.c, 486 :: 		value = PCD8544_buffer[x_pos][row];
0x0438	0x2306    MOVS	R3, #6
0x043A	0xFB03F400  MUL	R4, R3, R0
0x043E	0x4B1E    LDR	R3, [PC, #120]
0x0440	0x191B    ADDS	R3, R3, R4
0x0442	0x195B    ADDS	R3, R3, R5
0x0444	0x781D    LDRB	R5, [R3, #0]
; value start address is: 20 (R5)
;pcd8544.c, 488 :: 		if(colour == BLACK)
0x0446	0xB94E    CBNZ	R6, L_Draw_Pixel172
; colour end address is: 24 (R6)
;pcd8544.c, 490 :: 		value |= (1 << (y_pos % 8));
0x0448	0xF0020407  AND	R4, R2, #7
0x044C	0xB2E4    UXTB	R4, R4
; y_pos end address is: 8 (R2)
0x044E	0x2301    MOVS	R3, #1
0x0450	0x40A3    LSLS	R3, R4
0x0452	0xB29B    UXTH	R3, R3
0x0454	0xEA450303  ORR	R3, R5, R3, LSL #0
0x0458	0xB2DD    UXTB	R5, R3
;pcd8544.c, 491 :: 		}
0x045A	0xE01C    B	L_Draw_Pixel173
L_Draw_Pixel172:
;pcd8544.c, 492 :: 		else if(colour == WHITE)
; colour start address is: 24 (R6)
; y_pos start address is: 8 (R2)
0x045C	0x2E01    CMP	R6, #1
0x045E	0xD10C    BNE	L_Draw_Pixel174
; colour end address is: 24 (R6)
;pcd8544.c, 494 :: 		value &= (~(1 << (y_pos % 8)));
0x0460	0xF0020407  AND	R4, R2, #7
0x0464	0xB2E4    UXTB	R4, R4
; y_pos end address is: 8 (R2)
0x0466	0x2301    MOVS	R3, #1
0x0468	0x40A3    LSLS	R3, R4
0x046A	0xB29B    UXTH	R3, R3
0x046C	0x43DB    MVN	R3, R3
0x046E	0xB29B    UXTH	R3, R3
0x0470	0xEA050303  AND	R3, R5, R3, LSL #0
; value end address is: 20 (R5)
; value start address is: 8 (R2)
0x0474	0xB2DA    UXTB	R2, R3
;pcd8544.c, 495 :: 		}
0x0476	0xB2D5    UXTB	R5, R2
; value end address is: 8 (R2)
0x0478	0xE00D    B	L_Draw_Pixel175
L_Draw_Pixel174:
;pcd8544.c, 496 :: 		else if(colour == PIXEL_XOR)
; value start address is: 20 (R5)
; colour start address is: 24 (R6)
; y_pos start address is: 8 (R2)
0x047A	0x2E02    CMP	R6, #2
0x047C	0xD109    BNE	L__Draw_Pixel286
; colour end address is: 24 (R6)
;pcd8544.c, 498 :: 		value ^= (1 << (y_pos % 8));
0x047E	0xF0020407  AND	R4, R2, #7
0x0482	0xB2E4    UXTB	R4, R4
; y_pos end address is: 8 (R2)
0x0484	0x2301    MOVS	R3, #1
0x0486	0x40A3    LSLS	R3, R4
0x0488	0xB29B    UXTH	R3, R3
0x048A	0xEA850303  EOR	R3, R5, R3, LSL #0
; value end address is: 20 (R5)
; value start address is: 8 (R2)
0x048E	0xB2DA    UXTB	R2, R3
; value end address is: 8 (R2)
;pcd8544.c, 499 :: 		}
0x0490	0xE000    B	L_Draw_Pixel176
L__Draw_Pixel286:
;pcd8544.c, 496 :: 		else if(colour == PIXEL_XOR)
0x0492	0xB2EA    UXTB	R2, R5
;pcd8544.c, 499 :: 		}
L_Draw_Pixel176:
; value start address is: 8 (R2)
0x0494	0xB2D5    UXTB	R5, R2
; value end address is: 8 (R2)
L_Draw_Pixel175:
; value start address is: 20 (R5)
; value end address is: 20 (R5)
L_Draw_Pixel173:
;pcd8544.c, 501 :: 		PCD8544_buffer[x_pos][row] = value;
; value start address is: 20 (R5)
0x0496	0x2306    MOVS	R3, #6
0x0498	0xFB03F400  MUL	R4, R3, R0
0x049C	0x4B06    LDR	R3, [PC, #24]
0x049E	0x191B    ADDS	R3, R3, R4
0x04A0	0x185B    ADDS	R3, R3, R1
0x04A2	0x701D    STRB	R5, [R3, #0]
;pcd8544.c, 503 :: 		PCD8544_set_cursor(x_pos, row);
; row end address is: 4 (R1)
; x_pos end address is: 0 (R0)
0x04A4	0xF7FFFE44  BL	_PCD8544_set_cursor+0
;pcd8544.c, 504 :: 		PCD8544_write(DAT, value);
0x04A8	0xB2E9    UXTB	R1, R5
; value end address is: 20 (R5)
0x04AA	0x2001    MOVS	R0, #1
0x04AC	0xF7FFFE90  BL	_PCD8544_write+0
;pcd8544.c, 505 :: 		}
L_end_Draw_Pixel:
0x04B0	0xF8DDE000  LDR	LR, [SP, #0]
0x04B4	0xB001    ADD	SP, SP, #4
0x04B6	0x4770    BX	LR
0x04B8	0x00112000  	_PCD8544_buffer+0
; end of _Draw_Pixel
_Draw_Line:
;pcd8544.c, 508 :: 		void Draw_Line(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char colour)
; y2 start address is: 12 (R3)
; x2 start address is: 8 (R2)
; y1 start address is: 4 (R1)
; x1 start address is: 0 (R0)
0x04BC	0xB084    SUB	SP, SP, #16
0x04BE	0xF8CDE000  STR	LR, [SP, #0]
0x04C2	0xB207    SXTH	R7, R0
0x04C4	0xFA0FF881  SXTH	R8, R1
0x04C8	0xFA0FFB82  SXTH	R11, R2
0x04CC	0xFA0FFC83  SXTH	R12, R3
; y2 end address is: 12 (R3)
; x2 end address is: 8 (R2)
; y1 end address is: 4 (R1)
; x1 end address is: 0 (R0)
; x1 start address is: 28 (R7)
; y1 start address is: 32 (R8)
; x2 start address is: 44 (R11)
; y2 start address is: 48 (R12)
; colour start address is: 36 (R9)
0x04D0	0xF89D9010  LDRB	R9, [SP, #16]
;pcd8544.c, 510 :: 		signed int dx = 0x0000;
;pcd8544.c, 511 :: 		signed int dy = 0x0000;
;pcd8544.c, 512 :: 		signed int stepx = 0x0000;
;pcd8544.c, 513 :: 		signed int stepy = 0x0000;
;pcd8544.c, 514 :: 		signed int fraction = 0x0000;
;pcd8544.c, 516 :: 		dy = (y2 - y1);
0x04D4	0xEBAC0508  SUB	R5, R12, R8, LSL #0
0x04D8	0xB22D    SXTH	R5, R5
; dy start address is: 8 (R2)
0x04DA	0xB22A    SXTH	R2, R5
;pcd8544.c, 517 :: 		dx = (x2 - x1);
0x04DC	0xEBAB0007  SUB	R0, R11, R7, LSL #0
0x04E0	0xB200    SXTH	R0, R0
; dx start address is: 0 (R0)
;pcd8544.c, 519 :: 		if (dy < 0)
0x04E2	0x2D00    CMP	R5, #0
0x04E4	0xDA06    BGE	L_Draw_Line177
;pcd8544.c, 521 :: 		dy = -dy;
0x04E6	0x4252    RSBS	R2, R2, #0
0x04E8	0xB212    SXTH	R2, R2
;pcd8544.c, 522 :: 		stepy = -1;
; stepy start address is: 40 (R10)
0x04EA	0xF64F7AFF  MOVW	R10, #65535
0x04EE	0xFA0FFA8A  SXTH	R10, R10
;pcd8544.c, 523 :: 		}
; stepy end address is: 40 (R10)
0x04F2	0xE003    B	L_Draw_Line178
L_Draw_Line177:
;pcd8544.c, 526 :: 		stepy = 1;
; stepy start address is: 40 (R10)
0x04F4	0xF2400A01  MOVW	R10, #1
0x04F8	0xFA0FFA8A  SXTH	R10, R10
; dy end address is: 8 (R2)
; stepy end address is: 40 (R10)
;pcd8544.c, 527 :: 		}
L_Draw_Line178:
;pcd8544.c, 529 :: 		if (dx < 0)
; stepy start address is: 40 (R10)
; dy start address is: 8 (R2)
0x04FC	0x2800    CMP	R0, #0
0x04FE	0xDA05    BGE	L_Draw_Line179
;pcd8544.c, 531 :: 		dx = -dx;
0x0500	0x4240    RSBS	R0, R0, #0
0x0502	0xB200    SXTH	R0, R0
;pcd8544.c, 532 :: 		stepx = -1;
; stepx start address is: 4 (R1)
0x0504	0xF64F71FF  MOVW	R1, #65535
0x0508	0xB209    SXTH	R1, R1
;pcd8544.c, 533 :: 		}
; stepx end address is: 4 (R1)
0x050A	0xE001    B	L_Draw_Line180
L_Draw_Line179:
;pcd8544.c, 536 :: 		stepx = 1;
; stepx start address is: 4 (R1)
0x050C	0x2101    MOVS	R1, #1
0x050E	0xB209    SXTH	R1, R1
; stepx end address is: 4 (R1)
; dx end address is: 0 (R0)
;pcd8544.c, 537 :: 		}
L_Draw_Line180:
;pcd8544.c, 539 :: 		dx <<= 0x01;
; stepx start address is: 4 (R1)
; dx start address is: 0 (R0)
0x0510	0x0040    LSLS	R0, R0, #1
0x0512	0xB200    SXTH	R0, R0
;pcd8544.c, 540 :: 		dy <<= 0x01;
0x0514	0x0054    LSLS	R4, R2, #1
; dy end address is: 8 (R2)
; dy start address is: 12 (R3)
0x0516	0xB223    SXTH	R3, R4
;pcd8544.c, 542 :: 		Draw_Pixel(x1, y1, colour);
0x0518	0xF8AD3004  STRH	R3, [SP, #4]
0x051C	0xF8AD0006  STRH	R0, [SP, #6]
0x0520	0xF8AD1008  STRH	R1, [SP, #8]
0x0524	0xFA5FF289  UXTB	R2, R9
0x0528	0xFA5FF188  UXTB	R1, R8
0x052C	0xB2F8    UXTB	R0, R7
0x052E	0xF7FFFF71  BL	_Draw_Pixel+0
0x0532	0xF9BD1008  LDRSH	R1, [SP, #8]
0x0536	0xF9BD0006  LDRSH	R0, [SP, #6]
0x053A	0xF9BD3004  LDRSH	R3, [SP, #4]
;pcd8544.c, 544 :: 		if (dx > dy)
0x053E	0x4298    CMP	R0, R3
0x0540	0xDD32    BLE	L_Draw_Line181
; y2 end address is: 48 (R12)
;pcd8544.c, 546 :: 		fraction = (dy - (dx >> 1));
0x0542	0x1044    ASRS	R4, R0, #1
0x0544	0xB224    SXTH	R4, R4
0x0546	0x1B1A    SUB	R2, R3, R4
0x0548	0xB212    SXTH	R2, R2
; fraction start address is: 8 (R2)
; x2 end address is: 44 (R11)
; stepx end address is: 4 (R1)
; dx end address is: 0 (R0)
; dy end address is: 12 (R3)
; y1 end address is: 32 (R8)
; x1 end address is: 28 (R7)
; fraction end address is: 8 (R2)
0x054A	0xFA0FFC80  SXTH	R12, R0
0x054E	0xB208    SXTH	R0, R1
0x0550	0xFA0FF18B  SXTH	R1, R11
0x0554	0xFA0FFB83  SXTH	R11, R3
0x0558	0xB23B    SXTH	R3, R7
;pcd8544.c, 547 :: 		while (x1 != x2)
L_Draw_Line182:
; fraction start address is: 8 (R2)
; stepx start address is: 0 (R0)
; dx start address is: 48 (R12)
; dy start address is: 44 (R11)
; dy start address is: 44 (R11)
; dy end address is: 44 (R11)
; dx start address is: 48 (R12)
; dx end address is: 48 (R12)
; stepx start address is: 0 (R0)
; stepx end address is: 0 (R0)
; stepy start address is: 40 (R10)
; stepy end address is: 40 (R10)
; colour start address is: 36 (R9)
; colour end address is: 36 (R9)
; x2 start address is: 4 (R1)
; y1 start address is: 32 (R8)
; x1 start address is: 12 (R3)
0x055A	0x428B    CMP	R3, R1
0x055C	0xD023    BEQ	L_Draw_Line183
; dy end address is: 44 (R11)
; dx end address is: 48 (R12)
; stepx end address is: 0 (R0)
; colour end address is: 36 (R9)
; stepy end address is: 40 (R10)
;pcd8544.c, 549 :: 		if (fraction >= 0)
; stepy start address is: 40 (R10)
; colour start address is: 36 (R9)
; stepx start address is: 0 (R0)
; dx start address is: 48 (R12)
; dy start address is: 44 (R11)
0x055E	0x2A00    CMP	R2, #0
0x0560	0xDB07    BLT	L__Draw_Line287
;pcd8544.c, 551 :: 		y1 += stepy;
0x0562	0xEB08080A  ADD	R8, R8, R10, LSL #0
0x0566	0xFA0FF888  SXTH	R8, R8
;pcd8544.c, 552 :: 		fraction -= dx;
0x056A	0xEBA2020C  SUB	R2, R2, R12, LSL #0
0x056E	0xB212    SXTH	R2, R2
; y1 end address is: 32 (R8)
; fraction end address is: 8 (R2)
;pcd8544.c, 553 :: 		}
0x0570	0xE7FF    B	L_Draw_Line184
L__Draw_Line287:
;pcd8544.c, 549 :: 		if (fraction >= 0)
;pcd8544.c, 553 :: 		}
L_Draw_Line184:
;pcd8544.c, 554 :: 		x1 += stepx;
; fraction start address is: 8 (R2)
; y1 start address is: 32 (R8)
0x0572	0x181D    ADDS	R5, R3, R0
; x1 end address is: 12 (R3)
; x1 start address is: 28 (R7)
0x0574	0xB22F    SXTH	R7, R5
;pcd8544.c, 555 :: 		fraction += dy;
0x0576	0xEB02020B  ADD	R2, R2, R11, LSL #0
0x057A	0xB212    SXTH	R2, R2
;pcd8544.c, 557 :: 		Draw_Pixel(x1, y1, colour);
0x057C	0xF8AD2004  STRH	R2, [SP, #4]
0x0580	0xF8AD1008  STRH	R1, [SP, #8]
0x0584	0xF8AD000A  STRH	R0, [SP, #10]
0x0588	0xFA5FF289  UXTB	R2, R9
0x058C	0xFA5FF188  UXTB	R1, R8
0x0590	0xB2E8    UXTB	R0, R5
0x0592	0xF7FFFF3F  BL	_Draw_Pixel+0
0x0596	0xF9BD000A  LDRSH	R0, [SP, #10]
0x059A	0xF9BD1008  LDRSH	R1, [SP, #8]
0x059E	0xF9BD2004  LDRSH	R2, [SP, #4]
;pcd8544.c, 558 :: 		}
0x05A2	0xB23B    SXTH	R3, R7
; dy end address is: 44 (R11)
; dx end address is: 48 (R12)
; stepx end address is: 0 (R0)
; colour end address is: 36 (R9)
; x2 end address is: 4 (R1)
; y1 end address is: 32 (R8)
; x1 end address is: 28 (R7)
; stepy end address is: 40 (R10)
; fraction end address is: 8 (R2)
0x05A4	0xE7D9    B	L_Draw_Line182
L_Draw_Line183:
;pcd8544.c, 559 :: 		}
0x05A6	0xE032    B	L_Draw_Line185
L_Draw_Line181:
;pcd8544.c, 562 :: 		fraction = (dx - (dy >> 1));
; y2 start address is: 48 (R12)
; stepy start address is: 40 (R10)
; x1 start address is: 28 (R7)
; y1 start address is: 32 (R8)
; colour start address is: 36 (R9)
; dy start address is: 12 (R3)
; dx start address is: 0 (R0)
; stepx start address is: 4 (R1)
0x05A8	0x105C    ASRS	R4, R3, #1
0x05AA	0xB224    SXTH	R4, R4
0x05AC	0x1B02    SUB	R2, R0, R4
0x05AE	0xB212    SXTH	R2, R2
; fraction start address is: 8 (R2)
; stepx end address is: 4 (R1)
; dx end address is: 0 (R0)
; dy end address is: 12 (R3)
; colour end address is: 36 (R9)
; y1 end address is: 32 (R8)
; x1 end address is: 28 (R7)
; y2 end address is: 48 (R12)
; fraction end address is: 8 (R2)
0x05B0	0xF8AD0004  STRH	R0, [SP, #4]
0x05B4	0xFA5FFB89  UXTB	R11, R9
0x05B8	0xFA0FF981  SXTH	R9, R1
0x05BC	0xB239    SXTH	R1, R7
0x05BE	0xB21F    SXTH	R7, R3
0x05C0	0xFA0FF088  SXTH	R0, R8
0x05C4	0xF9BD8004  LDRSH	R8, [SP, #4]
;pcd8544.c, 564 :: 		while (y1 != y2)
L_Draw_Line186:
; fraction start address is: 8 (R2)
; colour start address is: 44 (R11)
; stepx start address is: 36 (R9)
; dx start address is: 32 (R8)
; dy start address is: 28 (R7)
; dy start address is: 28 (R7)
; dy end address is: 28 (R7)
; dx start address is: 32 (R8)
; dx end address is: 32 (R8)
; stepx start address is: 36 (R9)
; stepx end address is: 36 (R9)
; stepy start address is: 40 (R10)
; stepy end address is: 40 (R10)
; colour start address is: 44 (R11)
; colour end address is: 44 (R11)
; y2 start address is: 48 (R12)
; y1 start address is: 0 (R0)
; x1 start address is: 4 (R1)
0x05C8	0x4560    CMP	R0, R12
0x05CA	0xD020    BEQ	L_Draw_Line187
; dy end address is: 28 (R7)
; dx end address is: 32 (R8)
; stepx end address is: 36 (R9)
; stepy end address is: 40 (R10)
; colour end address is: 44 (R11)
;pcd8544.c, 566 :: 		if (fraction >= 0)
; colour start address is: 44 (R11)
; stepy start address is: 40 (R10)
; stepx start address is: 36 (R9)
; dx start address is: 32 (R8)
; dy start address is: 28 (R7)
0x05CC	0x2A00    CMP	R2, #0
0x05CE	0xDB05    BLT	L__Draw_Line288
;pcd8544.c, 568 :: 		x1 += stepx;
0x05D0	0xEB010109  ADD	R1, R1, R9, LSL #0
0x05D4	0xB209    SXTH	R1, R1
;pcd8544.c, 569 :: 		fraction -= dy;
0x05D6	0x1BD2    SUB	R2, R2, R7
0x05D8	0xB212    SXTH	R2, R2
; x1 end address is: 4 (R1)
; fraction end address is: 8 (R2)
;pcd8544.c, 570 :: 		}
0x05DA	0xE7FF    B	L_Draw_Line188
L__Draw_Line288:
;pcd8544.c, 566 :: 		if (fraction >= 0)
;pcd8544.c, 570 :: 		}
L_Draw_Line188:
;pcd8544.c, 571 :: 		y1 += stepy;
; fraction start address is: 8 (R2)
; x1 start address is: 4 (R1)
0x05DC	0xEB00050A  ADD	R5, R0, R10, LSL #0
0x05E0	0xB228    SXTH	R0, R5
;pcd8544.c, 572 :: 		fraction += dx;
0x05E2	0xEB020208  ADD	R2, R2, R8, LSL #0
0x05E6	0xB212    SXTH	R2, R2
;pcd8544.c, 573 :: 		Draw_Pixel(x1, y1, colour);
0x05E8	0xF8AD2004  STRH	R2, [SP, #4]
0x05EC	0xF8AD0008  STRH	R0, [SP, #8]
0x05F0	0xF8AD100C  STRH	R1, [SP, #12]
0x05F4	0xFA5FF28B  UXTB	R2, R11
0x05F8	0xB2C8    UXTB	R0, R1
0x05FA	0xB2E9    UXTB	R1, R5
0x05FC	0xF7FFFF0A  BL	_Draw_Pixel+0
0x0600	0xF9BD100C  LDRSH	R1, [SP, #12]
0x0604	0xF9BD0008  LDRSH	R0, [SP, #8]
0x0608	0xF9BD2004  LDRSH	R2, [SP, #4]
;pcd8544.c, 574 :: 		}
; dy end address is: 28 (R7)
; dx end address is: 32 (R8)
; stepx end address is: 36 (R9)
; stepy end address is: 40 (R10)
; colour end address is: 44 (R11)
; y2 end address is: 48 (R12)
; x1 end address is: 4 (R1)
; y1 end address is: 0 (R0)
; fraction end address is: 8 (R2)
0x060C	0xE7DC    B	L_Draw_Line186
L_Draw_Line187:
;pcd8544.c, 575 :: 		}
L_Draw_Line185:
;pcd8544.c, 576 :: 		}
L_end_Draw_Line:
0x060E	0xF8DDE000  LDR	LR, [SP, #0]
0x0612	0xB004    ADD	SP, SP, #16
0x0614	0x4770    BX	LR
; end of _Draw_Line
_Draw_Circle:
;pcd8544.c, 630 :: 		void Draw_Circle(signed int xc, signed int yc, signed int radius, unsigned char fill, unsigned char colour)
; radius start address is: 8 (R2)
0x1240	0xB086    SUB	SP, SP, #24
0x1242	0xF8CDE000  STR	LR, [SP, #0]
0x1246	0xF8AD000C  STRH	R0, [SP, #12]
0x124A	0xB210    SXTH	R0, R2
0x124C	0xF8AD1010  STRH	R1, [SP, #16]
0x1250	0xF88D3014  STRB	R3, [SP, #20]
; radius end address is: 8 (R2)
; radius start address is: 0 (R0)
0x1254	0xF89D4018  LDRB	R4, [SP, #24]
0x1258	0xF88D4018  STRB	R4, [SP, #24]
;pcd8544.c, 632 :: 		signed int a = 0x0000;
0x125C	0xF2400400  MOVW	R4, #0
0x1260	0xF8AD4004  STRH	R4, [SP, #4]
;pcd8544.c, 633 :: 		signed int b = 0x0000;
;pcd8544.c, 634 :: 		signed int p = 0x0000;
;pcd8544.c, 636 :: 		b = radius;
0x1264	0xF8AD0006  STRH	R0, [SP, #6]
;pcd8544.c, 637 :: 		p = (1 - b);
0x1268	0xF1C00401  RSB	R4, R0, #1
; radius end address is: 0 (R0)
0x126C	0xF8AD4008  STRH	R4, [SP, #8]
;pcd8544.c, 639 :: 		do
L_Draw_Circle201:
;pcd8544.c, 641 :: 		if(fill != NO)
0x1270	0xF89D4014  LDRB	R4, [SP, #20]
0x1274	0x2C00    CMP	R4, #0
0x1276	0xD068    BEQ	L_Draw_Circle204
;pcd8544.c, 643 :: 		Draw_Line((xc - a), (yc + b), (xc + a), (yc + b), colour);
0x1278	0xF89D8018  LDRB	R8, [SP, #24]
0x127C	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1280	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1284	0x1967    ADDS	R7, R4, R5
0x1286	0xF9BD5004  LDRSH	R5, [SP, #4]
0x128A	0xF9BD400C  LDRSH	R4, [SP, #12]
0x128E	0x1966    ADDS	R6, R4, R5
0x1290	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1294	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1298	0x1B64    SUB	R4, R4, R5
0x129A	0xB23B    SXTH	R3, R7
0x129C	0xB232    SXTH	R2, R6
0x129E	0xB239    SXTH	R1, R7
0x12A0	0xB220    SXTH	R0, R4
0x12A2	0xF84D8D04  PUSH	(R8)
0x12A6	0xF7FFF909  BL	_Draw_Line+0
0x12AA	0xB001    ADD	SP, SP, #4
;pcd8544.c, 644 :: 		Draw_Line((xc - a), (yc - b), (xc + a), (yc - b), colour);
0x12AC	0xF89D8018  LDRB	R8, [SP, #24]
0x12B0	0xF9BD5006  LDRSH	R5, [SP, #6]
0x12B4	0xF9BD4010  LDRSH	R4, [SP, #16]
0x12B8	0x1B67    SUB	R7, R4, R5
0x12BA	0xF9BD5004  LDRSH	R5, [SP, #4]
0x12BE	0xF9BD400C  LDRSH	R4, [SP, #12]
0x12C2	0x1966    ADDS	R6, R4, R5
0x12C4	0xF9BD5004  LDRSH	R5, [SP, #4]
0x12C8	0xF9BD400C  LDRSH	R4, [SP, #12]
0x12CC	0x1B64    SUB	R4, R4, R5
0x12CE	0xB23B    SXTH	R3, R7
0x12D0	0xB232    SXTH	R2, R6
0x12D2	0xB239    SXTH	R1, R7
0x12D4	0xB220    SXTH	R0, R4
0x12D6	0xF84D8D04  PUSH	(R8)
0x12DA	0xF7FFF8EF  BL	_Draw_Line+0
0x12DE	0xB001    ADD	SP, SP, #4
;pcd8544.c, 645 :: 		Draw_Line((xc - b), (yc + a), (xc + b), (yc + a), colour);
0x12E0	0xF89D8018  LDRB	R8, [SP, #24]
0x12E4	0xF9BD5004  LDRSH	R5, [SP, #4]
0x12E8	0xF9BD4010  LDRSH	R4, [SP, #16]
0x12EC	0x1967    ADDS	R7, R4, R5
0x12EE	0xF9BD5006  LDRSH	R5, [SP, #6]
0x12F2	0xF9BD400C  LDRSH	R4, [SP, #12]
0x12F6	0x1966    ADDS	R6, R4, R5
0x12F8	0xF9BD5006  LDRSH	R5, [SP, #6]
0x12FC	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1300	0x1B64    SUB	R4, R4, R5
0x1302	0xB23B    SXTH	R3, R7
0x1304	0xB232    SXTH	R2, R6
0x1306	0xB239    SXTH	R1, R7
0x1308	0xB220    SXTH	R0, R4
0x130A	0xF84D8D04  PUSH	(R8)
0x130E	0xF7FFF8D5  BL	_Draw_Line+0
0x1312	0xB001    ADD	SP, SP, #4
;pcd8544.c, 646 :: 		Draw_Line((xc - b), (yc - a), (xc + b), (yc - a), colour);
0x1314	0xF89D8018  LDRB	R8, [SP, #24]
0x1318	0xF9BD5004  LDRSH	R5, [SP, #4]
0x131C	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1320	0x1B67    SUB	R7, R4, R5
0x1322	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1326	0xF9BD400C  LDRSH	R4, [SP, #12]
0x132A	0x1966    ADDS	R6, R4, R5
0x132C	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1330	0xF9BD400C  LDRSH	R4, [SP, #12]
0x1334	0x1B64    SUB	R4, R4, R5
0x1336	0xB23B    SXTH	R3, R7
0x1338	0xB232    SXTH	R2, R6
0x133A	0xB239    SXTH	R1, R7
0x133C	0xB220    SXTH	R0, R4
0x133E	0xF84D8D04  PUSH	(R8)
0x1342	0xF7FFF8BB  BL	_Draw_Line+0
0x1346	0xB001    ADD	SP, SP, #4
;pcd8544.c, 647 :: 		}
0x1348	0xE07F    B	L_Draw_Circle205
L_Draw_Circle204:
;pcd8544.c, 650 :: 		Draw_Pixel((xc + a), (yc + b), colour);
0x134A	0xF9BD5006  LDRSH	R5, [SP, #6]
0x134E	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1352	0x1966    ADDS	R6, R4, R5
0x1354	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1358	0xF9BD400C  LDRSH	R4, [SP, #12]
0x135C	0x1964    ADDS	R4, R4, R5
0x135E	0xF89D2018  LDRB	R2, [SP, #24]
0x1362	0xB2F1    UXTB	R1, R6
0x1364	0xB2E0    UXTB	R0, R4
0x1366	0xF7FFF855  BL	_Draw_Pixel+0
;pcd8544.c, 651 :: 		Draw_Pixel((xc + b), (yc + a), colour);
0x136A	0xF9BD5004  LDRSH	R5, [SP, #4]
0x136E	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1372	0x1966    ADDS	R6, R4, R5
0x1374	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1378	0xF9BD400C  LDRSH	R4, [SP, #12]
0x137C	0x1964    ADDS	R4, R4, R5
0x137E	0xF89D2018  LDRB	R2, [SP, #24]
0x1382	0xB2F1    UXTB	R1, R6
0x1384	0xB2E0    UXTB	R0, R4
0x1386	0xF7FFF845  BL	_Draw_Pixel+0
;pcd8544.c, 652 :: 		Draw_Pixel((xc - a), (yc + b), colour);
0x138A	0xF9BD5006  LDRSH	R5, [SP, #6]
0x138E	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1392	0x1966    ADDS	R6, R4, R5
0x1394	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1398	0xF9BD400C  LDRSH	R4, [SP, #12]
0x139C	0x1B64    SUB	R4, R4, R5
0x139E	0xF89D2018  LDRB	R2, [SP, #24]
0x13A2	0xB2F1    UXTB	R1, R6
0x13A4	0xB2E0    UXTB	R0, R4
0x13A6	0xF7FFF835  BL	_Draw_Pixel+0
;pcd8544.c, 653 :: 		Draw_Pixel((xc - b), (yc + a), colour);
0x13AA	0xF9BD5004  LDRSH	R5, [SP, #4]
0x13AE	0xF9BD4010  LDRSH	R4, [SP, #16]
0x13B2	0x1966    ADDS	R6, R4, R5
0x13B4	0xF9BD5006  LDRSH	R5, [SP, #6]
0x13B8	0xF9BD400C  LDRSH	R4, [SP, #12]
0x13BC	0x1B64    SUB	R4, R4, R5
0x13BE	0xF89D2018  LDRB	R2, [SP, #24]
0x13C2	0xB2F1    UXTB	R1, R6
0x13C4	0xB2E0    UXTB	R0, R4
0x13C6	0xF7FFF825  BL	_Draw_Pixel+0
;pcd8544.c, 654 :: 		Draw_Pixel((xc + b), (yc - a), colour);
0x13CA	0xF9BD5004  LDRSH	R5, [SP, #4]
0x13CE	0xF9BD4010  LDRSH	R4, [SP, #16]
0x13D2	0x1B66    SUB	R6, R4, R5
0x13D4	0xF9BD5006  LDRSH	R5, [SP, #6]
0x13D8	0xF9BD400C  LDRSH	R4, [SP, #12]
0x13DC	0x1964    ADDS	R4, R4, R5
0x13DE	0xF89D2018  LDRB	R2, [SP, #24]
0x13E2	0xB2F1    UXTB	R1, R6
0x13E4	0xB2E0    UXTB	R0, R4
0x13E6	0xF7FFF815  BL	_Draw_Pixel+0
;pcd8544.c, 655 :: 		Draw_Pixel((xc + a), (yc - b), colour);
0x13EA	0xF9BD5006  LDRSH	R5, [SP, #6]
0x13EE	0xF9BD4010  LDRSH	R4, [SP, #16]
0x13F2	0x1B66    SUB	R6, R4, R5
0x13F4	0xF9BD5004  LDRSH	R5, [SP, #4]
0x13F8	0xF9BD400C  LDRSH	R4, [SP, #12]
0x13FC	0x1964    ADDS	R4, R4, R5
0x13FE	0xF89D2018  LDRB	R2, [SP, #24]
0x1402	0xB2F1    UXTB	R1, R6
0x1404	0xB2E0    UXTB	R0, R4
0x1406	0xF7FFF805  BL	_Draw_Pixel+0
;pcd8544.c, 656 :: 		Draw_Pixel((xc - a), (yc - b), colour);
0x140A	0xF9BD5006  LDRSH	R5, [SP, #6]
0x140E	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1412	0x1B66    SUB	R6, R4, R5
0x1414	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1418	0xF9BD400C  LDRSH	R4, [SP, #12]
0x141C	0x1B64    SUB	R4, R4, R5
0x141E	0xF89D2018  LDRB	R2, [SP, #24]
0x1422	0xB2F1    UXTB	R1, R6
0x1424	0xB2E0    UXTB	R0, R4
0x1426	0xF7FEFFF5  BL	_Draw_Pixel+0
;pcd8544.c, 657 :: 		Draw_Pixel((xc - b), (yc - a), colour);
0x142A	0xF9BD5004  LDRSH	R5, [SP, #4]
0x142E	0xF9BD4010  LDRSH	R4, [SP, #16]
0x1432	0x1B66    SUB	R6, R4, R5
0x1434	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1438	0xF9BD400C  LDRSH	R4, [SP, #12]
0x143C	0x1B64    SUB	R4, R4, R5
0x143E	0xF89D2018  LDRB	R2, [SP, #24]
0x1442	0xB2F1    UXTB	R1, R6
0x1444	0xB2E0    UXTB	R0, R4
0x1446	0xF7FEFFE5  BL	_Draw_Pixel+0
;pcd8544.c, 658 :: 		}
L_Draw_Circle205:
;pcd8544.c, 660 :: 		if(p < 0)
0x144A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x144E	0x2C00    CMP	R4, #0
0x1450	0xDA10    BGE	L_Draw_Circle206
;pcd8544.c, 662 :: 		p += (0x03 + (0x02 * a++));
0x1452	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1456	0x0064    LSLS	R4, R4, #1
0x1458	0xB224    SXTH	R4, R4
0x145A	0x1CE5    ADDS	R5, R4, #3
0x145C	0xB22D    SXTH	R5, R5
0x145E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1462	0x1964    ADDS	R4, R4, R5
0x1464	0xF8AD4008  STRH	R4, [SP, #8]
0x1468	0xF9BD4004  LDRSH	R4, [SP, #4]
0x146C	0x1C64    ADDS	R4, R4, #1
0x146E	0xF8AD4004  STRH	R4, [SP, #4]
;pcd8544.c, 663 :: 		}
0x1472	0xE018    B	L_Draw_Circle207
L_Draw_Circle206:
;pcd8544.c, 666 :: 		p += (0x05 + (0x02 * ((a++) - (b--))));
0x1474	0xF9BD5006  LDRSH	R5, [SP, #6]
0x1478	0xF9BD4004  LDRSH	R4, [SP, #4]
0x147C	0x1B64    SUB	R4, R4, R5
0x147E	0xB224    SXTH	R4, R4
0x1480	0x0064    LSLS	R4, R4, #1
0x1482	0xB224    SXTH	R4, R4
0x1484	0x1D65    ADDS	R5, R4, #5
0x1486	0xB22D    SXTH	R5, R5
0x1488	0xF9BD4008  LDRSH	R4, [SP, #8]
0x148C	0x1964    ADDS	R4, R4, R5
0x148E	0xF8AD4008  STRH	R4, [SP, #8]
0x1492	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1496	0x1C64    ADDS	R4, R4, #1
0x1498	0xF8AD4004  STRH	R4, [SP, #4]
0x149C	0xF9BD4006  LDRSH	R4, [SP, #6]
0x14A0	0x1E64    SUBS	R4, R4, #1
0x14A2	0xF8AD4006  STRH	R4, [SP, #6]
;pcd8544.c, 667 :: 		}
L_Draw_Circle207:
;pcd8544.c, 668 :: 		}while(a <= b);
0x14A6	0xF9BD5006  LDRSH	R5, [SP, #6]
0x14AA	0xF9BD4004  LDRSH	R4, [SP, #4]
0x14AE	0x42AC    CMP	R4, R5
0x14B0	0xF77FAEDE  BLE	L_Draw_Circle201
;pcd8544.c, 669 :: 		}
L_end_Draw_Circle:
0x14B4	0xF8DDE000  LDR	LR, [SP, #0]
0x14B8	0xB006    ADD	SP, SP, #24
0x14BA	0x4770    BX	LR
; end of _Draw_Circle
_print_chr:
;pcd8544.c, 215 :: 		void print_chr(unsigned char x_pos, unsigned char y_pos, signed int value, unsigned char colour)
; colour start address is: 12 (R3)
; value start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x14BC	0xB081    SUB	SP, SP, #4
0x14BE	0xF8CDE000  STR	LR, [SP, #0]
0x14C2	0xB2C7    UXTB	R7, R0
0x14C4	0xFA5FF881  UXTB	R8, R1
0x14C8	0xFA0FFA82  SXTH	R10, R2
0x14CC	0xFA5FF983  UXTB	R9, R3
; colour end address is: 12 (R3)
; value end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 28 (R7)
; y_pos start address is: 32 (R8)
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
;pcd8544.c, 217 :: 		unsigned char ch = 0x00;
;pcd8544.c, 219 :: 		if(value < 0)
0x14D0	0xF1BA0F00  CMP	R10, #0
0x14D4	0xDA0E    BGE	L_print_chr117
;pcd8544.c, 221 :: 		PCD8544_set_cursor(x_pos, y_pos);
0x14D6	0xFA5FF188  UXTB	R1, R8
0x14DA	0xB2F8    UXTB	R0, R7
0x14DC	0xF7FEFE28  BL	_PCD8544_set_cursor+0
;pcd8544.c, 222 :: 		PCD8544_print_char(0x2D, colour);
0x14E0	0xFA5FF189  UXTB	R1, R9
0x14E4	0x202D    MOVS	R0, #45
0x14E6	0xF7FEFE37  BL	_PCD8544_print_char+0
;pcd8544.c, 223 :: 		value = -value;
0x14EA	0xF1CA0A00  RSB	R10, R10, #0
0x14EE	0xFA0FFA8A  SXTH	R10, R10
;pcd8544.c, 224 :: 		}
0x14F2	0xE009    B	L_print_chr118
L_print_chr117:
;pcd8544.c, 227 :: 		PCD8544_set_cursor(x_pos, y_pos);
0x14F4	0xFA5FF188  UXTB	R1, R8
0x14F8	0xB2F8    UXTB	R0, R7
0x14FA	0xF7FEFE19  BL	_PCD8544_set_cursor+0
;pcd8544.c, 228 :: 		PCD8544_print_char(0x20, colour);
0x14FE	0xFA5FF189  UXTB	R1, R9
0x1502	0x2020    MOVS	R0, #32
0x1504	0xF7FEFE28  BL	_PCD8544_print_char+0
; value end address is: 40 (R10)
;pcd8544.c, 229 :: 		}
L_print_chr118:
;pcd8544.c, 231 :: 		if((value > 99) && (value <= 999))
; value start address is: 40 (R10)
0x1508	0xF1BA0F63  CMP	R10, #99
0x150C	0xDD45    BLE	L__print_chr255
0x150E	0xF24034E7  MOVW	R4, #999
0x1512	0x45A2    CMP	R10, R4
0x1514	0xDC41    BGT	L__print_chr254
L__print_chr253:
;pcd8544.c, 233 :: 		ch = (value / 100);
0x1516	0x2464    MOVS	R4, #100
0x1518	0xB224    SXTH	R4, R4
0x151A	0xFB9AF4F4  SDIV	R4, R10, R4
; ch start address is: 20 (R5)
0x151E	0xB2E5    UXTB	R5, R4
;pcd8544.c, 234 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x1520	0x1DBC    ADDS	R4, R7, #6
0x1522	0xFA5FF188  UXTB	R1, R8
0x1526	0xB2E0    UXTB	R0, R4
0x1528	0xF7FEFE02  BL	_PCD8544_set_cursor+0
;pcd8544.c, 235 :: 		PCD8544_print_char((48 + ch), colour);
0x152C	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x1530	0xFA5FF189  UXTB	R1, R9
0x1534	0xB2E0    UXTB	R0, R4
0x1536	0xF7FEFE0F  BL	_PCD8544_print_char+0
;pcd8544.c, 237 :: 		ch = ((value % 100) / 10);
0x153A	0x2464    MOVS	R4, #100
0x153C	0xB224    SXTH	R4, R4
0x153E	0xFB9AF5F4  SDIV	R5, R10, R4
0x1542	0xFB04A515  MLS	R5, R4, R5, R10
0x1546	0xB22D    SXTH	R5, R5
0x1548	0x240A    MOVS	R4, #10
0x154A	0xB224    SXTH	R4, R4
0x154C	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x1550	0xB2E5    UXTB	R5, R4
;pcd8544.c, 238 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x1552	0xF207040C  ADDW	R4, R7, #12
0x1556	0xFA5FF188  UXTB	R1, R8
0x155A	0xB2E0    UXTB	R0, R4
0x155C	0xF7FEFDE8  BL	_PCD8544_set_cursor+0
;pcd8544.c, 239 :: 		PCD8544_print_char((48 + ch), colour);
0x1560	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x1564	0xFA5FF189  UXTB	R1, R9
0x1568	0xB2E0    UXTB	R0, R4
0x156A	0xF7FEFDF5  BL	_PCD8544_print_char+0
;pcd8544.c, 241 :: 		ch = (value % 10);
0x156E	0x250A    MOVS	R5, #10
0x1570	0xB22D    SXTH	R5, R5
0x1572	0xFB9AF4F5  SDIV	R4, R10, R5
0x1576	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x157A	0xB2E5    UXTB	R5, R4
;pcd8544.c, 242 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x157C	0xF2070412  ADDW	R4, R7, #18
; x_pos end address is: 28 (R7)
0x1580	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x1584	0xB2E0    UXTB	R0, R4
0x1586	0xF7FEFDD3  BL	_PCD8544_set_cursor+0
;pcd8544.c, 243 :: 		PCD8544_print_char((48 + ch), colour);
0x158A	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x158E	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x1592	0xB2E0    UXTB	R0, R4
0x1594	0xF7FEFDE0  BL	_PCD8544_print_char+0
;pcd8544.c, 244 :: 		}
0x1598	0xE072    B	L_print_chr122
;pcd8544.c, 231 :: 		if((value > 99) && (value <= 999))
L__print_chr255:
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__print_chr254:
;pcd8544.c, 245 :: 		else if((value > 9) && (value <= 99))
0x159A	0xF1BA0F09  CMP	R10, #9
0x159E	0xDD3D    BLE	L__print_chr257
0x15A0	0xF1BA0F63  CMP	R10, #99
0x15A4	0xDC3A    BGT	L__print_chr256
L__print_chr252:
;pcd8544.c, 247 :: 		ch = ((value % 100) / 10);
0x15A6	0x2464    MOVS	R4, #100
0x15A8	0xB224    SXTH	R4, R4
0x15AA	0xFB9AF5F4  SDIV	R5, R10, R4
0x15AE	0xFB04A515  MLS	R5, R4, R5, R10
0x15B2	0xB22D    SXTH	R5, R5
0x15B4	0x240A    MOVS	R4, #10
0x15B6	0xB224    SXTH	R4, R4
0x15B8	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x15BC	0xB2E5    UXTB	R5, R4
;pcd8544.c, 248 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x15BE	0x1DBC    ADDS	R4, R7, #6
0x15C0	0xFA5FF188  UXTB	R1, R8
0x15C4	0xB2E0    UXTB	R0, R4
0x15C6	0xF7FEFDB3  BL	_PCD8544_set_cursor+0
;pcd8544.c, 249 :: 		PCD8544_print_char((48 + ch), colour);
0x15CA	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x15CE	0xFA5FF189  UXTB	R1, R9
0x15D2	0xB2E0    UXTB	R0, R4
0x15D4	0xF7FEFDC0  BL	_PCD8544_print_char+0
;pcd8544.c, 251 :: 		ch = (value % 10);
0x15D8	0x250A    MOVS	R5, #10
0x15DA	0xB22D    SXTH	R5, R5
0x15DC	0xFB9AF4F5  SDIV	R4, R10, R5
0x15E0	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x15E4	0xB2E5    UXTB	R5, R4
;pcd8544.c, 252 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x15E6	0xF207040C  ADDW	R4, R7, #12
0x15EA	0xFA5FF188  UXTB	R1, R8
0x15EE	0xB2E0    UXTB	R0, R4
0x15F0	0xF7FEFD9E  BL	_PCD8544_set_cursor+0
;pcd8544.c, 253 :: 		PCD8544_print_char((48 + ch), colour);
0x15F4	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x15F8	0xFA5FF189  UXTB	R1, R9
0x15FC	0xB2E0    UXTB	R0, R4
0x15FE	0xF7FEFDAB  BL	_PCD8544_print_char+0
;pcd8544.c, 255 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x1602	0xF2070412  ADDW	R4, R7, #18
; x_pos end address is: 28 (R7)
0x1606	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x160A	0xB2E0    UXTB	R0, R4
0x160C	0xF7FEFD90  BL	_PCD8544_set_cursor+0
;pcd8544.c, 256 :: 		PCD8544_print_char(0x20, colour);
0x1610	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x1614	0x2020    MOVS	R0, #32
0x1616	0xF7FEFD9F  BL	_PCD8544_print_char+0
;pcd8544.c, 257 :: 		}
0x161A	0xE031    B	L_print_chr126
;pcd8544.c, 245 :: 		else if((value > 9) && (value <= 99))
L__print_chr257:
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__print_chr256:
;pcd8544.c, 258 :: 		else if((value >= 0) && (value <= 9))
0x161C	0xF1BA0F00  CMP	R10, #0
0x1620	0xDB2E    BLT	L__print_chr259
0x1622	0xF1BA0F09  CMP	R10, #9
0x1626	0xDC2B    BGT	L__print_chr258
L__print_chr251:
;pcd8544.c, 260 :: 		ch = (value % 10);
0x1628	0x250A    MOVS	R5, #10
0x162A	0xB22D    SXTH	R5, R5
0x162C	0xFB9AF4F5  SDIV	R4, R10, R5
0x1630	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x1634	0xB2E5    UXTB	R5, R4
;pcd8544.c, 261 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x1636	0x1DBC    ADDS	R4, R7, #6
0x1638	0xFA5FF188  UXTB	R1, R8
0x163C	0xB2E0    UXTB	R0, R4
0x163E	0xF7FEFD77  BL	_PCD8544_set_cursor+0
;pcd8544.c, 262 :: 		PCD8544_print_char((48 + ch), colour);
0x1642	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x1646	0xFA5FF189  UXTB	R1, R9
0x164A	0xB2E0    UXTB	R0, R4
0x164C	0xF7FEFD84  BL	_PCD8544_print_char+0
;pcd8544.c, 264 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x1650	0xF207040C  ADDW	R4, R7, #12
0x1654	0xFA5FF188  UXTB	R1, R8
0x1658	0xB2E0    UXTB	R0, R4
0x165A	0xF7FEFD69  BL	_PCD8544_set_cursor+0
;pcd8544.c, 265 :: 		PCD8544_print_char(0x20, colour);
0x165E	0xFA5FF189  UXTB	R1, R9
0x1662	0x2020    MOVS	R0, #32
0x1664	0xF7FEFD78  BL	_PCD8544_print_char+0
;pcd8544.c, 267 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x1668	0xF2070412  ADDW	R4, R7, #18
; x_pos end address is: 28 (R7)
0x166C	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x1670	0xB2E0    UXTB	R0, R4
0x1672	0xF7FEFD5D  BL	_PCD8544_set_cursor+0
;pcd8544.c, 268 :: 		PCD8544_print_char(0x20, colour);
0x1676	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x167A	0x2020    MOVS	R0, #32
0x167C	0xF7FEFD6C  BL	_PCD8544_print_char+0
;pcd8544.c, 258 :: 		else if((value >= 0) && (value <= 9))
L__print_chr259:
L__print_chr258:
;pcd8544.c, 269 :: 		}
L_print_chr126:
L_print_chr122:
;pcd8544.c, 270 :: 		}
L_end_print_chr:
0x1680	0xF8DDE000  LDR	LR, [SP, #0]
0x1684	0xB001    ADD	SP, SP, #4
0x1686	0x4770    BX	LR
; end of _print_chr
_print_int:
;pcd8544.c, 273 :: 		void print_int(unsigned char x_pos, unsigned char y_pos, signed long value, unsigned char colour)
; colour start address is: 12 (R3)
; value start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0DA8	0xB081    SUB	SP, SP, #4
0x0DAA	0xF8CDE000  STR	LR, [SP, #0]
0x0DAE	0xB2C7    UXTB	R7, R0
0x0DB0	0xFA5FF881  UXTB	R8, R1
0x0DB4	0x4692    MOV	R10, R2
0x0DB6	0xFA5FF983  UXTB	R9, R3
; colour end address is: 12 (R3)
; value end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 28 (R7)
; y_pos start address is: 32 (R8)
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
;pcd8544.c, 275 :: 		unsigned char ch = 0x00;
;pcd8544.c, 277 :: 		if(value < 0)
0x0DBA	0xF1BA0F00  CMP	R10, #0
0x0DBE	0xDA0C    BGE	L_print_int130
;pcd8544.c, 279 :: 		PCD8544_set_cursor(x_pos, y_pos);
0x0DC0	0xFA5FF188  UXTB	R1, R8
0x0DC4	0xB2F8    UXTB	R0, R7
0x0DC6	0xF7FFF9B3  BL	_PCD8544_set_cursor+0
;pcd8544.c, 280 :: 		PCD8544_print_char(0x2D, colour);
0x0DCA	0xFA5FF189  UXTB	R1, R9
0x0DCE	0x202D    MOVS	R0, #45
0x0DD0	0xF7FFF9C2  BL	_PCD8544_print_char+0
;pcd8544.c, 281 :: 		value = -value;
0x0DD4	0xF1CA0A00  RSB	R10, R10, #0
;pcd8544.c, 282 :: 		}
0x0DD8	0xE009    B	L_print_int131
L_print_int130:
;pcd8544.c, 285 :: 		PCD8544_set_cursor(x_pos, y_pos);
0x0DDA	0xFA5FF188  UXTB	R1, R8
0x0DDE	0xB2F8    UXTB	R0, R7
0x0DE0	0xF7FFF9A6  BL	_PCD8544_set_cursor+0
;pcd8544.c, 286 :: 		PCD8544_print_char(0x20, colour);
0x0DE4	0xFA5FF189  UXTB	R1, R9
0x0DE8	0x2020    MOVS	R0, #32
0x0DEA	0xF7FFF9B5  BL	_PCD8544_print_char+0
; value end address is: 40 (R10)
;pcd8544.c, 287 :: 		}
L_print_int131:
;pcd8544.c, 289 :: 		if(value > 9999)
; value start address is: 40 (R10)
0x0DEE	0xF242740F  MOVW	R4, #9999
0x0DF2	0x45A2    CMP	R10, R4
0x0DF4	0xDD6E    BLE	L_print_int132
;pcd8544.c, 291 :: 		ch = (value / 10000);
0x0DF6	0xF2427410  MOVW	R4, #10000
0x0DFA	0xFB9AF4F4  SDIV	R4, R10, R4
; ch start address is: 20 (R5)
0x0DFE	0xB2E5    UXTB	R5, R4
;pcd8544.c, 292 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x0E00	0x1DBC    ADDS	R4, R7, #6
0x0E02	0xFA5FF188  UXTB	R1, R8
0x0E06	0xB2E0    UXTB	R0, R4
0x0E08	0xF7FFF992  BL	_PCD8544_set_cursor+0
;pcd8544.c, 293 :: 		PCD8544_print_char((48 + ch), colour);
0x0E0C	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0E10	0xFA5FF189  UXTB	R1, R9
0x0E14	0xB2E0    UXTB	R0, R4
0x0E16	0xF7FFF99F  BL	_PCD8544_print_char+0
;pcd8544.c, 295 :: 		ch = ((value % 10000)/ 1000);
0x0E1A	0xF2427410  MOVW	R4, #10000
0x0E1E	0xFB9AF5F4  SDIV	R5, R10, R4
0x0E22	0xFB04A515  MLS	R5, R4, R5, R10
0x0E26	0xF24034E8  MOVW	R4, #1000
0x0E2A	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0E2E	0xB2E5    UXTB	R5, R4
;pcd8544.c, 296 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x0E30	0xF207040C  ADDW	R4, R7, #12
0x0E34	0xFA5FF188  UXTB	R1, R8
0x0E38	0xB2E0    UXTB	R0, R4
0x0E3A	0xF7FFF979  BL	_PCD8544_set_cursor+0
;pcd8544.c, 297 :: 		PCD8544_print_char((48 + ch), colour);
0x0E3E	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0E42	0xFA5FF189  UXTB	R1, R9
0x0E46	0xB2E0    UXTB	R0, R4
0x0E48	0xF7FFF986  BL	_PCD8544_print_char+0
;pcd8544.c, 299 :: 		ch = ((value % 1000) / 100);
0x0E4C	0xF24034E8  MOVW	R4, #1000
0x0E50	0xFB9AF5F4  SDIV	R5, R10, R4
0x0E54	0xFB04A515  MLS	R5, R4, R5, R10
0x0E58	0x2464    MOVS	R4, #100
0x0E5A	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0E5E	0xB2E5    UXTB	R5, R4
;pcd8544.c, 300 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x0E60	0xF2070412  ADDW	R4, R7, #18
0x0E64	0xFA5FF188  UXTB	R1, R8
0x0E68	0xB2E0    UXTB	R0, R4
0x0E6A	0xF7FFF961  BL	_PCD8544_set_cursor+0
;pcd8544.c, 301 :: 		PCD8544_print_char((48 + ch), colour);
0x0E6E	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0E72	0xFA5FF189  UXTB	R1, R9
0x0E76	0xB2E0    UXTB	R0, R4
0x0E78	0xF7FFF96E  BL	_PCD8544_print_char+0
;pcd8544.c, 303 :: 		ch = ((value % 100) / 10);
0x0E7C	0x2464    MOVS	R4, #100
0x0E7E	0xFB9AF5F4  SDIV	R5, R10, R4
0x0E82	0xFB04A515  MLS	R5, R4, R5, R10
0x0E86	0x240A    MOVS	R4, #10
0x0E88	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0E8C	0xB2E5    UXTB	R5, R4
;pcd8544.c, 304 :: 		PCD8544_set_cursor((x_pos + 24), y_pos);
0x0E8E	0xF2070418  ADDW	R4, R7, #24
0x0E92	0xFA5FF188  UXTB	R1, R8
0x0E96	0xB2E0    UXTB	R0, R4
0x0E98	0xF7FFF94A  BL	_PCD8544_set_cursor+0
;pcd8544.c, 305 :: 		PCD8544_print_char((48 + ch), colour);
0x0E9C	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0EA0	0xFA5FF189  UXTB	R1, R9
0x0EA4	0xB2E0    UXTB	R0, R4
0x0EA6	0xF7FFF957  BL	_PCD8544_print_char+0
;pcd8544.c, 307 :: 		ch = (value % 10);
0x0EAA	0x250A    MOVS	R5, #10
0x0EAC	0xFB9AF4F5  SDIV	R4, R10, R5
0x0EB0	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x0EB4	0xB2E5    UXTB	R5, R4
;pcd8544.c, 308 :: 		PCD8544_set_cursor((x_pos + 30), y_pos);
0x0EB6	0xF207041E  ADDW	R4, R7, #30
; x_pos end address is: 28 (R7)
0x0EBA	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0EBE	0xB2E0    UXTB	R0, R4
0x0EC0	0xF7FFF936  BL	_PCD8544_set_cursor+0
;pcd8544.c, 309 :: 		PCD8544_print_char((48 + ch), colour);
0x0EC4	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0EC8	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x0ECC	0xB2E0    UXTB	R0, R4
0x0ECE	0xF7FFF943  BL	_PCD8544_print_char+0
;pcd8544.c, 310 :: 		}
0x0ED2	0xE169    B	L_print_int133
L_print_int132:
;pcd8544.c, 312 :: 		else if((value > 999) && (value <= 9999))
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
0x0ED4	0xF24034E7  MOVW	R4, #999
0x0ED8	0x45A2    CMP	R10, R4
0x0EDA	0xDD6B    BLE	L__print_int264
0x0EDC	0xF242740F  MOVW	R4, #9999
0x0EE0	0x45A2    CMP	R10, R4
0x0EE2	0xDC67    BGT	L__print_int263
L__print_int262:
;pcd8544.c, 314 :: 		ch = ((value % 10000)/ 1000);
0x0EE4	0xF2427410  MOVW	R4, #10000
0x0EE8	0xFB9AF5F4  SDIV	R5, R10, R4
0x0EEC	0xFB04A515  MLS	R5, R4, R5, R10
0x0EF0	0xF24034E8  MOVW	R4, #1000
0x0EF4	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0EF8	0xB2E5    UXTB	R5, R4
;pcd8544.c, 315 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x0EFA	0x1DBC    ADDS	R4, R7, #6
0x0EFC	0xFA5FF188  UXTB	R1, R8
0x0F00	0xB2E0    UXTB	R0, R4
0x0F02	0xF7FFF915  BL	_PCD8544_set_cursor+0
;pcd8544.c, 316 :: 		PCD8544_print_char((48 + ch), colour);
0x0F06	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0F0A	0xFA5FF189  UXTB	R1, R9
0x0F0E	0xB2E0    UXTB	R0, R4
0x0F10	0xF7FFF922  BL	_PCD8544_print_char+0
;pcd8544.c, 318 :: 		ch = ((value % 1000) / 100);
0x0F14	0xF24034E8  MOVW	R4, #1000
0x0F18	0xFB9AF5F4  SDIV	R5, R10, R4
0x0F1C	0xFB04A515  MLS	R5, R4, R5, R10
0x0F20	0x2464    MOVS	R4, #100
0x0F22	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0F26	0xB2E5    UXTB	R5, R4
;pcd8544.c, 319 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x0F28	0xF207040C  ADDW	R4, R7, #12
0x0F2C	0xFA5FF188  UXTB	R1, R8
0x0F30	0xB2E0    UXTB	R0, R4
0x0F32	0xF7FFF8FD  BL	_PCD8544_set_cursor+0
;pcd8544.c, 320 :: 		PCD8544_print_char((48 + ch), colour);
0x0F36	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0F3A	0xFA5FF189  UXTB	R1, R9
0x0F3E	0xB2E0    UXTB	R0, R4
0x0F40	0xF7FFF90A  BL	_PCD8544_print_char+0
;pcd8544.c, 322 :: 		ch = ((value % 100) / 10);
0x0F44	0x2464    MOVS	R4, #100
0x0F46	0xFB9AF5F4  SDIV	R5, R10, R4
0x0F4A	0xFB04A515  MLS	R5, R4, R5, R10
0x0F4E	0x240A    MOVS	R4, #10
0x0F50	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0F54	0xB2E5    UXTB	R5, R4
;pcd8544.c, 323 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x0F56	0xF2070412  ADDW	R4, R7, #18
0x0F5A	0xFA5FF188  UXTB	R1, R8
0x0F5E	0xB2E0    UXTB	R0, R4
0x0F60	0xF7FFF8E6  BL	_PCD8544_set_cursor+0
;pcd8544.c, 324 :: 		PCD8544_print_char((48 + ch), colour);
0x0F64	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0F68	0xFA5FF189  UXTB	R1, R9
0x0F6C	0xB2E0    UXTB	R0, R4
0x0F6E	0xF7FFF8F3  BL	_PCD8544_print_char+0
;pcd8544.c, 326 :: 		ch = (value % 10);
0x0F72	0x250A    MOVS	R5, #10
0x0F74	0xFB9AF4F5  SDIV	R4, R10, R5
0x0F78	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x0F7C	0xB2E5    UXTB	R5, R4
;pcd8544.c, 327 :: 		PCD8544_set_cursor((x_pos + 24), y_pos);
0x0F7E	0xF2070418  ADDW	R4, R7, #24
0x0F82	0xFA5FF188  UXTB	R1, R8
0x0F86	0xB2E0    UXTB	R0, R4
0x0F88	0xF7FFF8D2  BL	_PCD8544_set_cursor+0
;pcd8544.c, 328 :: 		PCD8544_print_char((48 + ch), colour);
0x0F8C	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0F90	0xFA5FF189  UXTB	R1, R9
0x0F94	0xB2E0    UXTB	R0, R4
0x0F96	0xF7FFF8DF  BL	_PCD8544_print_char+0
;pcd8544.c, 330 :: 		PCD8544_set_cursor((x_pos + 30), y_pos);
0x0F9A	0xF207041E  ADDW	R4, R7, #30
; x_pos end address is: 28 (R7)
0x0F9E	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x0FA2	0xB2E0    UXTB	R0, R4
0x0FA4	0xF7FFF8C4  BL	_PCD8544_set_cursor+0
;pcd8544.c, 331 :: 		PCD8544_print_char(0x20, colour);
0x0FA8	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x0FAC	0x2020    MOVS	R0, #32
0x0FAE	0xF7FFF8D3  BL	_PCD8544_print_char+0
;pcd8544.c, 332 :: 		}
0x0FB2	0xE0F9    B	L_print_int137
;pcd8544.c, 312 :: 		else if((value > 999) && (value <= 9999))
L__print_int264:
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__print_int263:
;pcd8544.c, 333 :: 		else if((value > 99) && (value <= 999))
0x0FB4	0xF1BA0F63  CMP	R10, #99
0x0FB8	0xDD5E    BLE	L__print_int266
0x0FBA	0xF24034E7  MOVW	R4, #999
0x0FBE	0x45A2    CMP	R10, R4
0x0FC0	0xDC5A    BGT	L__print_int265
L__print_int261:
;pcd8544.c, 335 :: 		ch = ((value % 1000) / 100);
0x0FC2	0xF24034E8  MOVW	R4, #1000
0x0FC6	0xFB9AF5F4  SDIV	R5, R10, R4
0x0FCA	0xFB04A515  MLS	R5, R4, R5, R10
0x0FCE	0x2464    MOVS	R4, #100
0x0FD0	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0FD4	0xB2E5    UXTB	R5, R4
;pcd8544.c, 336 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x0FD6	0x1DBC    ADDS	R4, R7, #6
0x0FD8	0xFA5FF188  UXTB	R1, R8
0x0FDC	0xB2E0    UXTB	R0, R4
0x0FDE	0xF7FFF8A7  BL	_PCD8544_set_cursor+0
;pcd8544.c, 337 :: 		PCD8544_print_char((48 + ch), colour);
0x0FE2	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0FE6	0xFA5FF189  UXTB	R1, R9
0x0FEA	0xB2E0    UXTB	R0, R4
0x0FEC	0xF7FFF8B4  BL	_PCD8544_print_char+0
;pcd8544.c, 339 :: 		ch = ((value % 100) / 10);
0x0FF0	0x2464    MOVS	R4, #100
0x0FF2	0xFB9AF5F4  SDIV	R5, R10, R4
0x0FF6	0xFB04A515  MLS	R5, R4, R5, R10
0x0FFA	0x240A    MOVS	R4, #10
0x0FFC	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x1000	0xB2E5    UXTB	R5, R4
;pcd8544.c, 340 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x1002	0xF207040C  ADDW	R4, R7, #12
0x1006	0xFA5FF188  UXTB	R1, R8
0x100A	0xB2E0    UXTB	R0, R4
0x100C	0xF7FFF890  BL	_PCD8544_set_cursor+0
;pcd8544.c, 341 :: 		PCD8544_print_char((48 + ch), colour);
0x1010	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x1014	0xFA5FF189  UXTB	R1, R9
0x1018	0xB2E0    UXTB	R0, R4
0x101A	0xF7FFF89D  BL	_PCD8544_print_char+0
;pcd8544.c, 343 :: 		ch = (value % 10);
0x101E	0x250A    MOVS	R5, #10
0x1020	0xFB9AF4F5  SDIV	R4, R10, R5
0x1024	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x1028	0xB2E5    UXTB	R5, R4
;pcd8544.c, 344 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x102A	0xF2070412  ADDW	R4, R7, #18
0x102E	0xFA5FF188  UXTB	R1, R8
0x1032	0xB2E0    UXTB	R0, R4
0x1034	0xF7FFF87C  BL	_PCD8544_set_cursor+0
;pcd8544.c, 345 :: 		PCD8544_print_char((48 + ch), colour);
0x1038	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x103C	0xFA5FF189  UXTB	R1, R9
0x1040	0xB2E0    UXTB	R0, R4
0x1042	0xF7FFF889  BL	_PCD8544_print_char+0
;pcd8544.c, 347 :: 		PCD8544_set_cursor((x_pos + 24), y_pos);
0x1046	0xF2070418  ADDW	R4, R7, #24
0x104A	0xFA5FF188  UXTB	R1, R8
0x104E	0xB2E0    UXTB	R0, R4
0x1050	0xF7FFF86E  BL	_PCD8544_set_cursor+0
;pcd8544.c, 348 :: 		PCD8544_print_char(0x20, colour);
0x1054	0xFA5FF189  UXTB	R1, R9
0x1058	0x2020    MOVS	R0, #32
0x105A	0xF7FFF87D  BL	_PCD8544_print_char+0
;pcd8544.c, 350 :: 		PCD8544_set_cursor((x_pos + 30), y_pos);
0x105E	0xF207041E  ADDW	R4, R7, #30
; x_pos end address is: 28 (R7)
0x1062	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x1066	0xB2E0    UXTB	R0, R4
0x1068	0xF7FFF862  BL	_PCD8544_set_cursor+0
;pcd8544.c, 351 :: 		PCD8544_print_char(0x20, colour);
0x106C	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x1070	0x2020    MOVS	R0, #32
0x1072	0xF7FFF871  BL	_PCD8544_print_char+0
;pcd8544.c, 352 :: 		}
0x1076	0xE097    B	L_print_int141
;pcd8544.c, 333 :: 		else if((value > 99) && (value <= 999))
L__print_int266:
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__print_int265:
;pcd8544.c, 353 :: 		else if((value > 9) && (value <= 99))
0x1078	0xF1BA0F09  CMP	R10, #9
0x107C	0xDD51    BLE	L__print_int268
0x107E	0xF1BA0F63  CMP	R10, #99
0x1082	0xDC4E    BGT	L__print_int267
L__print_int260:
;pcd8544.c, 355 :: 		ch = ((value % 100) / 10);
0x1084	0x2464    MOVS	R4, #100
0x1086	0xFB9AF5F4  SDIV	R5, R10, R4
0x108A	0xFB04A515  MLS	R5, R4, R5, R10
0x108E	0x240A    MOVS	R4, #10
0x1090	0xFB95F4F4  SDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x1094	0xB2E5    UXTB	R5, R4
;pcd8544.c, 356 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x1096	0x1DBC    ADDS	R4, R7, #6
0x1098	0xFA5FF188  UXTB	R1, R8
0x109C	0xB2E0    UXTB	R0, R4
0x109E	0xF7FFF847  BL	_PCD8544_set_cursor+0
;pcd8544.c, 357 :: 		PCD8544_print_char((48 + ch), colour);
0x10A2	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x10A6	0xFA5FF189  UXTB	R1, R9
0x10AA	0xB2E0    UXTB	R0, R4
0x10AC	0xF7FFF854  BL	_PCD8544_print_char+0
;pcd8544.c, 359 :: 		ch = (value % 10);
0x10B0	0x250A    MOVS	R5, #10
0x10B2	0xFB9AF4F5  SDIV	R4, R10, R5
0x10B6	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x10BA	0xB2E5    UXTB	R5, R4
;pcd8544.c, 360 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x10BC	0xF207040C  ADDW	R4, R7, #12
0x10C0	0xFA5FF188  UXTB	R1, R8
0x10C4	0xB2E0    UXTB	R0, R4
0x10C6	0xF7FFF833  BL	_PCD8544_set_cursor+0
;pcd8544.c, 361 :: 		PCD8544_print_char((48 + ch), colour);
0x10CA	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x10CE	0xFA5FF189  UXTB	R1, R9
0x10D2	0xB2E0    UXTB	R0, R4
0x10D4	0xF7FFF840  BL	_PCD8544_print_char+0
;pcd8544.c, 363 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x10D8	0xF2070412  ADDW	R4, R7, #18
0x10DC	0xFA5FF188  UXTB	R1, R8
0x10E0	0xB2E0    UXTB	R0, R4
0x10E2	0xF7FFF825  BL	_PCD8544_set_cursor+0
;pcd8544.c, 364 :: 		PCD8544_print_char(0x20, colour);
0x10E6	0xFA5FF189  UXTB	R1, R9
0x10EA	0x2020    MOVS	R0, #32
0x10EC	0xF7FFF834  BL	_PCD8544_print_char+0
;pcd8544.c, 366 :: 		PCD8544_set_cursor((x_pos + 24), y_pos);
0x10F0	0xF2070418  ADDW	R4, R7, #24
0x10F4	0xFA5FF188  UXTB	R1, R8
0x10F8	0xB2E0    UXTB	R0, R4
0x10FA	0xF7FFF819  BL	_PCD8544_set_cursor+0
;pcd8544.c, 367 :: 		PCD8544_print_char(0x20, colour);
0x10FE	0xFA5FF189  UXTB	R1, R9
0x1102	0x2020    MOVS	R0, #32
0x1104	0xF7FFF828  BL	_PCD8544_print_char+0
;pcd8544.c, 369 :: 		PCD8544_set_cursor((x_pos + 30), y_pos);
0x1108	0xF207041E  ADDW	R4, R7, #30
; x_pos end address is: 28 (R7)
0x110C	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x1110	0xB2E0    UXTB	R0, R4
0x1112	0xF7FFF80D  BL	_PCD8544_set_cursor+0
;pcd8544.c, 370 :: 		PCD8544_print_char(0x20, colour);
0x1116	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x111A	0x2020    MOVS	R0, #32
0x111C	0xF7FFF81C  BL	_PCD8544_print_char+0
;pcd8544.c, 371 :: 		}
0x1120	0xE042    B	L_print_int145
;pcd8544.c, 353 :: 		else if((value > 9) && (value <= 99))
L__print_int268:
; value start address is: 40 (R10)
; colour start address is: 36 (R9)
; y_pos start address is: 32 (R8)
; x_pos start address is: 28 (R7)
L__print_int267:
;pcd8544.c, 374 :: 		ch = (value % 10);
0x1122	0x250A    MOVS	R5, #10
0x1124	0xFB9AF4F5  SDIV	R4, R10, R5
0x1128	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x112C	0xB2E5    UXTB	R5, R4
;pcd8544.c, 375 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x112E	0x1DBC    ADDS	R4, R7, #6
0x1130	0xFA5FF188  UXTB	R1, R8
0x1134	0xB2E0    UXTB	R0, R4
0x1136	0xF7FEFFFB  BL	_PCD8544_set_cursor+0
;pcd8544.c, 376 :: 		PCD8544_print_char((48 + ch), colour);
0x113A	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x113E	0xFA5FF189  UXTB	R1, R9
0x1142	0xB2E0    UXTB	R0, R4
0x1144	0xF7FFF808  BL	_PCD8544_print_char+0
;pcd8544.c, 378 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x1148	0xF207040C  ADDW	R4, R7, #12
0x114C	0xFA5FF188  UXTB	R1, R8
0x1150	0xB2E0    UXTB	R0, R4
0x1152	0xF7FEFFED  BL	_PCD8544_set_cursor+0
;pcd8544.c, 379 :: 		PCD8544_print_char(0x20, colour);
0x1156	0xFA5FF189  UXTB	R1, R9
0x115A	0x2020    MOVS	R0, #32
0x115C	0xF7FEFFFC  BL	_PCD8544_print_char+0
;pcd8544.c, 381 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x1160	0xF2070412  ADDW	R4, R7, #18
0x1164	0xFA5FF188  UXTB	R1, R8
0x1168	0xB2E0    UXTB	R0, R4
0x116A	0xF7FEFFE1  BL	_PCD8544_set_cursor+0
;pcd8544.c, 382 :: 		PCD8544_print_char(0x20, colour);
0x116E	0xFA5FF189  UXTB	R1, R9
0x1172	0x2020    MOVS	R0, #32
0x1174	0xF7FEFFF0  BL	_PCD8544_print_char+0
;pcd8544.c, 384 :: 		PCD8544_set_cursor((x_pos + 24), y_pos);
0x1178	0xF2070418  ADDW	R4, R7, #24
0x117C	0xFA5FF188  UXTB	R1, R8
0x1180	0xB2E0    UXTB	R0, R4
0x1182	0xF7FEFFD5  BL	_PCD8544_set_cursor+0
;pcd8544.c, 385 :: 		PCD8544_print_char(0x20, colour);
0x1186	0xFA5FF189  UXTB	R1, R9
0x118A	0x2020    MOVS	R0, #32
0x118C	0xF7FEFFE4  BL	_PCD8544_print_char+0
;pcd8544.c, 387 :: 		PCD8544_set_cursor((x_pos + 30), y_pos);
0x1190	0xF207041E  ADDW	R4, R7, #30
; x_pos end address is: 28 (R7)
0x1194	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x1198	0xB2E0    UXTB	R0, R4
0x119A	0xF7FEFFC9  BL	_PCD8544_set_cursor+0
;pcd8544.c, 388 :: 		PCD8544_print_char(0x20, colour);
0x119E	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x11A2	0x2020    MOVS	R0, #32
0x11A4	0xF7FEFFD8  BL	_PCD8544_print_char+0
;pcd8544.c, 389 :: 		}
L_print_int145:
L_print_int141:
L_print_int137:
L_print_int133:
;pcd8544.c, 390 :: 		}
L_end_print_int:
0x11A8	0xF8DDE000  LDR	LR, [SP, #0]
0x11AC	0xB001    ADD	SP, SP, #4
0x11AE	0x4770    BX	LR
; end of _print_int
_print_float:
;pcd8544.c, 428 :: 		void print_float(unsigned char x_pos, unsigned char y_pos, float value, unsigned char points, unsigned char colour)
; value start address is: 8 (R2)
; x_pos start address is: 0 (R0)
0x0A38	0xB087    SUB	SP, SP, #28
0x0A3A	0xF8CDE000  STR	LR, [SP, #0]
0x0A3E	0xFA5FFC80  UXTB	R12, R0
0x0A42	0xF88D1010  STRB	R1, [SP, #16]
0x0A46	0x4611    MOV	R1, R2
0x0A48	0xF88D3014  STRB	R3, [SP, #20]
; value end address is: 8 (R2)
; x_pos end address is: 0 (R0)
; x_pos start address is: 48 (R12)
; value start address is: 4 (R1)
; colour start address is: 12 (R3)
0x0A4C	0xF89D301C  LDRB	R3, [SP, #28]
;pcd8544.c, 430 :: 		signed long tmp = 0x00;
;pcd8544.c, 432 :: 		tmp = ((signed long)value);
0x0A50	0x9101    STR	R1, [SP, #4]
0x0A52	0x4608    MOV	R0, R1
0x0A54	0xF7FFFDE0  BL	__FloatToSignedIntegral+0
0x0A58	0x9901    LDR	R1, [SP, #4]
0x0A5A	0x9003    STR	R0, [SP, #12]
;pcd8544.c, 433 :: 		print_int(x_pos, y_pos, tmp, colour);
0x0A5C	0xF88D3004  STRB	R3, [SP, #4]
0x0A60	0x9102    STR	R1, [SP, #8]
0x0A62	0x4602    MOV	R2, R0
0x0A64	0xF89D1010  LDRB	R1, [SP, #16]
0x0A68	0xFA5FF08C  UXTB	R0, R12
0x0A6C	0xF000F99C  BL	_print_int+0
0x0A70	0x9902    LDR	R1, [SP, #8]
0x0A72	0xF89D3004  LDRB	R3, [SP, #4]
;pcd8544.c, 434 :: 		tmp = ((value - tmp) * 10000);
0x0A76	0x9101    STR	R1, [SP, #4]
0x0A78	0x9803    LDR	R0, [SP, #12]
0x0A7A	0xF7FFFE71  BL	__SignedIntegralToFloat+0
0x0A7E	0x9901    LDR	R1, [SP, #4]
0x0A80	0x9006    STR	R0, [SP, #24]
0x0A82	0x9006    STR	R0, [SP, #24]
0x0A84	0x9A06    LDR	R2, [SP, #24]
0x0A86	0xF88D3004  STRB	R3, [SP, #4]
0x0A8A	0x9102    STR	R1, [SP, #8]
0x0A8C	0x4608    MOV	R0, R1
0x0A8E	0xF7FFFDE5  BL	__Sub_FP+0
0x0A92	0x4A6B    LDR	R2, [PC, #428]
0x0A94	0xF7FFFE84  BL	__Mul_FP+0
0x0A98	0x9902    LDR	R1, [SP, #8]
0x0A9A	0xF89D3004  LDRB	R3, [SP, #4]
0x0A9E	0x9101    STR	R1, [SP, #4]
0x0AA0	0xF7FFFDBA  BL	__FloatToSignedIntegral+0
0x0AA4	0x9901    LDR	R1, [SP, #4]
0x0AA6	0x9003    STR	R0, [SP, #12]
;pcd8544.c, 436 :: 		if(tmp < 0)
0x0AA8	0x2800    CMP	R0, #0
0x0AAA	0xDA02    BGE	L_print_float149
;pcd8544.c, 438 :: 		tmp = -tmp;
0x0AAC	0x9C03    LDR	R4, [SP, #12]
0x0AAE	0x4264    RSBS	R4, R4, #0
0x0AB0	0x9403    STR	R4, [SP, #12]
;pcd8544.c, 439 :: 		}
L_print_float149:
;pcd8544.c, 441 :: 		if((value >= 9999) && (value < 99999))
0x0AB2	0x4864    LDR	R0, [PC, #400]
0x0AB4	0x460A    MOV	R2, R1
0x0AB6	0xF7FFFEB9  BL	__Compare_FP+0
0x0ABA	0xF2400000  MOVW	R0, #0
0x0ABE	0xDC00    BGT	L__print_float307
0x0AC0	0x2001    MOVS	R0, #1
L__print_float307:
0x0AC2	0xB1B0    CBZ	R0, L__print_float274
0x0AC4	0x4860    LDR	R0, [PC, #384]
0x0AC6	0x460A    MOV	R2, R1
0x0AC8	0xF7FFFEB0  BL	__Compare_FP+0
0x0ACC	0xF2400000  MOVW	R0, #0
0x0AD0	0xDD00    BLE	L__print_float308
0x0AD2	0x2001    MOVS	R0, #1
L__print_float308:
0x0AD4	0xB168    CBZ	R0, L__print_float273
; value end address is: 4 (R1)
L__print_float272:
;pcd8544.c, 443 :: 		print_decimal((x_pos + 36), y_pos, tmp, points, colour);
0x0AD6	0xB2DD    UXTB	R5, R3
; colour end address is: 12 (R3)
0x0AD8	0xF10C0424  ADD	R4, R12, #36
; x_pos end address is: 48 (R12)
0x0ADC	0xF89D3014  LDRB	R3, [SP, #20]
0x0AE0	0x9A03    LDR	R2, [SP, #12]
0x0AE2	0xF89D1010  LDRB	R1, [SP, #16]
0x0AE6	0xB2E0    UXTB	R0, R4
0x0AE8	0xB420    PUSH	(R5)
0x0AEA	0xF7FFFED3  BL	_print_decimal+0
0x0AEE	0xB001    ADD	SP, SP, #4
;pcd8544.c, 444 :: 		}
0x0AF0	0xE0A2    B	L_print_float153
;pcd8544.c, 441 :: 		if((value >= 9999) && (value < 99999))
L__print_float274:
; colour start address is: 12 (R3)
; value start address is: 4 (R1)
; x_pos start address is: 48 (R12)
L__print_float273:
;pcd8544.c, 445 :: 		else if((value >= 999) && (value < 9999))
0x0AF2	0x4856    LDR	R0, [PC, #344]
0x0AF4	0x460A    MOV	R2, R1
0x0AF6	0xF7FFFE99  BL	__Compare_FP+0
0x0AFA	0xF2400000  MOVW	R0, #0
0x0AFE	0xDC00    BGT	L__print_float309
0x0B00	0x2001    MOVS	R0, #1
L__print_float309:
0x0B02	0xB1B0    CBZ	R0, L__print_float276
0x0B04	0x484F    LDR	R0, [PC, #316]
0x0B06	0x460A    MOV	R2, R1
0x0B08	0xF7FFFE90  BL	__Compare_FP+0
0x0B0C	0xF2400000  MOVW	R0, #0
0x0B10	0xDD00    BLE	L__print_float310
0x0B12	0x2001    MOVS	R0, #1
L__print_float310:
0x0B14	0xB168    CBZ	R0, L__print_float275
; value end address is: 4 (R1)
L__print_float271:
;pcd8544.c, 447 :: 		print_decimal((x_pos + 30), y_pos, tmp, points, colour);
0x0B16	0xB2DD    UXTB	R5, R3
; colour end address is: 12 (R3)
0x0B18	0xF10C041E  ADD	R4, R12, #30
; x_pos end address is: 48 (R12)
0x0B1C	0xF89D3014  LDRB	R3, [SP, #20]
0x0B20	0x9A03    LDR	R2, [SP, #12]
0x0B22	0xF89D1010  LDRB	R1, [SP, #16]
0x0B26	0xB2E0    UXTB	R0, R4
0x0B28	0xB420    PUSH	(R5)
0x0B2A	0xF7FFFEB3  BL	_print_decimal+0
0x0B2E	0xB001    ADD	SP, SP, #4
;pcd8544.c, 448 :: 		}
0x0B30	0xE082    B	L_print_float157
;pcd8544.c, 445 :: 		else if((value >= 999) && (value < 9999))
L__print_float276:
; colour start address is: 12 (R3)
; value start address is: 4 (R1)
; x_pos start address is: 48 (R12)
L__print_float275:
;pcd8544.c, 449 :: 		else if((value >= 99) && (value < 999))
0x0B32	0x4847    LDR	R0, [PC, #284]
0x0B34	0x460A    MOV	R2, R1
0x0B36	0xF7FFFE79  BL	__Compare_FP+0
0x0B3A	0xF2400000  MOVW	R0, #0
0x0B3E	0xDC00    BGT	L__print_float311
0x0B40	0x2001    MOVS	R0, #1
L__print_float311:
0x0B42	0xB1B0    CBZ	R0, L__print_float278
0x0B44	0x4841    LDR	R0, [PC, #260]
0x0B46	0x460A    MOV	R2, R1
0x0B48	0xF7FFFE70  BL	__Compare_FP+0
0x0B4C	0xF2400000  MOVW	R0, #0
0x0B50	0xDD00    BLE	L__print_float312
0x0B52	0x2001    MOVS	R0, #1
L__print_float312:
0x0B54	0xB168    CBZ	R0, L__print_float277
; value end address is: 4 (R1)
L__print_float270:
;pcd8544.c, 451 :: 		print_decimal((x_pos + 24), y_pos, tmp, points, colour);
0x0B56	0xB2DD    UXTB	R5, R3
; colour end address is: 12 (R3)
0x0B58	0xF10C0418  ADD	R4, R12, #24
; x_pos end address is: 48 (R12)
0x0B5C	0xF89D3014  LDRB	R3, [SP, #20]
0x0B60	0x9A03    LDR	R2, [SP, #12]
0x0B62	0xF89D1010  LDRB	R1, [SP, #16]
0x0B66	0xB2E0    UXTB	R0, R4
0x0B68	0xB420    PUSH	(R5)
0x0B6A	0xF7FFFE93  BL	_print_decimal+0
0x0B6E	0xB001    ADD	SP, SP, #4
;pcd8544.c, 452 :: 		}
0x0B70	0xE062    B	L_print_float161
;pcd8544.c, 449 :: 		else if((value >= 99) && (value < 999))
L__print_float278:
; colour start address is: 12 (R3)
; value start address is: 4 (R1)
; x_pos start address is: 48 (R12)
L__print_float277:
;pcd8544.c, 453 :: 		else if((value >= 9) && (value < 99))
0x0B72	0x4838    LDR	R0, [PC, #224]
0x0B74	0x460A    MOV	R2, R1
0x0B76	0xF7FFFE59  BL	__Compare_FP+0
0x0B7A	0xF2400000  MOVW	R0, #0
0x0B7E	0xDC00    BGT	L__print_float313
0x0B80	0x2001    MOVS	R0, #1
L__print_float313:
0x0B82	0xB1B0    CBZ	R0, L__print_float280
0x0B84	0x4832    LDR	R0, [PC, #200]
0x0B86	0x460A    MOV	R2, R1
0x0B88	0xF7FFFE50  BL	__Compare_FP+0
0x0B8C	0xF2400000  MOVW	R0, #0
0x0B90	0xDD00    BLE	L__print_float314
0x0B92	0x2001    MOVS	R0, #1
L__print_float314:
0x0B94	0xB168    CBZ	R0, L__print_float279
; value end address is: 4 (R1)
L__print_float269:
;pcd8544.c, 455 :: 		print_decimal((x_pos + 18), y_pos, tmp, points, colour);
0x0B96	0xB2DD    UXTB	R5, R3
; colour end address is: 12 (R3)
0x0B98	0xF10C0412  ADD	R4, R12, #18
; x_pos end address is: 48 (R12)
0x0B9C	0xF89D3014  LDRB	R3, [SP, #20]
0x0BA0	0x9A03    LDR	R2, [SP, #12]
0x0BA2	0xF89D1010  LDRB	R1, [SP, #16]
0x0BA6	0xB2E0    UXTB	R0, R4
0x0BA8	0xB420    PUSH	(R5)
0x0BAA	0xF7FFFE73  BL	_print_decimal+0
0x0BAE	0xB001    ADD	SP, SP, #4
;pcd8544.c, 456 :: 		}
0x0BB0	0xE042    B	L_print_float165
;pcd8544.c, 453 :: 		else if((value >= 9) && (value < 99))
L__print_float280:
; colour start address is: 12 (R3)
; value start address is: 4 (R1)
; x_pos start address is: 48 (R12)
L__print_float279:
;pcd8544.c, 457 :: 		else if(value < 9)
0x0BB2	0x4828    LDR	R0, [PC, #160]
0x0BB4	0x460A    MOV	R2, R1
0x0BB6	0xF7FFFE39  BL	__Compare_FP+0
0x0BBA	0xF2400000  MOVW	R0, #0
0x0BBE	0xDD00    BLE	L__print_float315
0x0BC0	0x2001    MOVS	R0, #1
L__print_float315:
0x0BC2	0xB3C8    CBZ	R0, L_print_float166
;pcd8544.c, 459 :: 		print_decimal((x_pos + 12), y_pos, tmp, points, colour);
0x0BC4	0xB2DD    UXTB	R5, R3
0x0BC6	0xF10C040C  ADD	R4, R12, #12
0x0BCA	0xF88D3004  STRB	R3, [SP, #4]
0x0BCE	0x9102    STR	R1, [SP, #8]
0x0BD0	0xF89D3014  LDRB	R3, [SP, #20]
0x0BD4	0x9A03    LDR	R2, [SP, #12]
0x0BD6	0xF89D1010  LDRB	R1, [SP, #16]
0x0BDA	0xB2E0    UXTB	R0, R4
0x0BDC	0xB420    PUSH	(R5)
0x0BDE	0xF7FFFE59  BL	_print_decimal+0
0x0BE2	0xB001    ADD	SP, SP, #4
0x0BE4	0x9902    LDR	R1, [SP, #8]
0x0BE6	0xF89D3004  LDRB	R3, [SP, #4]
;pcd8544.c, 460 :: 		if((value) < 0)
0x0BEA	0xF04F0000  MOV	R0, #0
0x0BEE	0x460A    MOV	R2, R1
0x0BF0	0xF7FFFE1C  BL	__Compare_FP+0
0x0BF4	0xF2400000  MOVW	R0, #0
0x0BF8	0xDD00    BLE	L__print_float316
0x0BFA	0x2001    MOVS	R0, #1
L__print_float316:
; value end address is: 4 (R1)
0x0BFC	0xB170    CBZ	R0, L_print_float167
;pcd8544.c, 462 :: 		PCD8544_set_cursor(x_pos, y_pos);
0x0BFE	0xF88D3004  STRB	R3, [SP, #4]
0x0C02	0xF89D1010  LDRB	R1, [SP, #16]
0x0C06	0xFA5FF08C  UXTB	R0, R12
; x_pos end address is: 48 (R12)
0x0C0A	0xF7FFFA91  BL	_PCD8544_set_cursor+0
0x0C0E	0xF89D3004  LDRB	R3, [SP, #4]
;pcd8544.c, 463 :: 		PCD8544_print_char(0x2D, colour);
0x0C12	0xB2D9    UXTB	R1, R3
; colour end address is: 12 (R3)
0x0C14	0x202D    MOVS	R0, #45
0x0C16	0xF7FFFA9F  BL	_PCD8544_print_char+0
;pcd8544.c, 464 :: 		}
0x0C1A	0xE00D    B	L_print_float168
L_print_float167:
;pcd8544.c, 467 :: 		PCD8544_set_cursor(x_pos, y_pos);
; colour start address is: 12 (R3)
; x_pos start address is: 48 (R12)
0x0C1C	0xF88D3004  STRB	R3, [SP, #4]
0x0C20	0xF89D1010  LDRB	R1, [SP, #16]
0x0C24	0xFA5FF08C  UXTB	R0, R12
; x_pos end address is: 48 (R12)
0x0C28	0xF7FFFA82  BL	_PCD8544_set_cursor+0
0x0C2C	0xF89D3004  LDRB	R3, [SP, #4]
;pcd8544.c, 468 :: 		PCD8544_print_char(0x20, colour);
0x0C30	0xB2D9    UXTB	R1, R3
; colour end address is: 12 (R3)
0x0C32	0x2020    MOVS	R0, #32
0x0C34	0xF7FFFA90  BL	_PCD8544_print_char+0
;pcd8544.c, 469 :: 		}
L_print_float168:
;pcd8544.c, 470 :: 		}
L_print_float166:
L_print_float165:
L_print_float161:
L_print_float157:
L_print_float153:
;pcd8544.c, 471 :: 		}
L_end_print_float:
0x0C38	0xF8DDE000  LDR	LR, [SP, #0]
0x0C3C	0xB007    ADD	SP, SP, #28
0x0C3E	0x4770    BX	LR
0x0C40	0x4000461C  	#1176256512
0x0C44	0x3C00461C  	#1176255488
0x0C48	0x4F8047C3  	#1203982208
0x0C4C	0xC0004479  	#1148829696
0x0C50	0x000042C6  	#1120272384
0x0C54	0x00004110  	#1091567616
; end of _print_float
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0618	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x061A	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x061C	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0620	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x0624	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x0626	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0628	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x062C	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x062E	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x0632	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x0634	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0638	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x063C	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x063E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0640	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x0642	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x0644	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x0646	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0648	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x064A	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x064E	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0650	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x0652	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x0656	0xB001    ADD	SP, SP, #4
0x0658	0x4770    BX	LR
; end of __FloatToSignedIntegral
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x0760	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x0762	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x0764	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x0766	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x0768	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x076A	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x076C	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x076E	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x0772	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x0776	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x0778	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x077A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x077C	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x077E	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x0780	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x0782	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x0784	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x0786	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x078A	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x078E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x0790	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x0792	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x0796	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x0798	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x079C	0xB001    ADD	SP, SP, #4
0x079E	0x4770    BX	LR
; end of __SignedIntegralToFloat
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x065C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x065E	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x0662	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x0666	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x066A	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x066E	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x0670	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x0672	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x0674	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x0676	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x067A	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x067C	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x0680	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x0682	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x0684	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x0688	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x068A	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x068C	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x068E	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x0692	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x0696	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x0698	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x069A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x069C	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x069E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x06A2	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x06A4	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x06A6	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x06AA	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x06AC	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x06AE	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x06B2	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x06B4	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x06B6	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x06B8	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x06BA	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x06BC	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x06BE	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x06C0	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x06C2	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x06C4	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x06C6	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x06C8	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x06CA	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x06CC	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x06D0	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x06D2	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x06D6	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x06D8	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x06DC	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x06E0	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x06E2	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x06E4	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x06E8	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x06EA	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x06EC	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x06EE	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x06F2	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x06F6	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x06FA	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x06FC	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x06FE	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x0702	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x0704	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x0708	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x070C	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x070E	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x0710	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x0712	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x0716	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x071A	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x071C	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x0720	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x0722	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x0724	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x0728	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x072A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x072C	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x072E	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x0732	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x0736	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x073A	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x073E	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x0742	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x0744	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x0746	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x074A	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x074E	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x0750	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x0754	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x0756	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x075A	0xB001    ADD	SP, SP, #4
0x075C	0x4770    BX	LR
; end of __Sub_FP
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x07A0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x07A2	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x07A4	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x07A8	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x07AA	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x07AE	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x07B2	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x07B6	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x07BA	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x07BC	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x07BE	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x07C2	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x07C6	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x07C8	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x07CA	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x07CC	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x07D0	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x07D4	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x07D6	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x07D8	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x07DC	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x07E0	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x07E2	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x07E4	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x07E6	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x07E8	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x07EC	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x07EE	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x07F0	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x07F2	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x07F4	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x07F6	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x07F8	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x07FA	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x07FC	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x07FE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x0800	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x0804	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x0806	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x0808	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x080A	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x080E	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x0812	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x0816	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x0818	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x081A	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x081C	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x081E	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x0822	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x0826	0xB001    ADD	SP, SP, #4
0x0828	0x4770    BX	LR
; end of __Mul_FP
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x082C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x082E	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x0830	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x0832	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x0834	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x0836	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x083A	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x083E	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x0840	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x0842	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x0844	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x0846	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x0848	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x084A	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x084C	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x084E	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x0850	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x0852	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x0856	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x085A	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x085C	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x085E	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x0862	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x0866	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x0868	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x086A	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x086E	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x0872	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x0874	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x0876	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x0878	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x087A	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x087C	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x087E	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x0880	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x0882	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x0884	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x0886	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x0888	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x088A	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x088C	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x0890	0xB001    ADD	SP, SP, #4
0x0892	0x4770    BX	LR
; end of __Compare_FP
_print_decimal:
;pcd8544.c, 393 :: 		void print_decimal(unsigned char x_pos, unsigned char y_pos, unsigned int value, unsigned char points, unsigned char colour)
; points start address is: 12 (R3)
; value start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0894	0xB081    SUB	SP, SP, #4
0x0896	0xF8CDE000  STR	LR, [SP, #0]
0x089A	0xB2C7    UXTB	R7, R0
0x089C	0xFA5FF881  UXTB	R8, R1
0x08A0	0xFA1FFA82  UXTH	R10, R2
0x08A4	0xFA5FFB83  UXTB	R11, R3
; points end address is: 12 (R3)
; value end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 28 (R7)
; y_pos start address is: 32 (R8)
; value start address is: 40 (R10)
; points start address is: 44 (R11)
; colour start address is: 36 (R9)
0x08A8	0xF89D9004  LDRB	R9, [SP, #4]
;pcd8544.c, 395 :: 		unsigned char ch = 0x00;
;pcd8544.c, 397 :: 		PCD8544_set_cursor(x_pos, y_pos);
0x08AC	0xFA5FF188  UXTB	R1, R8
0x08B0	0xB2F8    UXTB	R0, R7
0x08B2	0xF7FFFC3D  BL	_PCD8544_set_cursor+0
;pcd8544.c, 398 :: 		PCD8544_print_char(0x2E, colour);
0x08B6	0xFA5FF189  UXTB	R1, R9
0x08BA	0x202E    MOVS	R0, #46
0x08BC	0xF7FFFC4C  BL	_PCD8544_print_char+0
;pcd8544.c, 400 :: 		ch = (value / 1000);
0x08C0	0xF24034E8  MOVW	R4, #1000
0x08C4	0xFBBAF4F4  UDIV	R4, R10, R4
; ch start address is: 20 (R5)
0x08C8	0xB2E5    UXTB	R5, R4
;pcd8544.c, 401 :: 		PCD8544_set_cursor((x_pos + 6), y_pos);
0x08CA	0x1DBC    ADDS	R4, R7, #6
0x08CC	0xFA5FF188  UXTB	R1, R8
0x08D0	0xB2E0    UXTB	R0, R4
0x08D2	0xF7FFFC2D  BL	_PCD8544_set_cursor+0
;pcd8544.c, 402 :: 		PCD8544_print_char((48 + ch), colour);
0x08D6	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x08DA	0xFA5FF189  UXTB	R1, R9
0x08DE	0xB2E0    UXTB	R0, R4
0x08E0	0xF7FFFC3A  BL	_PCD8544_print_char+0
;pcd8544.c, 404 :: 		if(points > 1)
0x08E4	0xF1BB0F01  CMP	R11, #1
0x08E8	0xD94A    BLS	L_print_decimal146
;pcd8544.c, 406 :: 		ch = ((value % 1000) / 100);
0x08EA	0xF24034E8  MOVW	R4, #1000
0x08EE	0xFBBAF5F4  UDIV	R5, R10, R4
0x08F2	0xFB04A515  MLS	R5, R4, R5, R10
0x08F6	0xB2AD    UXTH	R5, R5
0x08F8	0x2464    MOVS	R4, #100
0x08FA	0xFBB5F4F4  UDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x08FE	0xB2E5    UXTB	R5, R4
;pcd8544.c, 407 :: 		PCD8544_set_cursor((x_pos + 12), y_pos);
0x0900	0xF207040C  ADDW	R4, R7, #12
0x0904	0xFA5FF188  UXTB	R1, R8
0x0908	0xB2E0    UXTB	R0, R4
0x090A	0xF7FFFC11  BL	_PCD8544_set_cursor+0
;pcd8544.c, 408 :: 		PCD8544_print_char((48 + ch), colour);
0x090E	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0912	0xFA5FF189  UXTB	R1, R9
0x0916	0xB2E0    UXTB	R0, R4
0x0918	0xF7FFFC1E  BL	_PCD8544_print_char+0
;pcd8544.c, 411 :: 		if(points > 2)
0x091C	0xF1BB0F02  CMP	R11, #2
0x0920	0xD92E    BLS	L_print_decimal147
;pcd8544.c, 413 :: 		ch = ((value % 100) / 10);
0x0922	0x2464    MOVS	R4, #100
0x0924	0xFBBAF5F4  UDIV	R5, R10, R4
0x0928	0xFB04A515  MLS	R5, R4, R5, R10
0x092C	0xB2AD    UXTH	R5, R5
0x092E	0x240A    MOVS	R4, #10
0x0930	0xFBB5F4F4  UDIV	R4, R5, R4
; ch start address is: 20 (R5)
0x0934	0xB2E5    UXTB	R5, R4
;pcd8544.c, 414 :: 		PCD8544_set_cursor((x_pos + 18), y_pos);
0x0936	0xF2070412  ADDW	R4, R7, #18
0x093A	0xFA5FF188  UXTB	R1, R8
0x093E	0xB2E0    UXTB	R0, R4
0x0940	0xF7FFFBF6  BL	_PCD8544_set_cursor+0
;pcd8544.c, 415 :: 		PCD8544_print_char((48 + ch), colour);
0x0944	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0948	0xFA5FF189  UXTB	R1, R9
0x094C	0xB2E0    UXTB	R0, R4
0x094E	0xF7FFFC03  BL	_PCD8544_print_char+0
;pcd8544.c, 417 :: 		if(points > 3)
0x0952	0xF1BB0F03  CMP	R11, #3
0x0956	0xD913    BLS	L_print_decimal148
; points end address is: 44 (R11)
;pcd8544.c, 419 :: 		ch = (value % 10);
0x0958	0x250A    MOVS	R5, #10
0x095A	0xFBBAF4F5  UDIV	R4, R10, R5
0x095E	0xFB05A414  MLS	R4, R5, R4, R10
; value end address is: 40 (R10)
; ch start address is: 20 (R5)
0x0962	0xB2E5    UXTB	R5, R4
;pcd8544.c, 420 :: 		PCD8544_set_cursor((x_pos + 24), y_pos);
0x0964	0xF2070418  ADDW	R4, R7, #24
; x_pos end address is: 28 (R7)
0x0968	0xFA5FF188  UXTB	R1, R8
; y_pos end address is: 32 (R8)
0x096C	0xB2E0    UXTB	R0, R4
0x096E	0xF7FFFBDF  BL	_PCD8544_set_cursor+0
;pcd8544.c, 421 :: 		PCD8544_print_char((48 + ch), colour);;
0x0972	0xF2050430  ADDW	R4, R5, #48
; ch end address is: 20 (R5)
0x0976	0xFA5FF189  UXTB	R1, R9
; colour end address is: 36 (R9)
0x097A	0xB2E0    UXTB	R0, R4
0x097C	0xF7FFFBEC  BL	_PCD8544_print_char+0
;pcd8544.c, 422 :: 		}
L_print_decimal148:
;pcd8544.c, 423 :: 		}
L_print_decimal147:
;pcd8544.c, 424 :: 		}
L_print_decimal146:
;pcd8544.c, 425 :: 		}
L_end_print_decimal:
0x0980	0xF8DDE000  LDR	LR, [SP, #0]
0x0984	0xB001    ADD	SP, SP, #4
0x0986	0x4770    BX	LR
; end of _print_decimal
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x0CA8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x0CAA	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x0CAE	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x0CB2	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x0CB6	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x0CB8	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x0CBA	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x0CBC	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x0CBE	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x0CC2	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x0CC4	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x0CC8	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x0CCA	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x0CCC	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x0CD0	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x0CD2	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x0CD4	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x0CD6	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x0CDA	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x0CDE	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x0CE0	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x0CE2	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x0CE4	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x0CE6	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x0CEA	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x0CEC	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x0CEE	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x0CF2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x0CF4	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x0CF6	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x0CFA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x0CFC	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x0CFE	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x0D00	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x0D02	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x0D04	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x0D06	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x0D08	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x0D0A	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x0D0C	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x0D0E	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x0D10	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x0D12	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x0D14	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x0D18	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x0D1A	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x0D1E	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x0D20	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x0D24	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x0D28	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x0D2A	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x0D2C	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x0D30	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x0D32	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x0D34	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x0D36	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x0D3A	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x0D3E	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x0D42	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x0D44	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x0D46	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x0D4A	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x0D4C	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x0D50	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x0D54	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x0D56	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x0D58	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x0D5A	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x0D5E	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x0D62	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x0D64	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x0D68	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x0D6A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x0D6C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x0D70	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x0D72	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x0D74	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x0D76	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x0D7A	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x0D7E	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x0D82	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x0D86	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x0D8A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x0D8C	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x0D8E	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x0D92	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x0D96	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x0D98	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x0D9C	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x0D9E	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x0DA2	0xB001    ADD	SP, SP, #4
0x0DA4	0x4770    BX	LR
; end of __Add_FP
__Lib_System_101_102_103_InitialSetUpRCCRCC2:
;__Lib_System_101_102_103.c, 369 :: 		
0x1818	0xB082    SUB	SP, SP, #8
0x181A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_101_102_103.c, 372 :: 		
; ulRCC_CR start address is: 8 (R2)
0x181E	0x4A33    LDR	R2, [PC, #204]
;__Lib_System_101_102_103.c, 373 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x1820	0x4B33    LDR	R3, [PC, #204]
;__Lib_System_101_102_103.c, 374 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1822	0x4934    LDR	R1, [PC, #208]
;__Lib_System_101_102_103.c, 381 :: 		
0x1824	0xF64B3080  MOVW	R0, #48000
0x1828	0x4281    CMP	R1, R0
0x182A	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC231
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 382 :: 		
0x182C	0x4832    LDR	R0, [PC, #200]
0x182E	0x6800    LDR	R0, [R0, #0]
0x1830	0xF0400102  ORR	R1, R0, #2
0x1834	0x4830    LDR	R0, [PC, #192]
0x1836	0x6001    STR	R1, [R0, #0]
0x1838	0xE011    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC232
L___Lib_System_101_102_103_InitialSetUpRCCRCC231:
;__Lib_System_101_102_103.c, 383 :: 		
; Fosc_kHz start address is: 4 (R1)
0x183A	0xF64550C0  MOVW	R0, #24000
0x183E	0x4281    CMP	R1, R0
0x1840	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC233
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 384 :: 		
0x1842	0x482D    LDR	R0, [PC, #180]
0x1844	0x6800    LDR	R0, [R0, #0]
0x1846	0xF0400101  ORR	R1, R0, #1
0x184A	0x482B    LDR	R0, [PC, #172]
0x184C	0x6001    STR	R1, [R0, #0]
0x184E	0xE006    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC234
L___Lib_System_101_102_103_InitialSetUpRCCRCC233:
;__Lib_System_101_102_103.c, 386 :: 		
0x1850	0x4829    LDR	R0, [PC, #164]
0x1852	0x6801    LDR	R1, [R0, #0]
0x1854	0xF06F0007  MVN	R0, #7
0x1858	0x4001    ANDS	R1, R0
0x185A	0x4827    LDR	R0, [PC, #156]
0x185C	0x6001    STR	R1, [R0, #0]
L___Lib_System_101_102_103_InitialSetUpRCCRCC234:
L___Lib_System_101_102_103_InitialSetUpRCCRCC232:
;__Lib_System_101_102_103.c, 388 :: 		
0x185E	0xF7FFF9FB  BL	__Lib_System_101_102_103_SystemClockSetDefault+0
;__Lib_System_101_102_103.c, 390 :: 		
0x1862	0x4826    LDR	R0, [PC, #152]
0x1864	0x6003    STR	R3, [R0, #0]
;__Lib_System_101_102_103.c, 391 :: 		
0x1866	0x4826    LDR	R0, [PC, #152]
0x1868	0xEA020100  AND	R1, R2, R0, LSL #0
0x186C	0x4825    LDR	R0, [PC, #148]
0x186E	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 393 :: 		
0x1870	0xF0020001  AND	R0, R2, #1
0x1874	0xB140    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC246
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1876	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 394 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC236:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1878	0x4822    LDR	R0, [PC, #136]
0x187A	0x6800    LDR	R0, [R0, #0]
0x187C	0xF0000002  AND	R0, R0, #2
0x1880	0x2800    CMP	R0, #0
0x1882	0xD100    BNE	L___Lib_System_101_102_103_InitialSetUpRCCRCC237
;__Lib_System_101_102_103.c, 395 :: 		
0x1884	0xE7F8    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC236
L___Lib_System_101_102_103_InitialSetUpRCCRCC237:
;__Lib_System_101_102_103.c, 396 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1886	0xE000    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC235
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC246:
;__Lib_System_101_102_103.c, 393 :: 		
0x1888	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 396 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC235:
;__Lib_System_101_102_103.c, 398 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x188A	0xF4023080  AND	R0, R2, #65536
0x188E	0xB148    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_101_102_103.c, 399 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC239:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x1890	0x481C    LDR	R0, [PC, #112]
0x1892	0x6800    LDR	R0, [R0, #0]
0x1894	0xF4003000  AND	R0, R0, #131072
0x1898	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC240
;__Lib_System_101_102_103.c, 400 :: 		
0x189A	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC239
L___Lib_System_101_102_103_InitialSetUpRCCRCC240:
;__Lib_System_101_102_103.c, 401 :: 		
0x189C	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x189E	0x460A    MOV	R2, R1
0x18A0	0x9901    LDR	R1, [SP, #4]
0x18A2	0xE002    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC247:
;__Lib_System_101_102_103.c, 398 :: 		
0x18A4	0x9101    STR	R1, [SP, #4]
0x18A6	0x4611    MOV	R1, R2
0x18A8	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_101_102_103.c, 401 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC238:
;__Lib_System_101_102_103.c, 403 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x18AA	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x18AE	0xB170    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC248
;__Lib_System_101_102_103.c, 404 :: 		
0x18B0	0x4814    LDR	R0, [PC, #80]
0x18B2	0x6800    LDR	R0, [R0, #0]
0x18B4	0xF0407180  ORR	R1, R0, #16777216
0x18B8	0x4812    LDR	R0, [PC, #72]
0x18BA	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x18BC	0x4611    MOV	R1, R2
;__Lib_System_101_102_103.c, 405 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC242:
; ulRCC_CFGR start address is: 4 (R1)
0x18BE	0x4811    LDR	R0, [PC, #68]
0x18C0	0x6800    LDR	R0, [R0, #0]
0x18C2	0xF0007000  AND	R0, R0, #33554432
0x18C6	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC243
;__Lib_System_101_102_103.c, 406 :: 		
0x18C8	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC242
L___Lib_System_101_102_103_InitialSetUpRCCRCC243:
;__Lib_System_101_102_103.c, 407 :: 		
0x18CA	0x460A    MOV	R2, R1
0x18CC	0xE7FF    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_101_102_103_InitialSetUpRCCRCC248:
;__Lib_System_101_102_103.c, 403 :: 		
;__Lib_System_101_102_103.c, 407 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC241:
;__Lib_System_101_102_103.c, 410 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC244:
; ulRCC_CFGR start address is: 8 (R2)
0x18CE	0x480B    LDR	R0, [PC, #44]
0x18D0	0x6800    LDR	R0, [R0, #0]
0x18D2	0xF000010C  AND	R1, R0, #12
0x18D6	0x0090    LSLS	R0, R2, #2
0x18D8	0xF000000C  AND	R0, R0, #12
0x18DC	0x4281    CMP	R1, R0
0x18DE	0xD000    BEQ	L___Lib_System_101_102_103_InitialSetUpRCCRCC245
;__Lib_System_101_102_103.c, 411 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x18E0	0xE7F5    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC244
L___Lib_System_101_102_103_InitialSetUpRCCRCC245:
;__Lib_System_101_102_103.c, 413 :: 		
L_end_InitialSetUpRCCRCC2:
0x18E2	0xF8DDE000  LDR	LR, [SP, #0]
0x18E6	0xB002    ADD	SP, SP, #8
0x18E8	0x4770    BX	LR
0x18EA	0xBF00    NOP
0x18EC	0x00810109  	#17367169
0x18F0	0xC402001D  	#1950722
0x18F4	0x19400001  	#72000
0x18F8	0x20004002  	FLASH_ACR+0
0x18FC	0x10044002  	RCC_CFGR+0
0x1900	0xFFFF000F  	#1048575
0x1904	0x10004002  	RCC_CR+0
; end of __Lib_System_101_102_103_InitialSetUpRCCRCC2
__Lib_System_101_102_103_SystemClockSetDefault:
;__Lib_System_101_102_103.c, 348 :: 		
0x0C58	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 351 :: 		
0x0C5A	0x480F    LDR	R0, [PC, #60]
0x0C5C	0x6800    LDR	R0, [R0, #0]
0x0C5E	0xF0400101  ORR	R1, R0, #1
0x0C62	0x480D    LDR	R0, [PC, #52]
0x0C64	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 354 :: 		
0x0C66	0x490D    LDR	R1, [PC, #52]
0x0C68	0x480D    LDR	R0, [PC, #52]
0x0C6A	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 357 :: 		
0x0C6C	0x480A    LDR	R0, [PC, #40]
0x0C6E	0x6801    LDR	R1, [R0, #0]
0x0C70	0x480C    LDR	R0, [PC, #48]
0x0C72	0x4001    ANDS	R1, R0
0x0C74	0x4808    LDR	R0, [PC, #32]
0x0C76	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 360 :: 		
0x0C78	0x4807    LDR	R0, [PC, #28]
0x0C7A	0x6801    LDR	R1, [R0, #0]
0x0C7C	0xF46F2080  MVN	R0, #262144
0x0C80	0x4001    ANDS	R1, R0
0x0C82	0x4805    LDR	R0, [PC, #20]
0x0C84	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 363 :: 		
0x0C86	0x4806    LDR	R0, [PC, #24]
0x0C88	0x6801    LDR	R1, [R0, #0]
0x0C8A	0xF46F00FE  MVN	R0, #8323072
0x0C8E	0x4001    ANDS	R1, R0
0x0C90	0x4803    LDR	R0, [PC, #12]
0x0C92	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 367 :: 		
L_end_SystemClockSetDefault:
0x0C94	0xB001    ADD	SP, SP, #4
0x0C96	0x4770    BX	LR
0x0C98	0x10004002  	RCC_CR+0
0x0C9C	0x0000F8FF  	#-117506048
0x0CA0	0x10044002  	RCC_CFGR+0
0x0CA4	0xFFFFFEF6  	#-17367041
; end of __Lib_System_101_102_103_SystemClockSetDefault
__Lib_System_101_102_103_InitialSetUpFosc:
;__Lib_System_101_102_103.c, 415 :: 		
0x17FC	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 416 :: 		
0x17FE	0x4902    LDR	R1, [PC, #8]
0x1800	0x4802    LDR	R0, [PC, #8]
0x1802	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 417 :: 		
L_end_InitialSetUpFosc:
0x1804	0xB001    ADD	SP, SP, #4
0x1806	0x4770    BX	LR
0x1808	0x19400001  	#72000
0x180C	0x020C2000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_101_102_103_InitialSetUpFosc
___GenExcept:
;__Lib_System_101_102_103.c, 298 :: 		
0x1810	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 299 :: 		
L___GenExcept27:
0x1812	0xE7FE    B	L___GenExcept27
;__Lib_System_101_102_103.c, 300 :: 		
L_end___GenExcept:
0x1814	0xB001    ADD	SP, SP, #4
0x1816	0x4770    BX	LR
; end of ___GenExcept
0x20D4	0xB500    PUSH	(R14)
0x20D6	0xF8DFB014  LDR	R11, [PC, #20]
0x20DA	0xF8DFA014  LDR	R10, [PC, #20]
0x20DE	0xF8DFC014  LDR	R12, [PC, #20]
0x20E2	0xF7FFF885  BL	4592
0x20E6	0xBD00    POP	(R15)
0x20E8	0x4770    BX	LR
0x20EA	0xBF00    NOP
0x20EC	0x00002000  	#536870912
0x20F0	0x00112000  	#536870929
0x20F4	0x20A40000  	#8356
0x2154	0xB500    PUSH	(R14)
0x2156	0xF8DFB010  LDR	R11, [PC, #16]
0x215A	0xF8DFA010  LDR	R10, [PC, #16]
0x215E	0xF7FFF851  BL	4612
0x2162	0xBD00    POP	(R15)
0x2164	0x4770    BX	LR
0x2166	0xBF00    NOP
0x2168	0x00002000  	#536870912
0x216C	0x02102000  	#536871440
;nokia_5510_lcd_demo.c,1 :: _mikro_bmp [504]
0x1CCC	0x00000000 ;_mikro_bmp+0
0x1CD0	0x00000000 ;_mikro_bmp+4
0x1CD4	0x00000000 ;_mikro_bmp+8
0x1CD8	0x00FFFF00 ;_mikro_bmp+12
0x1CDC	0x07FFFFFF ;_mikro_bmp+16
0x1CE0	0x63636347 ;_mikro_bmp+20
0x1CE4	0x63636363 ;_mikro_bmp+24
0x1CE8	0xFF8F0767 ;_mikro_bmp+28
0x1CEC	0x1F3F3FFF ;_mikro_bmp+32
0x1CF0	0x07070F0F ;_mikro_bmp+36
0x1CF4	0x03030307 ;_mikro_bmp+40
0x1CF8	0x03030303 ;_mikro_bmp+44
0x1CFC	0x07070303 ;_mikro_bmp+48
0x1D00	0x1F0F0F07 ;_mikro_bmp+52
0x1D04	0xFFFF3F1F ;_mikro_bmp+56
0x1D08	0xFFFFFFFF ;_mikro_bmp+60
0x1D0C	0xFFFF00FF ;_mikro_bmp+64
0x1D10	0x00000000 ;_mikro_bmp+68
0x1D14	0x00000000 ;_mikro_bmp+72
0x1D18	0x00000000 ;_mikro_bmp+76
0x1D1C	0x00000000 ;_mikro_bmp+80
0x1D20	0x00000000 ;_mikro_bmp+84
0x1D24	0x00000000 ;_mikro_bmp+88
0x1D28	0x00000000 ;_mikro_bmp+92
0x1D2C	0x00FFFF00 ;_mikro_bmp+96
0x1D30	0x0EFFFFFF ;_mikro_bmp+100
0x1D34	0x3C1C0C0C ;_mikro_bmp+104
0x1D38	0x3C3C3C3C ;_mikro_bmp+108
0x1D3C	0x03FFFEFC ;_mikro_bmp+112
0x1D40	0x00000000 ;_mikro_bmp+116
0x1D44	0x00000000 ;_mikro_bmp+120
0x1D48	0xF8000000 ;_mikro_bmp+124
0x1D4C	0xFCFEFEFE ;_mikro_bmp+128
0x1D50	0x00000000 ;_mikro_bmp+132
0x1D54	0x00000000 ;_mikro_bmp+136
0x1D58	0x01000000 ;_mikro_bmp+140
0x1D5C	0xFFFFFF0F ;_mikro_bmp+144
0x1D60	0xFFFF00FF ;_mikro_bmp+148
0x1D64	0x00000000 ;_mikro_bmp+152
0x1D68	0x00000000 ;_mikro_bmp+156
0x1D6C	0x00000000 ;_mikro_bmp+160
0x1D70	0x00000000 ;_mikro_bmp+164
0x1D74	0x00000000 ;_mikro_bmp+168
0x1D78	0x00000000 ;_mikro_bmp+172
0x1D7C	0x00000000 ;_mikro_bmp+176
0x1D80	0x00FFFF00 ;_mikro_bmp+180
0x1D84	0x22FFFFFF ;_mikro_bmp+184
0x1D88	0x1E060666 ;_mikro_bmp+188
0x1D8C	0x2206060E ;_mikro_bmp+192
0x1D90	0x00FFFFFF ;_mikro_bmp+196
0x1D94	0x00000000 ;_mikro_bmp+200
0x1D98	0x00000000 ;_mikro_bmp+204
0x1D9C	0x01000000 ;_mikro_bmp+208
0x1DA0	0x03030303 ;_mikro_bmp+212
0x1DA4	0x00000000 ;_mikro_bmp+216
0x1DA8	0x00000000 ;_mikro_bmp+220
0x1DAC	0x00000000 ;_mikro_bmp+224
0x1DB0	0xFFFFFF00 ;_mikro_bmp+228
0x1DB4	0xFFFF00FF ;_mikro_bmp+232
0x1DB8	0x00000000 ;_mikro_bmp+236
0x1DBC	0x00000000 ;_mikro_bmp+240
0x1DC0	0x00000000 ;_mikro_bmp+244
0x1DC4	0x00000000 ;_mikro_bmp+248
0x1DC8	0x00000000 ;_mikro_bmp+252
0x1DCC	0x00000000 ;_mikro_bmp+256
0x1DD0	0x00000000 ;_mikro_bmp+260
0x1DD4	0x00FFFF00 ;_mikro_bmp+264
0x1DD8	0xC4FFFFFF ;_mikro_bmp+268
0x1DDC	0xC6C6DEFE ;_mikro_bmp+272
0x1DE0	0xC6C6C6C6 ;_mikro_bmp+276
0x1DE4	0x00FFFFFF ;_mikro_bmp+280
0x1DE8	0x00000000 ;_mikro_bmp+284
0x1DEC	0x00000000 ;_mikro_bmp+288
0x1DF0	0xFE000000 ;_mikro_bmp+292
0x1DF4	0xFFFFFFFF ;_mikro_bmp+296
0x1DF8	0x070707FF ;_mikro_bmp+300
0x1DFC	0x07070707 ;_mikro_bmp+304
0x1E00	0x07070707 ;_mikro_bmp+308
0x1E04	0xFFFFFF07 ;_mikro_bmp+312
0x1E08	0xFFFF00FF ;_mikro_bmp+316
0x1E0C	0x00000000 ;_mikro_bmp+320
0x1E10	0x00000000 ;_mikro_bmp+324
0x1E14	0x00000000 ;_mikro_bmp+328
0x1E18	0x00000000 ;_mikro_bmp+332
0x1E1C	0x00000000 ;_mikro_bmp+336
0x1E20	0x00000000 ;_mikro_bmp+340
0x1E24	0x00000000 ;_mikro_bmp+344
0x1E28	0x00FFFF00 ;_mikro_bmp+348
0x1E2C	0x10FFFFFF ;_mikro_bmp+352
0x1E30	0x18181818 ;_mikro_bmp+356
0x1E34	0x18181818 ;_mikro_bmp+360
0x1E38	0xE0FF3F1B ;_mikro_bmp+364
0x1E3C	0x00000080 ;_mikro_bmp+368
0x1E40	0x00000000 ;_mikro_bmp+372
0x1E44	0x0F000000 ;_mikro_bmp+376
0x1E48	0x3F3F7F3F ;_mikro_bmp+380
0x1E4C	0x0000000F ;_mikro_bmp+384
0x1E50	0x00000000 ;_mikro_bmp+388
0x1E54	0x80000000 ;_mikro_bmp+392
0x1E58	0xFFFFFFF0 ;_mikro_bmp+396
0x1E5C	0xFFFF00FF ;_mikro_bmp+400
0x1E60	0x00000000 ;_mikro_bmp+404
0x1E64	0x00000000 ;_mikro_bmp+408
0x1E68	0x00000000 ;_mikro_bmp+412
0x1E6C	0x00000000 ;_mikro_bmp+416
0x1E70	0x00000000 ;_mikro_bmp+420
0x1E74	0x00000000 ;_mikro_bmp+424
0x1E78	0x00000000 ;_mikro_bmp+428
0x1E7C	0x00FFFF00 ;_mikro_bmp+432
0x1E80	0xE0FFFFFF ;_mikro_bmp+436
0x1E84	0xE3E3E3E3 ;_mikro_bmp+440
0x1E88	0xE3E3E3E3 ;_mikro_bmp+444
0x1E8C	0xE3E3E3E3 ;_mikro_bmp+448
0x1E90	0xF8FCEEE7 ;_mikro_bmp+452
0x1E94	0xE0F0F0F8 ;_mikro_bmp+456
0x1E98	0xE0E0E0E0 ;_mikro_bmp+460
0x1E9C	0xE0E0E0E0 ;_mikro_bmp+464
0x1EA0	0xE0E0E0E0 ;_mikro_bmp+468
0x1EA4	0xF8F0F0E0 ;_mikro_bmp+472
0x1EA8	0xFFFFFEFC ;_mikro_bmp+476
0x1EAC	0xFFFFFFFF ;_mikro_bmp+480
0x1EB0	0xFFFF807F ;_mikro_bmp+484
0x1EB4	0x00000000 ;_mikro_bmp+488
0x1EB8	0x00000000 ;_mikro_bmp+492
0x1EBC	0x00000000 ;_mikro_bmp+496
0x1EC0	0x00000000 ;_mikro_bmp+500
; end of _mikro_bmp
;nokia_5510_lcd_demo.c,1 :: nokia_5510_lcd_demo_font [480]
0x1EC4	0x00000000 ;nokia_5510_lcd_demo_font+0
0x1EC8	0x5F000000 ;nokia_5510_lcd_demo_font+4
0x1ECC	0x07000000 ;nokia_5510_lcd_demo_font+8
0x1ED0	0x14000700 ;nokia_5510_lcd_demo_font+12
0x1ED4	0x147F147F ;nokia_5510_lcd_demo_font+16
0x1ED8	0x2A7F2A24 ;nokia_5510_lcd_demo_font+20
0x1EDC	0x08132312 ;nokia_5510_lcd_demo_font+24
0x1EE0	0x49366264 ;nokia_5510_lcd_demo_font+28
0x1EE4	0x00502255 ;nokia_5510_lcd_demo_font+32
0x1EE8	0x00000305 ;nokia_5510_lcd_demo_font+36
0x1EEC	0x41221C00 ;nokia_5510_lcd_demo_font+40
0x1EF0	0x22410000 ;nokia_5510_lcd_demo_font+44
0x1EF4	0x0814001C ;nokia_5510_lcd_demo_font+48
0x1EF8	0x0814083E ;nokia_5510_lcd_demo_font+52
0x1EFC	0x08083E08 ;nokia_5510_lcd_demo_font+56
0x1F00	0x00305000 ;nokia_5510_lcd_demo_font+60
0x1F04	0x08080800 ;nokia_5510_lcd_demo_font+64
0x1F08	0x60000808 ;nokia_5510_lcd_demo_font+68
0x1F0C	0x20000060 ;nokia_5510_lcd_demo_font+72
0x1F10	0x02040810 ;nokia_5510_lcd_demo_font+76
0x1F14	0x4549513E ;nokia_5510_lcd_demo_font+80
0x1F18	0x7F42003E ;nokia_5510_lcd_demo_font+84
0x1F1C	0x61420040 ;nokia_5510_lcd_demo_font+88
0x1F20	0x21464951 ;nokia_5510_lcd_demo_font+92
0x1F24	0x314B4541 ;nokia_5510_lcd_demo_font+96
0x1F28	0x7F121418 ;nokia_5510_lcd_demo_font+100
0x1F2C	0x45452710 ;nokia_5510_lcd_demo_font+104
0x1F30	0x4A3C3945 ;nokia_5510_lcd_demo_font+108
0x1F34	0x01304949 ;nokia_5510_lcd_demo_font+112
0x1F38	0x03050971 ;nokia_5510_lcd_demo_font+116
0x1F3C	0x49494936 ;nokia_5510_lcd_demo_font+120
0x1F40	0x49490636 ;nokia_5510_lcd_demo_font+124
0x1F44	0x36001E29 ;nokia_5510_lcd_demo_font+128
0x1F48	0x00000036 ;nokia_5510_lcd_demo_font+132
0x1F4C	0x00003656 ;nokia_5510_lcd_demo_font+136
0x1F50	0x41221408 ;nokia_5510_lcd_demo_font+140
0x1F54	0x14141400 ;nokia_5510_lcd_demo_font+144
0x1F58	0x41001414 ;nokia_5510_lcd_demo_font+148
0x1F5C	0x02081422 ;nokia_5510_lcd_demo_font+152
0x1F60	0x06095101 ;nokia_5510_lcd_demo_font+156
0x1F64	0x41794932 ;nokia_5510_lcd_demo_font+160
0x1F68	0x11117E3E ;nokia_5510_lcd_demo_font+164
0x1F6C	0x497F7E11 ;nokia_5510_lcd_demo_font+168
0x1F70	0x3E364949 ;nokia_5510_lcd_demo_font+172
0x1F74	0x22414141 ;nokia_5510_lcd_demo_font+176
0x1F78	0x2241417F ;nokia_5510_lcd_demo_font+180
0x1F7C	0x49497F1C ;nokia_5510_lcd_demo_font+184
0x1F80	0x097F4149 ;nokia_5510_lcd_demo_font+188
0x1F84	0x3E010909 ;nokia_5510_lcd_demo_font+192
0x1F88	0x7A494941 ;nokia_5510_lcd_demo_font+196
0x1F8C	0x0808087F ;nokia_5510_lcd_demo_font+200
0x1F90	0x7F41007F ;nokia_5510_lcd_demo_font+204
0x1F94	0x40200041 ;nokia_5510_lcd_demo_font+208
0x1F98	0x7F013F41 ;nokia_5510_lcd_demo_font+212
0x1F9C	0x41221408 ;nokia_5510_lcd_demo_font+216
0x1FA0	0x4040407F ;nokia_5510_lcd_demo_font+220
0x1FA4	0x0C027F40 ;nokia_5510_lcd_demo_font+224
0x1FA8	0x047F7F02 ;nokia_5510_lcd_demo_font+228
0x1FAC	0x3E7F1008 ;nokia_5510_lcd_demo_font+232
0x1FB0	0x3E414141 ;nokia_5510_lcd_demo_font+236
0x1FB4	0x0909097F ;nokia_5510_lcd_demo_font+240
0x1FB8	0x51413E06 ;nokia_5510_lcd_demo_font+244
0x1FBC	0x097F5E21 ;nokia_5510_lcd_demo_font+248
0x1FC0	0x46462919 ;nokia_5510_lcd_demo_font+252
0x1FC4	0x31494949 ;nokia_5510_lcd_demo_font+256
0x1FC8	0x017F0101 ;nokia_5510_lcd_demo_font+260
0x1FCC	0x40403F01 ;nokia_5510_lcd_demo_font+264
0x1FD0	0x201F3F40 ;nokia_5510_lcd_demo_font+268
0x1FD4	0x3F1F2040 ;nokia_5510_lcd_demo_font+272
0x1FD8	0x3F403840 ;nokia_5510_lcd_demo_font+276
0x1FDC	0x14081463 ;nokia_5510_lcd_demo_font+280
0x1FE0	0x70080763 ;nokia_5510_lcd_demo_font+284
0x1FE4	0x51610708 ;nokia_5510_lcd_demo_font+288
0x1FE8	0x00434549 ;nokia_5510_lcd_demo_font+292
0x1FEC	0x0041417F ;nokia_5510_lcd_demo_font+296
0x1FF0	0x10080402 ;nokia_5510_lcd_demo_font+300
0x1FF4	0x41410020 ;nokia_5510_lcd_demo_font+304
0x1FF8	0x0204007F ;nokia_5510_lcd_demo_font+308
0x1FFC	0x40040201 ;nokia_5510_lcd_demo_font+312
0x2000	0x40404040 ;nokia_5510_lcd_demo_font+316
0x2004	0x04020100 ;nokia_5510_lcd_demo_font+320
0x2008	0x54542000 ;nokia_5510_lcd_demo_font+324
0x200C	0x487F7854 ;nokia_5510_lcd_demo_font+328
0x2010	0x38384444 ;nokia_5510_lcd_demo_font+332
0x2014	0x20444444 ;nokia_5510_lcd_demo_font+336
0x2018	0x48444438 ;nokia_5510_lcd_demo_font+340
0x201C	0x5454387F ;nokia_5510_lcd_demo_font+344
0x2020	0x7E081854 ;nokia_5510_lcd_demo_font+348
0x2024	0x0C020109 ;nokia_5510_lcd_demo_font+352
0x2028	0x3E525252 ;nokia_5510_lcd_demo_font+356
0x202C	0x0404087F ;nokia_5510_lcd_demo_font+360
0x2030	0x7D440078 ;nokia_5510_lcd_demo_font+364
0x2034	0x40200040 ;nokia_5510_lcd_demo_font+368
0x2038	0x7F003D44 ;nokia_5510_lcd_demo_font+372
0x203C	0x00442810 ;nokia_5510_lcd_demo_font+376
0x2040	0x407F4100 ;nokia_5510_lcd_demo_font+380
0x2044	0x18047C00 ;nokia_5510_lcd_demo_font+384
0x2048	0x087C7804 ;nokia_5510_lcd_demo_font+388
0x204C	0x38780404 ;nokia_5510_lcd_demo_font+392
0x2050	0x38444444 ;nokia_5510_lcd_demo_font+396
0x2054	0x1414147C ;nokia_5510_lcd_demo_font+400
0x2058	0x14140808 ;nokia_5510_lcd_demo_font+404
0x205C	0x087C7C18 ;nokia_5510_lcd_demo_font+408
0x2060	0x48080404 ;nokia_5510_lcd_demo_font+412
0x2064	0x20545454 ;nokia_5510_lcd_demo_font+416
0x2068	0x40443F04 ;nokia_5510_lcd_demo_font+420
0x206C	0x40403C20 ;nokia_5510_lcd_demo_font+424
0x2070	0x201C7C20 ;nokia_5510_lcd_demo_font+428
0x2074	0x3C1C2040 ;nokia_5510_lcd_demo_font+432
0x2078	0x3C403040 ;nokia_5510_lcd_demo_font+436
0x207C	0x28102844 ;nokia_5510_lcd_demo_font+440
0x2080	0x50500C44 ;nokia_5510_lcd_demo_font+444
0x2084	0x64443C50 ;nokia_5510_lcd_demo_font+448
0x2088	0x00444C54 ;nokia_5510_lcd_demo_font+452
0x208C	0x00413608 ;nokia_5510_lcd_demo_font+456
0x2090	0x007F0000 ;nokia_5510_lcd_demo_font+460
0x2094	0x36410000 ;nokia_5510_lcd_demo_font+464
0x2098	0x08100008 ;nokia_5510_lcd_demo_font+468
0x209C	0x78081008 ;nokia_5510_lcd_demo_font+472
0x20A0	0x78464146 ;nokia_5510_lcd_demo_font+476
; end of nokia_5510_lcd_demo_font
;,0 :: _initBlock_2 [10]
; Containing: ?ICS?lstr2_nokia_5510_lcd_demo [5]
;             ?ICS?lstr3_nokia_5510_lcd_demo [5]
0x20A4	0x3A524843 ;_initBlock_2+0 : ?ICS?lstr2_nokia_5510_lcd_demo at 0x20A4
0x20A8	0x544E4900 ;_initBlock_2+4 : ?ICS?lstr3_nokia_5510_lcd_demo at 0x20A9
0x20AC	0x003A ;_initBlock_2+8
; end of _initBlock_2
;,0 :: _initBlock_3 [18]
; Containing: ?ICS?lstr4_nokia_5510_lcd_demo [5]
;             ?ICS?lstr1_nokia_5510_lcd_demo [2]
;             txt2 [11]
0x20AE	0x3A544C46 ;_initBlock_3+0 : ?ICS?lstr4_nokia_5510_lcd_demo at 0x20AE
0x20B2	0x53002000 ;_initBlock_3+4 : ?ICS?lstr1_nokia_5510_lcd_demo at 0x20B3 : txt2 at 0x20B5
0x20B6	0x48414853 ;_initBlock_3+8
0x20BA	0x41495952 ;_initBlock_3+12
0x20BE	0x0052 ;_initBlock_3+16
; end of _initBlock_3
;,0 :: _initBlock_4 [12]
; Containing: txt1 [11]
;             ?ICSmain_c_L0 [1]
0x20C0	0x7263694D ;_initBlock_4+0 : txt1 at 0x20C0
0x20C4	0x6572416F ;_initBlock_4+4
0x20C8	0xF700616E ;_initBlock_4+8 : ?ICSmain_c_L0 at 0x20CB
; end of _initBlock_4
;,0 :: _initBlock_5_Padded [7]
; Containing: ?ICSmain_i_L0 [2]
;             ?ICSmain_f_L0 [4]
0x20CC	0x0AFFBE00 ;_initBlock_5_Padded+0 : ?ICSmain_i_L0 at 0x20CD : ?ICSmain_f_L0 at 0x20CF
0x20D0	0xBD23D7 ;_initBlock_5_Padded+4
; end of _initBlock_5_Padded
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0130      [40]    _PCD8544_set_cursor
0x0158      [68]    _PCD8544_print_char
0x019C      [50]    _PCD8544_set_contrast
0x01D0     [140]    _PCD8544_write
0x025C      [62]    _PCD8544_print_string
0x029C      [44]    _PCD8544_clear_buffer
0x02C8      [56]    _PCD8544_reset
0x0300     [276]    _setup_LCD_GPIOs
0x0414     [168]    _Draw_Pixel
0x04BC     [346]    _Draw_Line
0x0618      [66]    __FloatToSignedIntegral
0x065C     [258]    __Sub_FP
0x0760      [64]    __SignedIntegralToFloat
0x07A0     [138]    __Mul_FP
0x082C     [104]    __Compare_FP
0x0894     [244]    _print_decimal
0x0988      [84]    _PCD8544_clear_screen
0x09DC      [90]    _PCD8544_init
0x0A38     [544]    _print_float
0x0C58      [80]    __Lib_System_101_102_103_SystemClockSetDefault
0x0CA8     [254]    __Add_FP
0x0DA8    [1032]    _print_int
0x11B0      [24]    _setup
0x11C8      [40]    _PCD8544_backlight_state
0x11F0      [20]    ___CC2DW
0x1204      [58]    ___FillZeros
0x1240     [636]    _Draw_Circle
0x14BC     [460]    _print_chr
0x1688      [52]    _PCD8544_print_image
0x16BC     [318]    _Draw_Rectangle
0x17FC      [20]    __Lib_System_101_102_103_InitialSetUpFosc
0x1810       [8]    ___GenExcept
0x1818     [240]    __Lib_System_101_102_103_InitialSetUpRCCRCC2
0x1908     [964]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [5]    ?lstr2_nokia_5510_lcd_demo
0x20000005       [5]    ?lstr3_nokia_5510_lcd_demo
0x2000000A       [5]    ?lstr4_nokia_5510_lcd_demo
0x2000000F       [2]    ?lstr1_nokia_5510_lcd_demo
0x20000011     [504]    _PCD8544_buffer
0x2000020C       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1CCC     [504]    _mikro_bmp
0x1EC4     [480]    nokia_5510_lcd_demo_font
0x20A4       [5]    ?ICS?lstr2_nokia_5510_lcd_demo
0x20A9       [5]    ?ICS?lstr3_nokia_5510_lcd_demo
0x20AE       [5]    ?ICS?lstr4_nokia_5510_lcd_demo
0x20B3       [2]    ?ICS?lstr1_nokia_5510_lcd_demo
0x20B5      [11]    main_txt2_L0
0x20C0      [11]    main_txt1_L0
0x20CB       [1]    ?ICSmain_c_L0
0x20CD       [2]    ?ICSmain_i_L0
0x20CF       [4]    ?ICSmain_f_L0
