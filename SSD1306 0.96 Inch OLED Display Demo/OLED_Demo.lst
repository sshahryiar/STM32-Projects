;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26-Sep-15 08:31:00 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x1FFC2000  	536879100
0x0004	0x1B5D0000  	7005
0x0008	0x1B550000  	6997
0x000C	0x1B550000  	6997
0x0010	0x1B550000  	6997
0x0014	0x1B550000  	6997
0x0018	0x1B550000  	6997
0x001C	0x1B550000  	6997
0x0020	0x1B550000  	6997
0x0024	0x1B550000  	6997
0x0028	0x1B550000  	6997
0x002C	0x1B550000  	6997
0x0030	0x1B550000  	6997
0x0034	0x1B550000  	6997
0x0038	0x1B550000  	6997
0x003C	0x1B550000  	6997
0x0040	0x1B550000  	6997
0x0044	0x1B550000  	6997
0x0048	0x1B550000  	6997
0x004C	0x1B550000  	6997
0x0050	0x1B550000  	6997
0x0054	0x1B550000  	6997
0x0058	0x1B550000  	6997
0x005C	0x1B550000  	6997
0x0060	0x1B550000  	6997
0x0064	0x1B550000  	6997
0x0068	0x1B550000  	6997
0x006C	0x1B550000  	6997
0x0070	0x1B550000  	6997
0x0074	0x1B550000  	6997
0x0078	0x1B550000  	6997
0x007C	0x1B550000  	6997
0x0080	0x1B550000  	6997
0x0084	0x1B550000  	6997
0x0088	0x1B550000  	6997
0x008C	0x1B550000  	6997
0x0090	0x1B550000  	6997
0x0094	0x1B550000  	6997
0x0098	0x1B550000  	6997
0x009C	0x1B550000  	6997
0x00A0	0x1B550000  	6997
0x00A4	0x1B550000  	6997
0x00A8	0x1B550000  	6997
0x00AC	0x1B550000  	6997
0x00B0	0x1B550000  	6997
0x00B4	0x1B550000  	6997
0x00B8	0x1B550000  	6997
0x00BC	0x1B550000  	6997
; end of ____SysVT
_main:
;OLED_Demo.c, 7 :: 		void main()
0x1B5C	0xB087    SUB	SP, SP, #28
0x1B5E	0xF000FA83  BL	8296
0x1B62	0xF000FC93  BL	9356
0x1B66	0xF7FFFFEB  BL	6976
0x1B6A	0xF000FC4F  BL	9228
;OLED_Demo.c, 11 :: 		unsigned int m = 0;
;OLED_Demo.c, 12 :: 		unsigned char n = 0;
;OLED_Demo.c, 13 :: 		unsigned char o = 0;
;OLED_Demo.c, 14 :: 		unsigned char p = 0;
;OLED_Demo.c, 16 :: 		signed int i = -9;
;OLED_Demo.c, 18 :: 		float f = -10.0;
;OLED_Demo.c, 20 :: 		setup();
0x1B6E	0xF7FFFA93  BL	_setup+0
;OLED_Demo.c, 22 :: 		while(1)
L_main127:
;OLED_Demo.c, 24 :: 		i = -9;
0x1B72	0x2008    MOVS	R0, #8
0x1B74	0x43C0    MVN	R0, R0
0x1B76	0xB200    SXTH	R0, R0
0x1B78	0x9005    STR	R0, [SP, #20]
;OLED_Demo.c, 25 :: 		f = -10.0;
0x1B7A	0x48F5    LDR	R0, [PC, #980]
0x1B7C	0x9006    STR	R0, [SP, #24]
;OLED_Demo.c, 27 :: 		OLED_fill(0x00);
0x1B7E	0x2000    MOVS	R0, #0
0x1B80	0xF7FEFB3E  BL	_OLED_fill+0
;OLED_Demo.c, 28 :: 		OLED_fill(0xAA);
0x1B84	0x20AA    MOVS	R0, #170
0x1B86	0xF7FEFB3B  BL	_OLED_fill+0
;OLED_Demo.c, 29 :: 		delay_ms(600);
0x1B8A	0x4F02    LDR	R7, [PC, #8]
L_main129:
0x1B8C	0x1E7F    SUBS	R7, R7, #1
0x1B8E	0xD1FD    BNE	L_main129
0x1B90	0xBF00    NOP
0x1B92	0xE002    B	#4
0x1B94	0x3DFF0049  	#4799999
0x1B98	0xBF00    NOP
;OLED_Demo.c, 31 :: 		OLED_fill(0x55);
0x1B9A	0x2055    MOVS	R0, #85
0x1B9C	0xF7FEFB30  BL	_OLED_fill+0
;OLED_Demo.c, 32 :: 		delay_ms(600);
0x1BA0	0x4F02    LDR	R7, [PC, #8]
0x1BA2	0xBF00    NOP
L_main131:
0x1BA4	0x1E7F    SUBS	R7, R7, #1
0x1BA6	0xD1FD    BNE	L_main131
0x1BA8	0xE002    B	#4
0x1BAA	0xBF00    NOP
0x1BAC	0x3DFF0049  	#4799999
;OLED_Demo.c, 34 :: 		OLED_fill(0x00);
0x1BB0	0x2000    MOVS	R0, #0
0x1BB2	0xF7FEFB25  BL	_OLED_fill+0
;OLED_Demo.c, 35 :: 		OLED_clear_buffer();
0x1BB6	0xF7FEFD59  BL	_OLED_clear_buffer+0
;OLED_Demo.c, 36 :: 		for(m = 18; m < 114; m += 10)
0x1BBA	0x2012    MOVS	R0, #18
0x1BBC	0x9002    STR	R0, [SP, #8]
L_main133:
0x1BBE	0x9802    LDR	R0, [SP, #8]
0x1BC0	0xB280    UXTH	R0, R0
0x1BC2	0x2872    CMP	R0, #114
0x1BC4	0xD235    BCS	L_main134
;OLED_Demo.c, 38 :: 		for(n = 12;  n < 57; n += 8)
0x1BC6	0x200C    MOVS	R0, #12
0x1BC8	0x9003    STR	R0, [SP, #12]
L_main136:
0x1BCA	0x9803    LDR	R0, [SP, #12]
0x1BCC	0xB2C0    UXTB	R0, R0
0x1BCE	0x2839    CMP	R0, #57
0x1BD0	0xD22A    BCS	L_main137
;OLED_Demo.c, 40 :: 		Draw_Circle(m, n, 4, toggle, ON);
0x1BD2	0x2201    MOVS	R2, #1
0x1BD4	0x9901    LDR	R1, [SP, #4]
0x1BD6	0x2001    MOVS	R0, #1
0x1BD8	0x4008    ANDS	R0, R1
0x1BDA	0xB404    PUSH	(R2)
0x1BDC	0xB2C3    UXTB	R3, R0
0x1BDE	0x2204    MOVS	R2, #4
0x1BE0	0x9904    LDR	R1, [SP, #16]
0x1BE2	0xB2C9    UXTB	R1, R1
0x1BE4	0x9803    LDR	R0, [SP, #12]
0x1BE6	0xB280    UXTH	R0, R0
0x1BE8	0xF7FFFE7A  BL	_Draw_Circle+0
0x1BEC	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 41 :: 		toggle ^= ON;
0x1BEE	0x9801    LDR	R0, [SP, #4]
0x1BF0	0x2101    MOVS	R1, #1
0x1BF2	0x4001    ANDS	R1, R0
0x1BF4	0x2001    MOVS	R0, #1
0x1BF6	0x4048    EORS	R0, R1
0x1BF8	0xB2C2    UXTB	R2, R0
0x1BFA	0x9801    LDR	R0, [SP, #4]
0x1BFC	0x2101    MOVS	R1, #1
0x1BFE	0x4011    ANDS	R1, R2
0x1C00	0xD002    BEQ	L__main288
0x1C02	0x2101    MOVS	R1, #1
0x1C04	0x4308    ORRS	R0, R1
0x1C06	0xE001    B	L__main287
L__main288:
0x1C08	0x2101    MOVS	R1, #1
0x1C0A	0x4388    BICS	R0, R1
L__main287:
0x1C0C	0x9001    STR	R0, [SP, #4]
;OLED_Demo.c, 42 :: 		delay_ms(40);
0x1C0E	0x4F02    LDR	R7, [PC, #8]
L_main139:
0x1C10	0x1E7F    SUBS	R7, R7, #1
0x1C12	0xD1FD    BNE	L_main139
0x1C14	0xBF00    NOP
0x1C16	0xE002    B	#4
0x1C18	0xE1FF0004  	#319999
0x1C1C	0xBF00    NOP
;OLED_Demo.c, 38 :: 		for(n = 12;  n < 57; n += 8)
0x1C1E	0x9803    LDR	R0, [SP, #12]
0x1C20	0xB2C0    UXTB	R0, R0
0x1C22	0x3008    ADDS	R0, #8
0x1C24	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 43 :: 		}
0x1C26	0xE7D0    B	L_main136
L_main137:
;OLED_Demo.c, 36 :: 		for(m = 18; m < 114; m += 10)
0x1C28	0x9802    LDR	R0, [SP, #8]
0x1C2A	0xB280    UXTH	R0, R0
0x1C2C	0x300A    ADDS	R0, #10
0x1C2E	0x9002    STR	R0, [SP, #8]
;OLED_Demo.c, 44 :: 		}
0x1C30	0xE7C5    B	L_main133
L_main134:
;OLED_Demo.c, 45 :: 		delay_ms(1600);
0x1C32	0x4F02    LDR	R7, [PC, #8]
L_main141:
0x1C34	0x1E7F    SUBS	R7, R7, #1
0x1C36	0xD1FD    BNE	L_main141
0x1C38	0xBF00    NOP
0x1C3A	0xE002    B	#4
0x1C3C	0x4FFF00C3  	#12799999
0x1C40	0xBF00    NOP
;OLED_Demo.c, 47 :: 		OLED_fill(0x00);
0x1C42	0x2000    MOVS	R0, #0
0x1C44	0xF7FEFADC  BL	_OLED_fill+0
;OLED_Demo.c, 48 :: 		OLED_clear_buffer();
0x1C48	0xF7FEFD10  BL	_OLED_clear_buffer+0
;OLED_Demo.c, 49 :: 		for(n = 1;  n < 32; n++)
0x1C4C	0x2001    MOVS	R0, #1
0x1C4E	0x9003    STR	R0, [SP, #12]
L_main143:
0x1C50	0x9803    LDR	R0, [SP, #12]
0x1C52	0xB2C0    UXTB	R0, R0
0x1C54	0x2820    CMP	R0, #32
0x1C56	0xD20E    BCS	L_main144
;OLED_Demo.c, 51 :: 		Draw_Circle(63, 31, n, ON, ON);
0x1C58	0x2001    MOVS	R0, #1
0x1C5A	0xB401    PUSH	(R0)
0x1C5C	0x2301    MOVS	R3, #1
0x1C5E	0x9A04    LDR	R2, [SP, #16]
0x1C60	0xB2D2    UXTB	R2, R2
0x1C62	0x211F    MOVS	R1, #31
0x1C64	0x203F    MOVS	R0, #63
0x1C66	0xF7FFFE3B  BL	_Draw_Circle+0
0x1C6A	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 49 :: 		for(n = 1;  n < 32; n++)
0x1C6C	0x9803    LDR	R0, [SP, #12]
0x1C6E	0xB2C0    UXTB	R0, R0
0x1C70	0x3001    ADDS	R0, #1
0x1C72	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 52 :: 		}
0x1C74	0xE7EC    B	L_main143
L_main144:
;OLED_Demo.c, 53 :: 		delay_ms(2000);
0x1C76	0x4F02    LDR	R7, [PC, #8]
L_main146:
0x1C78	0x1E7F    SUBS	R7, R7, #1
0x1C7A	0xD1FD    BNE	L_main146
0x1C7C	0xBF00    NOP
0x1C7E	0xE002    B	#4
0x1C80	0x23FF00F4  	#15999999
0x1C84	0xBF00    NOP
;OLED_Demo.c, 54 :: 		for(n = 1;  n < 32; n++)
0x1C86	0x2001    MOVS	R0, #1
0x1C88	0x9003    STR	R0, [SP, #12]
L_main148:
0x1C8A	0x9803    LDR	R0, [SP, #12]
0x1C8C	0xB2C0    UXTB	R0, R0
0x1C8E	0x2820    CMP	R0, #32
0x1C90	0xD20E    BCS	L_main149
;OLED_Demo.c, 56 :: 		Draw_Circle(63, 31, n, ON, OFF);
0x1C92	0x2000    MOVS	R0, #0
0x1C94	0xB401    PUSH	(R0)
0x1C96	0x2301    MOVS	R3, #1
0x1C98	0x9A04    LDR	R2, [SP, #16]
0x1C9A	0xB2D2    UXTB	R2, R2
0x1C9C	0x211F    MOVS	R1, #31
0x1C9E	0x203F    MOVS	R0, #63
0x1CA0	0xF7FFFE1E  BL	_Draw_Circle+0
0x1CA4	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 54 :: 		for(n = 1;  n < 32; n++)
0x1CA6	0x9803    LDR	R0, [SP, #12]
0x1CA8	0xB2C0    UXTB	R0, R0
0x1CAA	0x3001    ADDS	R0, #1
0x1CAC	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 57 :: 		}
0x1CAE	0xE7EC    B	L_main148
L_main149:
;OLED_Demo.c, 58 :: 		delay_ms(900);
0x1CB0	0x4F02    LDR	R7, [PC, #8]
0x1CB2	0xBF00    NOP
L_main151:
0x1CB4	0x1E7F    SUBS	R7, R7, #1
0x1CB6	0xD1FD    BNE	L_main151
0x1CB8	0xE002    B	#4
0x1CBA	0xBF00    NOP
0x1CBC	0xDCFF006D  	#7199999
;OLED_Demo.c, 60 :: 		OLED_fill(0x00);
0x1CC0	0x2000    MOVS	R0, #0
0x1CC2	0xF7FEFA9D  BL	_OLED_fill+0
;OLED_Demo.c, 61 :: 		OLED_clear_buffer();
0x1CC6	0xF7FEFCD1  BL	_OLED_clear_buffer+0
;OLED_Demo.c, 62 :: 		for(n = 1;  n < 32; n++)
0x1CCA	0x2001    MOVS	R0, #1
0x1CCC	0x9003    STR	R0, [SP, #12]
L_main153:
0x1CCE	0x9803    LDR	R0, [SP, #12]
0x1CD0	0xB2C0    UXTB	R0, R0
0x1CD2	0x2820    CMP	R0, #32
0x1CD4	0xD229    BCS	L_main154
;OLED_Demo.c, 64 :: 		Draw_Circle(63, 31, n, N, toggle);
0x1CD6	0x9901    LDR	R1, [SP, #4]
0x1CD8	0x2001    MOVS	R0, #1
0x1CDA	0x4008    ANDS	R0, R1
0x1CDC	0xB401    PUSH	(R0)
0x1CDE	0x9B04    LDR	R3, [SP, #16]
0x1CE0	0xB2DB    UXTB	R3, R3
0x1CE2	0x9A04    LDR	R2, [SP, #16]
0x1CE4	0xB2D2    UXTB	R2, R2
0x1CE6	0x211F    MOVS	R1, #31
0x1CE8	0x203F    MOVS	R0, #63
0x1CEA	0xF7FFFDF9  BL	_Draw_Circle+0
0x1CEE	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 65 :: 		toggle ^= ON;
0x1CF0	0x9801    LDR	R0, [SP, #4]
0x1CF2	0x2101    MOVS	R1, #1
0x1CF4	0x4001    ANDS	R1, R0
0x1CF6	0x2001    MOVS	R0, #1
0x1CF8	0x4048    EORS	R0, R1
0x1CFA	0xB2C2    UXTB	R2, R0
0x1CFC	0x9801    LDR	R0, [SP, #4]
0x1CFE	0x2101    MOVS	R1, #1
0x1D00	0x4011    ANDS	R1, R2
0x1D02	0xD002    BEQ	L__main290
0x1D04	0x2101    MOVS	R1, #1
0x1D06	0x4308    ORRS	R0, R1
0x1D08	0xE001    B	L__main289
L__main290:
0x1D0A	0x2101    MOVS	R1, #1
0x1D0C	0x4388    BICS	R0, R1
L__main289:
0x1D0E	0x9001    STR	R0, [SP, #4]
;OLED_Demo.c, 66 :: 		delay_ms(10);
0x1D10	0x4F02    LDR	R7, [PC, #8]
0x1D12	0xBF00    NOP
L_main156:
0x1D14	0x1E7F    SUBS	R7, R7, #1
0x1D16	0xD1FD    BNE	L_main156
0x1D18	0xE002    B	#4
0x1D1A	0xBF00    NOP
0x1D1C	0x387F0001  	#79999
;OLED_Demo.c, 62 :: 		for(n = 1;  n < 32; n++)
0x1D20	0x9803    LDR	R0, [SP, #12]
0x1D22	0xB2C0    UXTB	R0, R0
0x1D24	0x3001    ADDS	R0, #1
0x1D26	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 67 :: 		}
0x1D28	0xE7D1    B	L_main153
L_main154:
;OLED_Demo.c, 68 :: 		delay_ms(2000);
0x1D2A	0x4F02    LDR	R7, [PC, #8]
L_main158:
0x1D2C	0x1E7F    SUBS	R7, R7, #1
0x1D2E	0xD1FD    BNE	L_main158
0x1D30	0xBF00    NOP
0x1D32	0xE002    B	#4
0x1D34	0x23FF00F4  	#15999999
0x1D38	0xBF00    NOP
;OLED_Demo.c, 70 :: 		OLED_fill(0x00);
0x1D3A	0x2000    MOVS	R0, #0
0x1D3C	0xF7FEFA60  BL	_OLED_fill+0
;OLED_Demo.c, 71 :: 		OLED_clear_buffer();
0x1D40	0xF7FEFC94  BL	_OLED_clear_buffer+0
;OLED_Demo.c, 72 :: 		for(m = 0; m < 128; m += 4)
0x1D44	0x2000    MOVS	R0, #0
0x1D46	0x9002    STR	R0, [SP, #8]
L_main160:
0x1D48	0x9802    LDR	R0, [SP, #8]
0x1D4A	0xB280    UXTH	R0, R0
0x1D4C	0x2880    CMP	R0, #128
0x1D4E	0xD21A    BCS	L_main161
;OLED_Demo.c, 74 :: 		for(n = 0; n < 64; n += 4)
0x1D50	0x2000    MOVS	R0, #0
0x1D52	0x9003    STR	R0, [SP, #12]
L_main163:
0x1D54	0x9803    LDR	R0, [SP, #12]
0x1D56	0xB2C0    UXTB	R0, R0
0x1D58	0x2840    CMP	R0, #64
0x1D5A	0xD20F    BCS	L_main164
;OLED_Demo.c, 76 :: 		Draw_Line(m, n, 127, 63, ON);
0x1D5C	0x2001    MOVS	R0, #1
0x1D5E	0xB401    PUSH	(R0)
0x1D60	0x233F    MOVS	R3, #63
0x1D62	0x227F    MOVS	R2, #127
0x1D64	0x9904    LDR	R1, [SP, #16]
0x1D66	0xB2C9    UXTB	R1, R1
0x1D68	0x9803    LDR	R0, [SP, #12]
0x1D6A	0xB280    UXTH	R0, R0
0x1D6C	0xF7FFF836  BL	_Draw_Line+0
0x1D70	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 74 :: 		for(n = 0; n < 64; n += 4)
0x1D72	0x9803    LDR	R0, [SP, #12]
0x1D74	0xB2C0    UXTB	R0, R0
0x1D76	0x3004    ADDS	R0, #4
0x1D78	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 77 :: 		}
0x1D7A	0xE7EB    B	L_main163
L_main164:
;OLED_Demo.c, 72 :: 		for(m = 0; m < 128; m += 4)
0x1D7C	0x9802    LDR	R0, [SP, #8]
0x1D7E	0xB280    UXTH	R0, R0
0x1D80	0x3004    ADDS	R0, #4
0x1D82	0x9002    STR	R0, [SP, #8]
;OLED_Demo.c, 78 :: 		}
0x1D84	0xE7E0    B	L_main160
L_main161:
;OLED_Demo.c, 79 :: 		for(m = 0; m < 128; m += 4)
0x1D86	0x2000    MOVS	R0, #0
0x1D88	0x9002    STR	R0, [SP, #8]
L_main166:
0x1D8A	0x9802    LDR	R0, [SP, #8]
0x1D8C	0xB280    UXTH	R0, R0
0x1D8E	0x2880    CMP	R0, #128
0x1D90	0xD21A    BCS	L_main167
;OLED_Demo.c, 81 :: 		for(n = 0; n < 64; n += 4)
0x1D92	0x2000    MOVS	R0, #0
0x1D94	0x9003    STR	R0, [SP, #12]
L_main169:
0x1D96	0x9803    LDR	R0, [SP, #12]
0x1D98	0xB2C0    UXTB	R0, R0
0x1D9A	0x2840    CMP	R0, #64
0x1D9C	0xD20F    BCS	L_main170
;OLED_Demo.c, 83 :: 		Draw_Line(127, 63, m, n, ON);
0x1D9E	0x2001    MOVS	R0, #1
0x1DA0	0xB401    PUSH	(R0)
0x1DA2	0x9B04    LDR	R3, [SP, #16]
0x1DA4	0xB2DB    UXTB	R3, R3
0x1DA6	0x9A03    LDR	R2, [SP, #12]
0x1DA8	0xB292    UXTH	R2, R2
0x1DAA	0x213F    MOVS	R1, #63
0x1DAC	0x207F    MOVS	R0, #127
0x1DAE	0xF7FFF815  BL	_Draw_Line+0
0x1DB2	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 81 :: 		for(n = 0; n < 64; n += 4)
0x1DB4	0x9803    LDR	R0, [SP, #12]
0x1DB6	0xB2C0    UXTB	R0, R0
0x1DB8	0x3004    ADDS	R0, #4
0x1DBA	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 84 :: 		}
0x1DBC	0xE7EB    B	L_main169
L_main170:
;OLED_Demo.c, 79 :: 		for(m = 0; m < 128; m += 4)
0x1DBE	0x9802    LDR	R0, [SP, #8]
0x1DC0	0xB280    UXTH	R0, R0
0x1DC2	0x3004    ADDS	R0, #4
0x1DC4	0x9002    STR	R0, [SP, #8]
;OLED_Demo.c, 85 :: 		}
0x1DC6	0xE7E0    B	L_main166
L_main167:
;OLED_Demo.c, 86 :: 		delay_ms(1600);
0x1DC8	0x4F02    LDR	R7, [PC, #8]
0x1DCA	0xBF00    NOP
L_main172:
0x1DCC	0x1E7F    SUBS	R7, R7, #1
0x1DCE	0xD1FD    BNE	L_main172
0x1DD0	0xE002    B	#4
0x1DD2	0xBF00    NOP
0x1DD4	0x4FFF00C3  	#12799999
;OLED_Demo.c, 87 :: 		for(m = 0; m < 128; m += 4)
0x1DD8	0x2000    MOVS	R0, #0
0x1DDA	0x9002    STR	R0, [SP, #8]
L_main174:
0x1DDC	0x9802    LDR	R0, [SP, #8]
0x1DDE	0xB280    UXTH	R0, R0
0x1DE0	0x2880    CMP	R0, #128
0x1DE2	0xD21A    BCS	L_main175
;OLED_Demo.c, 89 :: 		for(n = 0; n < 64; n += 4)
0x1DE4	0x2000    MOVS	R0, #0
0x1DE6	0x9003    STR	R0, [SP, #12]
L_main177:
0x1DE8	0x9803    LDR	R0, [SP, #12]
0x1DEA	0xB2C0    UXTB	R0, R0
0x1DEC	0x2840    CMP	R0, #64
0x1DEE	0xD20F    BCS	L_main178
;OLED_Demo.c, 91 :: 		Draw_Line(m, n, 127, 63, OFF);
0x1DF0	0x2000    MOVS	R0, #0
0x1DF2	0xB401    PUSH	(R0)
0x1DF4	0x233F    MOVS	R3, #63
0x1DF6	0x227F    MOVS	R2, #127
0x1DF8	0x9904    LDR	R1, [SP, #16]
0x1DFA	0xB2C9    UXTB	R1, R1
0x1DFC	0x9803    LDR	R0, [SP, #12]
0x1DFE	0xB280    UXTH	R0, R0
0x1E00	0xF7FEFFEC  BL	_Draw_Line+0
0x1E04	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 89 :: 		for(n = 0; n < 64; n += 4)
0x1E06	0x9803    LDR	R0, [SP, #12]
0x1E08	0xB2C0    UXTB	R0, R0
0x1E0A	0x3004    ADDS	R0, #4
0x1E0C	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 92 :: 		}
0x1E0E	0xE7EB    B	L_main177
L_main178:
;OLED_Demo.c, 87 :: 		for(m = 0; m < 128; m += 4)
0x1E10	0x9802    LDR	R0, [SP, #8]
0x1E12	0xB280    UXTH	R0, R0
0x1E14	0x3004    ADDS	R0, #4
0x1E16	0x9002    STR	R0, [SP, #8]
;OLED_Demo.c, 93 :: 		}
0x1E18	0xE7E0    B	L_main174
L_main175:
;OLED_Demo.c, 94 :: 		for(m = 0; m < 128; m += 4)
0x1E1A	0x2000    MOVS	R0, #0
0x1E1C	0x9002    STR	R0, [SP, #8]
L_main180:
0x1E1E	0x9802    LDR	R0, [SP, #8]
0x1E20	0xB280    UXTH	R0, R0
0x1E22	0x2880    CMP	R0, #128
0x1E24	0xD21A    BCS	L_main181
;OLED_Demo.c, 96 :: 		for(n = 0; n < 64; n += 4)
0x1E26	0x2000    MOVS	R0, #0
0x1E28	0x9003    STR	R0, [SP, #12]
L_main183:
0x1E2A	0x9803    LDR	R0, [SP, #12]
0x1E2C	0xB2C0    UXTB	R0, R0
0x1E2E	0x2840    CMP	R0, #64
0x1E30	0xD20F    BCS	L_main184
;OLED_Demo.c, 98 :: 		Draw_Line(127, 63, m, n, OFF);
0x1E32	0x2000    MOVS	R0, #0
0x1E34	0xB401    PUSH	(R0)
0x1E36	0x9B04    LDR	R3, [SP, #16]
0x1E38	0xB2DB    UXTB	R3, R3
0x1E3A	0x9A03    LDR	R2, [SP, #12]
0x1E3C	0xB292    UXTH	R2, R2
0x1E3E	0x213F    MOVS	R1, #63
0x1E40	0x207F    MOVS	R0, #127
0x1E42	0xF7FEFFCB  BL	_Draw_Line+0
0x1E46	0xB001    ADD	SP, SP, #4
;OLED_Demo.c, 96 :: 		for(n = 0; n < 64; n += 4)
0x1E48	0x9803    LDR	R0, [SP, #12]
0x1E4A	0xB2C0    UXTB	R0, R0
0x1E4C	0x3004    ADDS	R0, #4
0x1E4E	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 99 :: 		}
0x1E50	0xE7EB    B	L_main183
L_main184:
;OLED_Demo.c, 94 :: 		for(m = 0; m < 128; m += 4)
0x1E52	0x9802    LDR	R0, [SP, #8]
0x1E54	0xB280    UXTH	R0, R0
0x1E56	0x3004    ADDS	R0, #4
0x1E58	0x9002    STR	R0, [SP, #8]
;OLED_Demo.c, 100 :: 		}
0x1E5A	0xE7E0    B	L_main180
L_main181:
;OLED_Demo.c, 101 :: 		delay_ms(1600);
0x1E5C	0x4F02    LDR	R7, [PC, #8]
0x1E5E	0xBF00    NOP
L_main186:
0x1E60	0x1E7F    SUBS	R7, R7, #1
0x1E62	0xD1FD    BNE	L_main186
0x1E64	0xE002    B	#4
0x1E66	0xBF00    NOP
0x1E68	0x4FFF00C3  	#12799999
;OLED_Demo.c, 103 :: 		OLED_fill(0x00);
0x1E6C	0x2000    MOVS	R0, #0
0x1E6E	0xF7FEF9C7  BL	_OLED_fill+0
;OLED_Demo.c, 104 :: 		OLED_clear_buffer();
0x1E72	0xF7FEFBFB  BL	_OLED_clear_buffer+0
;OLED_Demo.c, 105 :: 		for(m = 0; m < 128; m += 8)
0x1E76	0x2000    MOVS	R0, #0
0x1E78	0x9002    STR	R0, [SP, #8]
L_main188:
0x1E7A	0x9802    LDR	R0, [SP, #8]
0x1E7C	0xB280    UXTH	R0, R0
0x1E7E	0x2880    CMP	R0, #128
0x1E80	0xD21E    BCS	L_main189
;OLED_Demo.c, 107 :: 		for(n = 0; n < 64; n += 8)
0x1E82	0x2000    MOVS	R0, #0
0x1E84	0x9003    STR	R0, [SP, #12]
L_main191:
0x1E86	0x9803    LDR	R0, [SP, #12]
0x1E88	0xB2C0    UXTB	R0, R0
0x1E8A	0x2840    CMP	R0, #64
0x1E8C	0xD213    BCS	L_main192
;OLED_Demo.c, 109 :: 		Draw_Rectangle(m, 0, 127, n, OFF, ON, ROUND);
0x1E8E	0x2201    MOVS	R2, #1
0x1E90	0x2101    MOVS	R1, #1
0x1E92	0x2000    MOVS	R0, #0
0x1E94	0xB404    PUSH	(R2)
0x1E96	0xB402    PUSH	(R1)
0x1E98	0xB401    PUSH	(R0)
0x1E9A	0x9B06    LDR	R3, [SP, #24]
0x1E9C	0xB2DB    UXTB	R3, R3
0x1E9E	0x227F    MOVS	R2, #127
0x1EA0	0x2100    MOVS	R1, #0
0x1EA2	0x9805    LDR	R0, [SP, #20]
0x1EA4	0xB280    UXTH	R0, R0
0x1EA6	0xF7FFFC21  BL	_Draw_Rectangle+0
0x1EAA	0xB003    ADD	SP, SP, #12
;OLED_Demo.c, 107 :: 		for(n = 0; n < 64; n += 8)
0x1EAC	0x9803    LDR	R0, [SP, #12]
0x1EAE	0xB2C0    UXTB	R0, R0
0x1EB0	0x3008    ADDS	R0, #8
0x1EB2	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 110 :: 		}
0x1EB4	0xE7E7    B	L_main191
L_main192:
;OLED_Demo.c, 105 :: 		for(m = 0; m < 128; m += 8)
0x1EB6	0x9802    LDR	R0, [SP, #8]
0x1EB8	0xB280    UXTH	R0, R0
0x1EBA	0x3008    ADDS	R0, #8
0x1EBC	0x9002    STR	R0, [SP, #8]
;OLED_Demo.c, 111 :: 		}
0x1EBE	0xE7DC    B	L_main188
L_main189:
;OLED_Demo.c, 112 :: 		delay_ms(600);
0x1EC0	0x4F02    LDR	R7, [PC, #8]
0x1EC2	0xBF00    NOP
L_main194:
0x1EC4	0x1E7F    SUBS	R7, R7, #1
0x1EC6	0xD1FD    BNE	L_main194
0x1EC8	0xE002    B	#4
0x1ECA	0xBF00    NOP
0x1ECC	0x3DFF0049  	#4799999
;OLED_Demo.c, 114 :: 		for(m = 0; m < 128; m++)
0x1ED0	0x2000    MOVS	R0, #0
0x1ED2	0x9002    STR	R0, [SP, #8]
L_main196:
0x1ED4	0x9802    LDR	R0, [SP, #8]
0x1ED6	0xB280    UXTH	R0, R0
0x1ED8	0x2880    CMP	R0, #128
0x1EDA	0xD243    BCS	L_main197
;OLED_Demo.c, 116 :: 		n = (28 + (28 * sin(m * 0.04090874)));
0x1EDC	0x9802    LDR	R0, [SP, #8]
0x1EDE	0xB280    UXTH	R0, R0
0x1EE0	0xF7FFFB3C  BL	__UnsignedIntegralToFloat+0
0x1EE4	0x4A1B    LDR	R2, [PC, #108]
0x1EE6	0xF7FFFB43  BL	__Mul_FP+0
0x1EEA	0xF7FFFB83  BL	_sin+0
0x1EEE	0x4A1A    LDR	R2, [PC, #104]
0x1EF0	0xF7FFFB3E  BL	__Mul_FP+0
0x1EF4	0x4A18    LDR	R2, [PC, #96]
0x1EF6	0xF7FEF8ED  BL	__Add_FP+0
0x1EFA	0xF7FFFCB5  BL	__FloatToUnsignedIntegral+0
0x1EFE	0xB2C0    UXTB	R0, R0
;OLED_Demo.c, 117 :: 		Draw_Pixel(m, n, ON);
0x1F00	0x2201    MOVS	R2, #1
0x1F02	0xB2C1    UXTB	R1, R0
0x1F04	0x9802    LDR	R0, [SP, #8]
0x1F06	0xB280    UXTH	R0, R0
0x1F08	0xF7FEFB18  BL	_Draw_Pixel+0
;OLED_Demo.c, 118 :: 		n = (28 + (28 * cos(m * 0.04090874)));
0x1F0C	0x9802    LDR	R0, [SP, #8]
0x1F0E	0xB280    UXTH	R0, R0
0x1F10	0xF7FFFB24  BL	__UnsignedIntegralToFloat+0
0x1F14	0x4A0F    LDR	R2, [PC, #60]
0x1F16	0xF7FFFB2B  BL	__Mul_FP+0
0x1F1A	0xF7FFFCBD  BL	_cos+0
0x1F1E	0x4A0E    LDR	R2, [PC, #56]
0x1F20	0xF7FFFB26  BL	__Mul_FP+0
0x1F24	0x4A0C    LDR	R2, [PC, #48]
0x1F26	0xF7FEF8D5  BL	__Add_FP+0
0x1F2A	0xF7FFFC9D  BL	__FloatToUnsignedIntegral+0
0x1F2E	0xB2C0    UXTB	R0, R0
;OLED_Demo.c, 119 :: 		Draw_Pixel(m, n, ON);
0x1F30	0x2201    MOVS	R2, #1
0x1F32	0xB2C1    UXTB	R1, R0
0x1F34	0x9802    LDR	R0, [SP, #8]
0x1F36	0xB280    UXTH	R0, R0
0x1F38	0xF7FEFB00  BL	_Draw_Pixel+0
;OLED_Demo.c, 120 :: 		delay_ms(20);
0x1F3C	0x4F02    LDR	R7, [PC, #8]
0x1F3E	0xBF00    NOP
L_main199:
0x1F40	0x1E7F    SUBS	R7, R7, #1
0x1F42	0xD1FD    BNE	L_main199
0x1F44	0xE002    B	#4
0x1F46	0xBF00    NOP
0x1F48	0x70FF0002  	#159999
;OLED_Demo.c, 114 :: 		for(m = 0; m < 128; m++)
0x1F4C	0x9802    LDR	R0, [SP, #8]
0x1F4E	0xE005    B	#10
0x1F50	0x0000C120  	#-1054867456
0x1F54	0x8FEC3D27  	#1026002924
0x1F58	0x000041E0  	#1105199104
0x1F5C	0xB280    UXTH	R0, R0
0x1F5E	0x3001    ADDS	R0, #1
0x1F60	0x9002    STR	R0, [SP, #8]
;OLED_Demo.c, 121 :: 		}
0x1F62	0xE7B7    B	L_main196
L_main197:
;OLED_Demo.c, 122 :: 		delay_ms(2000);
0x1F64	0x4F02    LDR	R7, [PC, #8]
0x1F66	0xBF00    NOP
L_main201:
0x1F68	0x1E7F    SUBS	R7, R7, #1
0x1F6A	0xD1FD    BNE	L_main201
0x1F6C	0xE002    B	#4
0x1F6E	0xBF00    NOP
0x1F70	0x23FF00F4  	#15999999
;OLED_Demo.c, 124 :: 		OLED_fill(0x00);
0x1F74	0x2000    MOVS	R0, #0
0x1F76	0xF7FEF943  BL	_OLED_fill+0
;OLED_Demo.c, 125 :: 		OLED_clear_buffer();
0x1F7A	0xF7FEFB77  BL	_OLED_clear_buffer+0
;OLED_Demo.c, 126 :: 		for(n = 0; n < 63; n++)
0x1F7E	0x2000    MOVS	R0, #0
0x1F80	0x9003    STR	R0, [SP, #12]
L_main203:
0x1F82	0x9803    LDR	R0, [SP, #12]
0x1F84	0xB2C0    UXTB	R0, R0
0x1F86	0x283F    CMP	R0, #63
0x1F88	0xD226    BCS	L_main204
;OLED_Demo.c, 128 :: 		Draw_Rectangle((0 + (n * 2)), (0 + n), (127 - (n * 2)), (63 - n), OFF, ON, SQUARE);
0x1F8A	0x2600    MOVS	R6, #0
0x1F8C	0x2501    MOVS	R5, #1
0x1F8E	0x2400    MOVS	R4, #0
0x1F90	0x9903    LDR	R1, [SP, #12]
0x1F92	0xB2C9    UXTB	R1, R1
0x1F94	0x203F    MOVS	R0, #63
0x1F96	0x1A43    SUBS	R3, R0, R1
0x1F98	0x9803    LDR	R0, [SP, #12]
0x1F9A	0xB2C0    UXTB	R0, R0
0x1F9C	0x0042    LSLS	R2, R0, #1
0x1F9E	0xB212    SXTH	R2, R2
0x1FA0	0x207F    MOVS	R0, #127
0x1FA2	0x1A81    SUBS	R1, R0, R2
0x1FA4	0x9803    LDR	R0, [SP, #12]
0x1FA6	0xB2C0    UXTB	R0, R0
0x1FA8	0x9000    STR	R0, [SP, #0]
0x1FAA	0xB210    SXTH	R0, R2
0x1FAC	0xB20A    SXTH	R2, R1
0x1FAE	0x9900    LDR	R1, [SP, #0]
0x1FB0	0xB209    SXTH	R1, R1
0x1FB2	0xB440    PUSH	(R6)
0x1FB4	0xB420    PUSH	(R5)
0x1FB6	0xB410    PUSH	(R4)
0x1FB8	0xF7FFFB98  BL	_Draw_Rectangle+0
0x1FBC	0xB003    ADD	SP, SP, #12
;OLED_Demo.c, 129 :: 		delay_ms(40);
0x1FBE	0x4F02    LDR	R7, [PC, #8]
L_main206:
0x1FC0	0x1E7F    SUBS	R7, R7, #1
0x1FC2	0xD1FD    BNE	L_main206
0x1FC4	0xBF00    NOP
0x1FC6	0xE002    B	#4
0x1FC8	0xE1FF0004  	#319999
0x1FCC	0xBF00    NOP
;OLED_Demo.c, 126 :: 		for(n = 0; n < 63; n++)
0x1FCE	0x9803    LDR	R0, [SP, #12]
0x1FD0	0xB2C0    UXTB	R0, R0
0x1FD2	0x3001    ADDS	R0, #1
0x1FD4	0x9003    STR	R0, [SP, #12]
;OLED_Demo.c, 130 :: 		}
0x1FD6	0xE7D4    B	L_main203
L_main204:
;OLED_Demo.c, 132 :: 		OLED_fill(0x00);
0x1FD8	0x2000    MOVS	R0, #0
0x1FDA	0xF7FEF911  BL	_OLED_fill+0
;OLED_Demo.c, 133 :: 		OLED_print_string(36, 1, "MicroArena");
0x1FDE	0x481F    LDR	R0, [PC, #124]
0x1FE0	0x4602    MOV	R2, R0
0x1FE2	0x2101    MOVS	R1, #1
0x1FE4	0x2024    MOVS	R0, #36
0x1FE6	0xF7FFFA73  BL	_OLED_print_string+0
;OLED_Demo.c, 134 :: 		OLED_print_string(12, 2, "fb.com/MicroArena");
0x1FEA	0x481D    LDR	R0, [PC, #116]
0x1FEC	0x4602    MOV	R2, R0
0x1FEE	0x2102    MOVS	R1, #2
0x1FF0	0x200C    MOVS	R0, #12
0x1FF2	0xF7FFFA6D  BL	_OLED_print_string+0
;OLED_Demo.c, 135 :: 		for(p = 0; p < 250; p++)
0x1FF6	0x2000    MOVS	R0, #0
0x1FF8	0x9004    STR	R0, [SP, #16]
L_main208:
0x1FFA	0x9804    LDR	R0, [SP, #16]
0x1FFC	0xB2C0    UXTB	R0, R0
0x1FFE	0x28FA    CMP	R0, #250
0x2000	0xD227    BCS	L_main209
;OLED_Demo.c, 137 :: 		f += 0.1;
0x2002	0x9A06    LDR	R2, [SP, #24]
0x2004	0x4817    LDR	R0, [PC, #92]
0x2006	0xF7FEF865  BL	__Add_FP+0
0x200A	0x9006    STR	R0, [SP, #24]
;OLED_Demo.c, 138 :: 		i += 1;
0x200C	0x9905    LDR	R1, [SP, #20]
0x200E	0xB209    SXTH	R1, R1
0x2010	0x3101    ADDS	R1, #1
0x2012	0x9105    STR	R1, [SP, #20]
;OLED_Demo.c, 140 :: 		OLED_print_float(1, 5, f, 1);
0x2014	0x2301    MOVS	R3, #1
0x2016	0x4602    MOV	R2, R0
0x2018	0x2105    MOVS	R1, #5
0x201A	0x2001    MOVS	R0, #1
0x201C	0xF7FFF840  BL	_OLED_print_float+0
;OLED_Demo.c, 141 :: 		OLED_print_int(1, 6, i);
0x2020	0x9A05    LDR	R2, [SP, #20]
0x2022	0xB212    SXTH	R2, R2
0x2024	0x2106    MOVS	R1, #6
0x2026	0x2001    MOVS	R0, #1
0x2028	0xF7FEFCE6  BL	_OLED_print_int+0
;OLED_Demo.c, 142 :: 		OLED_print_chr(1, 7, p);
0x202C	0x9A04    LDR	R2, [SP, #16]
0x202E	0xB2D2    UXTB	R2, R2
0x2030	0x2107    MOVS	R1, #7
0x2032	0x2001    MOVS	R0, #1
0x2034	0xF7FFF916  BL	_OLED_print_chr+0
;OLED_Demo.c, 144 :: 		delay_ms(99);
0x2038	0x4F02    LDR	R7, [PC, #8]
0x203A	0xBF00    NOP
L_main211:
0x203C	0x1E7F    SUBS	R7, R7, #1
0x203E	0xD1FD    BNE	L_main211
0x2040	0xE002    B	#4
0x2042	0xBF00    NOP
0x2044	0x15BF000C  	#791999
;OLED_Demo.c, 135 :: 		for(p = 0; p < 250; p++)
0x2048	0x9804    LDR	R0, [SP, #16]
0x204A	0xB2C0    UXTB	R0, R0
0x204C	0x3001    ADDS	R0, #1
0x204E	0x9004    STR	R0, [SP, #16]
;OLED_Demo.c, 145 :: 		}
0x2050	0xE7D3    B	L_main208
L_main209:
;OLED_Demo.c, 147 :: 		OLED_fill(0xFF);
0x2052	0x20FF    MOVS	R0, #255
0x2054	0xF7FEF8D4  BL	_OLED_fill+0
;OLED_Demo.c, 148 :: 		};
0x2058	0xE58B    B	L_main127
;OLED_Demo.c, 149 :: 		}
L_end_main:
L__main_end_loop:
0x205A	0xE7FE    B	L__main_end_loop
0x205C	0x00002000  	?lstr1_OLED_Demo+0
0x2060	0x000B2000  	?lstr2_OLED_Demo+0
0x2064	0xCCCD3DCC  	#1036831949
; end of _main
___CC2DW:
;__Lib_System.c, 27 :: 		
0x14BC	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 29 :: 		
L_loopDW:
;__Lib_System.c, 30 :: 		
0x14BE	0x783C    LDRB	R4, [R7, #0]
;__Lib_System.c, 31 :: 		
0x14C0	0x1C7F    ADDS	R7, R7, #1
;__Lib_System.c, 32 :: 		
0x14C2	0x7034    STRB	R4, [R6, #0]
;__Lib_System.c, 33 :: 		
0x14C4	0x1C76    ADDS	R6, R6, #1
;__Lib_System.c, 34 :: 		
0x14C6	0x42AE    CMP	R6, R5
;__Lib_System.c, 35 :: 		
0x14C8	0xD1F9    BNE	L_loopDW
;__Lib_System.c, 37 :: 		
L_end___CC2DW:
0x14CA	0xB001    ADD	SP, SP, #4
0x14CC	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System.c, 76 :: 		
0x1490	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 78 :: 		
0x1492	0x2400    MOVS	R4, #0
;__Lib_System.c, 79 :: 		
0x1494	0x2700    MOVS	R7, #0
;__Lib_System.c, 80 :: 		
0x1496	0x45AD    CMP	SP, R5
;__Lib_System.c, 81 :: 		
0x1498	0xDC03    BGT	L_loopFZs
;__Lib_System.c, 82 :: 		
0x149A	0x45B5    CMP	SP, R6
;__Lib_System.c, 83 :: 		
0x149C	0xDB01    BLT	L_loopFZs
;__Lib_System.c, 84 :: 		
0x149E	0x462F    MOV	R7, R5
;__Lib_System.c, 85 :: 		
0x14A0	0x466D    MOV	R5, SP
;__Lib_System.c, 86 :: 		
L_loopFZs:
;__Lib_System.c, 87 :: 		
0x14A2	0x6034    STR	R4, [R6, #0]
;__Lib_System.c, 88 :: 		
0x14A4	0x1D36    ADDS	R6, R6, #4
;__Lib_System.c, 89 :: 		
0x14A6	0x42AE    CMP	R6, R5
;__Lib_System.c, 90 :: 		
0x14A8	0xD1FB    BNE	L_loopFZs
;__Lib_System.c, 91 :: 		
0x14AA	0x42AF    CMP	R7, R5
;__Lib_System.c, 92 :: 		
0x14AC	0xDD03    BLE	L_norep
;__Lib_System.c, 93 :: 		
0x14AE	0x463D    MOV	R5, R7
;__Lib_System.c, 94 :: 		
0x14B0	0x6826    LDR	R6, [R4, #0]
;__Lib_System.c, 95 :: 		
0x14B2	0x1D36    ADDS	R6, R6, #4
;__Lib_System.c, 96 :: 		
0x14B4	0xE7F5    B	L_loopFZs
;__Lib_System.c, 97 :: 		
L_norep:
;__Lib_System.c, 99 :: 		
L_end___FillZeros:
0x14B6	0xB001    ADD	SP, SP, #4
0x14B8	0x4770    BX	LR
; end of ___FillZeros
_setup:
;OLED_Demo.c, 152 :: 		void setup()
0x1098	0xB500    PUSH	(R14)
;OLED_Demo.c, 154 :: 		OLED_init();
0x109A	0xF7FFFF4F  BL	_OLED_init+0
;OLED_Demo.c, 155 :: 		}
L_end_setup:
0x109E	0xBD00    POP	(R15)
; end of _setup
_OLED_init:
;ssd1306.c, 14 :: 		void OLED_init()
0x0F3C	0xB500    PUSH	(R14)
;ssd1306.c, 16 :: 		OLED_clear_buffer();
0x0F3E	0xF7FFFB95  BL	_OLED_clear_buffer+0
;ssd1306.c, 17 :: 		setup_GPIOs();
0x0F42	0xF7FFFBA5  BL	_setup_GPIOs+0
;ssd1306.c, 18 :: 		OLED_reset_sequence();
0x0F46	0xF7FFFBFF  BL	_OLED_reset_sequence+0
;ssd1306.c, 20 :: 		OLED_write((Set_Display_ON_or_OFF_CMD + Display_OFF) , CMD);;
0x0F4A	0x2100    MOVS	R1, #0
0x0F4C	0x20AE    MOVS	R0, #174
0x0F4E	0xF7FFFC23  BL	_OLED_write+0
;ssd1306.c, 22 :: 		OLED_write(Set_Display_Clock_CMD, CMD);
0x0F52	0x2100    MOVS	R1, #0
0x0F54	0x20D5    MOVS	R0, #213
0x0F56	0xF7FFFC1F  BL	_OLED_write+0
;ssd1306.c, 23 :: 		OLED_write(0x80, CMD);
0x0F5A	0x2100    MOVS	R1, #0
0x0F5C	0x2080    MOVS	R0, #128
0x0F5E	0xF7FFFC1B  BL	_OLED_write+0
;ssd1306.c, 25 :: 		OLED_write(Set_Multiplex_Ratio_CMD, CMD);
0x0F62	0x2100    MOVS	R1, #0
0x0F64	0x20A8    MOVS	R0, #168
0x0F66	0xF7FFFC17  BL	_OLED_write+0
;ssd1306.c, 26 :: 		OLED_write(0x3F, CMD);
0x0F6A	0x2100    MOVS	R1, #0
0x0F6C	0x203F    MOVS	R0, #63
0x0F6E	0xF7FFFC13  BL	_OLED_write+0
;ssd1306.c, 28 :: 		OLED_write(Set_Display_Offset_CMD, CMD);
0x0F72	0x2100    MOVS	R1, #0
0x0F74	0x20D3    MOVS	R0, #211
0x0F76	0xF7FFFC0F  BL	_OLED_write+0
;ssd1306.c, 29 :: 		OLED_write(0x00, CMD);
0x0F7A	0x2100    MOVS	R1, #0
0x0F7C	0x2000    MOVS	R0, #0
0x0F7E	0xF7FFFC0B  BL	_OLED_write+0
;ssd1306.c, 31 :: 		OLED_write((Set_Display_Start_Line_CMD | 0x00), CMD);
0x0F82	0x2100    MOVS	R1, #0
0x0F84	0x2040    MOVS	R0, #64
0x0F86	0xF7FFFC07  BL	_OLED_write+0
;ssd1306.c, 33 :: 		OLED_write(Set_Charge_Pump_CMD, CMD);
0x0F8A	0x2100    MOVS	R1, #0
0x0F8C	0x208D    MOVS	R0, #141
0x0F8E	0xF7FFFC03  BL	_OLED_write+0
;ssd1306.c, 34 :: 		OLED_write((Set_Higher_Column_Start_Address_CMD | Enable_Charge_Pump), CMD);
0x0F92	0x2100    MOVS	R1, #0
0x0F94	0x2014    MOVS	R0, #20
0x0F96	0xF7FFFBFF  BL	_OLED_write+0
;ssd1306.c, 36 :: 		OLED_write(Set_Memory_Addressing_Mode_CMD, CMD);
0x0F9A	0x2100    MOVS	R1, #0
0x0F9C	0x2020    MOVS	R0, #32
0x0F9E	0xF7FFFBFB  BL	_OLED_write+0
;ssd1306.c, 37 :: 		OLED_write(Page_Addressing_Mode, CMD);
0x0FA2	0x2100    MOVS	R1, #0
0x0FA4	0x2002    MOVS	R0, #2
0x0FA6	0xF7FFFBF7  BL	_OLED_write+0
;ssd1306.c, 39 :: 		OLED_write((Set_Segment_Remap_CMD | Column_Address_0_Mapped_to_SEG127), CMD);
0x0FAA	0x2100    MOVS	R1, #0
0x0FAC	0x20A1    MOVS	R0, #161
0x0FAE	0xF7FFFBF3  BL	_OLED_write+0
;ssd1306.c, 41 :: 		OLED_write((Set_COM_Output_Scan_Direction_CMD | Scan_from_COM63_to_0), CMD);
0x0FB2	0x2100    MOVS	R1, #0
0x0FB4	0x20C8    MOVS	R0, #200
0x0FB6	0xF7FFFBEF  BL	_OLED_write+0
;ssd1306.c, 43 :: 		OLED_write(Set_Common_HW_Config_CMD, CMD);
0x0FBA	0x2100    MOVS	R1, #0
0x0FBC	0x20DA    MOVS	R0, #218
0x0FBE	0xF7FFFBEB  BL	_OLED_write+0
;ssd1306.c, 44 :: 		OLED_write(0x12, CMD);
0x0FC2	0x2100    MOVS	R1, #0
0x0FC4	0x2012    MOVS	R0, #18
0x0FC6	0xF7FFFBE7  BL	_OLED_write+0
;ssd1306.c, 46 :: 		OLED_write(Set_Contrast_Control_CMD, CMD);
0x0FCA	0x2100    MOVS	R1, #0
0x0FCC	0x2081    MOVS	R0, #129
0x0FCE	0xF7FFFBE3  BL	_OLED_write+0
;ssd1306.c, 47 :: 		OLED_write(0xCF, CMD);
0x0FD2	0x2100    MOVS	R1, #0
0x0FD4	0x20CF    MOVS	R0, #207
0x0FD6	0xF7FFFBDF  BL	_OLED_write+0
;ssd1306.c, 49 :: 		OLED_write(Set_Pre_charge_Period_CMD, CMD);
0x0FDA	0x2100    MOVS	R1, #0
0x0FDC	0x20D9    MOVS	R0, #217
0x0FDE	0xF7FFFBDB  BL	_OLED_write+0
;ssd1306.c, 50 :: 		OLED_write(0xF1, CMD);
0x0FE2	0x2100    MOVS	R1, #0
0x0FE4	0x20F1    MOVS	R0, #241
0x0FE6	0xF7FFFBD7  BL	_OLED_write+0
;ssd1306.c, 52 :: 		OLED_write(Set_VCOMH_Level_CMD, CMD);
0x0FEA	0x2100    MOVS	R1, #0
0x0FEC	0x20DB    MOVS	R0, #219
0x0FEE	0xF7FFFBD3  BL	_OLED_write+0
;ssd1306.c, 53 :: 		OLED_write(0x40, CMD);
0x0FF2	0x2100    MOVS	R1, #0
0x0FF4	0x2040    MOVS	R0, #64
0x0FF6	0xF7FFFBCF  BL	_OLED_write+0
;ssd1306.c, 55 :: 		OLED_write((Set_Entire_Display_ON_CMD | Normal_Display), CMD);
0x0FFA	0x2100    MOVS	R1, #0
0x0FFC	0x20A4    MOVS	R0, #164
0x0FFE	0xF7FFFBCB  BL	_OLED_write+0
;ssd1306.c, 57 :: 		OLED_write((Set_Normal_or_Inverse_Display_CMD | Non_Inverted_Display), CMD);
0x1002	0x2100    MOVS	R1, #0
0x1004	0x20A6    MOVS	R0, #166
0x1006	0xF7FFFBC7  BL	_OLED_write+0
;ssd1306.c, 59 :: 		OLED_write((Set_Display_ON_or_OFF_CMD + Display_ON) , CMD);
0x100A	0x2100    MOVS	R1, #0
0x100C	0x20AF    MOVS	R0, #175
0x100E	0xF7FFFBC3  BL	_OLED_write+0
;ssd1306.c, 61 :: 		OLED_gotoxy(0, 0);
0x1012	0x2100    MOVS	R1, #0
0x1014	0x2000    MOVS	R0, #0
0x1016	0xF7FFFBF3  BL	_OLED_gotoxy+0
;ssd1306.c, 63 :: 		OLED_clear_screen();
0x101A	0xF7FFFAEF  BL	_OLED_clear_screen+0
;ssd1306.c, 64 :: 		}
L_end_OLED_init:
0x101E	0xBD00    POP	(R15)
; end of _OLED_init
_OLED_clear_buffer:
;ssd1306.c, 137 :: 		void OLED_clear_buffer()
0x066C	0xB500    PUSH	(R14)
;ssd1306.c, 139 :: 		unsigned int s = 0x00;
;ssd1306.c, 141 :: 		for(s = 0; s < buffer_size; s++)
; s start address is: 8 (R2)
0x066E	0x2200    MOVS	R2, #0
; s end address is: 8 (R2)
L_OLED_clear_buffer16:
; s start address is: 8 (R2)
0x0670	0x4805    LDR	R0, [PC, #20]
0x0672	0x4282    CMP	R2, R0
0x0674	0xD206    BCS	L_OLED_clear_buffer17
;ssd1306.c, 143 :: 		buffer[s] = 0x00;
0x0676	0x4805    LDR	R0, [PC, #20]
0x0678	0x1881    ADDS	R1, R0, R2
0x067A	0x2000    MOVS	R0, #0
0x067C	0x7008    STRB	R0, [R1, #0]
;ssd1306.c, 141 :: 		for(s = 0; s < buffer_size; s++)
0x067E	0x3201    ADDS	R2, #1
0x0680	0xB292    UXTH	R2, R2
;ssd1306.c, 144 :: 		}
; s end address is: 8 (R2)
0x0682	0xE7F5    B	L_OLED_clear_buffer16
L_OLED_clear_buffer17:
;ssd1306.c, 145 :: 		}
L_end_OLED_clear_buffer:
0x0684	0xBD00    POP	(R15)
0x0686	0xBF00    NOP
0x0688	0x04000000  	#1024
0x068C	0x001D2000  	_buffer+0
; end of _OLED_clear_buffer
_setup_GPIOs:
;ssd1306.c, 4 :: 		void setup_GPIOs()
0x0690	0xB500    PUSH	(R14)
;ssd1306.c, 6 :: 		GPIO_Clk_Enable(&GPIOB_BASE);
0x0692	0x4808    LDR	R0, [PC, #32]
0x0694	0xF7FFFD74  BL	_GPIO_Clk_Enable+0
;ssd1306.c, 9 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_10MHZ | _GPIO_CFG_OTYPE_PP));
0x0698	0x4A07    LDR	R2, [PC, #28]
;ssd1306.c, 8 :: 		(_GPIO_PINMASK_4 | _GPIO_PINMASK_5 | _GPIO_PINMASK_6 | _GPIO_PINMASK_7),
0x069A	0x21F0    MOVS	R1, #240
;ssd1306.c, 7 :: 		GPIO_Config(&GPIOB_BASE,
0x069C	0x4805    LDR	R0, [PC, #20]
;ssd1306.c, 9 :: 		(_GPIO_CFG_MODE_OUTPUT | _GPIO_CFG_SPEED_10MHZ | _GPIO_CFG_OTYPE_PP));
0x069E	0xF7FFFDD5  BL	_GPIO_Config+0
;ssd1306.c, 10 :: 		delay_ms(200);
0x06A2	0x4F02    LDR	R7, [PC, #8]
L_setup_GPIOs0:
0x06A4	0x1E7F    SUBS	R7, R7, #1
0x06A6	0xD1FD    BNE	L_setup_GPIOs0
0x06A8	0xBF00    NOP
0x06AA	0xE002    B	#4
0x06AC	0x69FF0018  	#1599999
0x06B0	0xBF00    NOP
;ssd1306.c, 11 :: 		}
L_end_setup_GPIOs:
0x06B2	0xBD00    POP	(R15)
0x06B4	0x04004800  	GPIOB_BASE+0
0x06B8	0x04140000  	#1044
; end of _setup_GPIOs
_GPIO_Clk_Enable:
;__Lib_GPIO_32F051xx.c, 34 :: 		
; gpio_port start address is: 0 (R0)
0x0180	0xB500    PUSH	(R14)
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F051xx.c, 37 :: 		
0x0182	0x4913    LDR	R1, [PC, #76]
0x0184	0x4001    ANDS	R1, R0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0186	0x4608    MOV	R0, R1
;__Lib_GPIO_32F051xx.c, 38 :: 		
; pos start address is: 8 (R2)
0x0188	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F051xx.c, 39 :: 		
0x018A	0xE009    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F051xx.c, 40 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x018C	0x4811    LDR	R0, [PC, #68]
; pos end address is: 0 (R0)
0x018E	0xE017    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F051xx.c, 41 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0190	0x4811    LDR	R0, [PC, #68]
; pos end address is: 0 (R0)
0x0192	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F051xx.c, 42 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0194	0x4811    LDR	R0, [PC, #68]
; pos end address is: 0 (R0)
0x0196	0xE013    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F051xx.c, 43 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0198	0x4811    LDR	R0, [PC, #68]
; pos end address is: 0 (R0)
0x019A	0xE011    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F051xx.c, 44 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x019C	0x4811    LDR	R0, [PC, #68]
; pos end address is: 0 (R0)
0x019E	0xE00F    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F051xx.c, 45 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x01A0	0x4911    LDR	R1, [PC, #68]
0x01A2	0x4288    CMP	R0, R1
0x01A4	0xD0F2    BEQ	L_GPIO_Clk_Enable2
0x01A6	0x4911    LDR	R1, [PC, #68]
0x01A8	0x4288    CMP	R0, R1
0x01AA	0xD0F1    BEQ	L_GPIO_Clk_Enable3
0x01AC	0x4910    LDR	R1, [PC, #64]
0x01AE	0x4288    CMP	R0, R1
0x01B0	0xD0F0    BEQ	L_GPIO_Clk_Enable4
0x01B2	0x4910    LDR	R1, [PC, #64]
0x01B4	0x4288    CMP	R0, R1
0x01B6	0xD0EF    BEQ	L_GPIO_Clk_Enable5
0x01B8	0x490F    LDR	R1, [PC, #60]
0x01BA	0x4288    CMP	R0, R1
0x01BC	0xD0EE    BEQ	L_GPIO_Clk_Enable6
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01BE	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F051xx.c, 47 :: 		
; pos start address is: 0 (R0)
0x01C0	0x490E    LDR	R1, [PC, #56]
0x01C2	0x6809    LDR	R1, [R1, #0]
0x01C4	0x460A    MOV	R2, R1
0x01C6	0x4302    ORRS	R2, R0
; pos end address is: 0 (R0)
0x01C8	0x490C    LDR	R1, [PC, #48]
0x01CA	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F051xx.c, 48 :: 		
L_end_GPIO_Clk_Enable:
0x01CC	0xBD00    POP	(R15)
0x01CE	0xBF00    NOP
0x01D0	0xFC00FFFF  	#-1024
0x01D4	0x00000002  	#131072
0x01D8	0x00000004  	#262144
0x01DC	0x00000008  	#524288
0x01E0	0x00000010  	#1048576
0x01E4	0x00000040  	#4194304
0x01E8	0x00004800  	#1207959552
0x01EC	0x04004800  	#1207960576
0x01F0	0x08004800  	#1207961600
0x01F4	0x0C004800  	#1207962624
0x01F8	0x14004800  	#1207964672
0x01FC	0x10144002  	RCC_AHBENR+0
; end of _GPIO_Clk_Enable
_GPIO_Config:
;__Lib_GPIO_32F051xx.c, 75 :: 		
0x024C	0xB500    PUSH	(R14)
0x024E	0xB086    SUB	SP, SP, #24
0x0250	0x9003    STR	R0, [SP, #12]
0x0252	0x9104    STR	R1, [SP, #16]
0x0254	0x9205    STR	R2, [SP, #20]
;__Lib_GPIO_32F051xx.c, 76 :: 		
;__Lib_GPIO_32F051xx.c, 77 :: 		
;__Lib_GPIO_32F051xx.c, 81 :: 		
0x0256	0x9C03    LDR	R4, [SP, #12]
0x0258	0x4B99    LDR	R3, [PC, #612]
0x025A	0x4023    ANDS	R3, R4
0x025C	0x9303    STR	R3, [SP, #12]
;__Lib_GPIO_32F051xx.c, 83 :: 		
0x025E	0x4618    MOV	R0, R3
0x0260	0xF7FFFF8E  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F051xx.c, 86 :: 		
0x0264	0x9C04    LDR	R4, [SP, #16]
0x0266	0xB2A4    UXTH	R4, R4
0x0268	0x4B96    LDR	R3, [PC, #600]
0x026A	0x429C    CMP	R4, R3
0x026C	0xD121    BNE	L_GPIO_Config14
;__Lib_GPIO_32F051xx.c, 87 :: 		
0x026E	0x9B03    LDR	R3, [SP, #12]
0x0270	0x681C    LDR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 88 :: 		
0x0272	0x4B95    LDR	R3, [PC, #596]
0x0274	0x4023    ANDS	R3, R4
; tmp start address is: 0 (R0)
0x0276	0x4618    MOV	R0, R3
;__Lib_GPIO_32F051xx.c, 89 :: 		
0x0278	0x9C05    LDR	R4, [SP, #20]
0x027A	0x4B94    LDR	R3, [PC, #592]
0x027C	0x429C    CMP	R4, R3
0x027E	0xD112    BNE	L_GPIO_Config15
;__Lib_GPIO_32F051xx.c, 90 :: 		
0x0280	0x4B93    LDR	R3, [PC, #588]
0x0282	0x4604    MOV	R4, R0
0x0284	0x431C    ORRS	R4, R3
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F051xx.c, 91 :: 		
0x0286	0x9B03    LDR	R3, [SP, #12]
0x0288	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 92 :: 		
0x028A	0x9B03    LDR	R3, [SP, #12]
0x028C	0x1D1D    ADDS	R5, R3, #4
0x028E	0x682C    LDR	R4, [R5, #0]
0x0290	0x4B90    LDR	R3, [PC, #576]
0x0292	0x4023    ANDS	R3, R4
0x0294	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F051xx.c, 93 :: 		
0x0296	0x9B03    LDR	R3, [SP, #12]
0x0298	0x461D    MOV	R5, R3
0x029A	0x3508    ADDS	R5, #8
0x029C	0x682C    LDR	R4, [R5, #0]
0x029E	0x4B8E    LDR	R3, [PC, #568]
0x02A0	0x4323    ORRS	R3, R4
0x02A2	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F051xx.c, 94 :: 		
0x02A4	0xE109    B	L_end_GPIO_Config
;__Lib_GPIO_32F051xx.c, 95 :: 		
L_GPIO_Config15:
;__Lib_GPIO_32F051xx.c, 96 :: 		
; tmp start address is: 0 (R0)
0x02A6	0x9B05    LDR	R3, [SP, #20]
0x02A8	0x2B42    CMP	R3, #66
0x02AA	0xD102    BNE	L_GPIO_Config16
;__Lib_GPIO_32F051xx.c, 97 :: 		
0x02AC	0x9B03    LDR	R3, [SP, #12]
0x02AE	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F051xx.c, 98 :: 		
0x02B0	0xE103    B	L_end_GPIO_Config
;__Lib_GPIO_32F051xx.c, 99 :: 		
L_GPIO_Config16:
;__Lib_GPIO_32F051xx.c, 100 :: 		
L_GPIO_Config14:
;__Lib_GPIO_32F051xx.c, 102 :: 		
0x02B2	0x9C04    LDR	R4, [SP, #16]
0x02B4	0xB2A4    UXTH	R4, R4
0x02B6	0x4B89    LDR	R3, [PC, #548]
0x02B8	0x429C    CMP	R4, R3
0x02BA	0xD117    BNE	L_GPIO_Config17
;__Lib_GPIO_32F051xx.c, 103 :: 		
0x02BC	0x9C05    LDR	R4, [SP, #20]
0x02BE	0x4B83    LDR	R3, [PC, #524]
0x02C0	0x429C    CMP	R4, R3
0x02C2	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F051xx.c, 104 :: 		
0x02C4	0x4C86    LDR	R4, [PC, #536]
0x02C6	0x9B03    LDR	R3, [SP, #12]
0x02C8	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 105 :: 		
0x02CA	0x9B03    LDR	R3, [SP, #12]
0x02CC	0x1D1C    ADDS	R4, R3, #4
0x02CE	0x2300    MOVS	R3, #0
0x02D0	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F051xx.c, 106 :: 		
0x02D2	0x9B03    LDR	R3, [SP, #12]
0x02D4	0x461C    MOV	R4, R3
0x02D6	0x3408    ADDS	R4, #8
0x02D8	0x4B82    LDR	R3, [PC, #520]
0x02DA	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F051xx.c, 107 :: 		
0x02DC	0xE0ED    B	L_end_GPIO_Config
;__Lib_GPIO_32F051xx.c, 108 :: 		
L_GPIO_Config18:
;__Lib_GPIO_32F051xx.c, 109 :: 		
0x02DE	0x9B05    LDR	R3, [SP, #20]
0x02E0	0x2B42    CMP	R3, #66
0x02E2	0xD103    BNE	L_GPIO_Config19
;__Lib_GPIO_32F051xx.c, 110 :: 		
0x02E4	0x2400    MOVS	R4, #0
0x02E6	0x9B03    LDR	R3, [SP, #12]
0x02E8	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 111 :: 		
0x02EA	0xE0E6    B	L_end_GPIO_Config
;__Lib_GPIO_32F051xx.c, 112 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F051xx.c, 113 :: 		
L_GPIO_Config17:
;__Lib_GPIO_32F051xx.c, 115 :: 		
0x02EC	0x9C05    LDR	R4, [SP, #20]
0x02EE	0x2301    MOVS	R3, #1
0x02F0	0x4023    ANDS	R3, R4
0x02F2	0x2B00    CMP	R3, #0
0x02F4	0xD002    BEQ	L_GPIO_Config20
;__Lib_GPIO_32F051xx.c, 116 :: 		
; mode start address is: 0 (R0)
0x02F6	0x2003    MOVS	R0, #3
0x02F8	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
0x02FA	0xE00F    B	L_GPIO_Config21
L_GPIO_Config20:
;__Lib_GPIO_32F051xx.c, 117 :: 		
0x02FC	0x9C05    LDR	R4, [SP, #20]
0x02FE	0x2308    MOVS	R3, #8
0x0300	0x4023    ANDS	R3, R4
0x0302	0x2B00    CMP	R3, #0
0x0304	0xD001    BEQ	L_GPIO_Config22
;__Lib_GPIO_32F051xx.c, 118 :: 		
; mode start address is: 0 (R0)
0x0306	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x0308	0xE007    B	L_GPIO_Config23
L_GPIO_Config22:
;__Lib_GPIO_32F051xx.c, 119 :: 		
0x030A	0x9C05    LDR	R4, [SP, #20]
0x030C	0x2304    MOVS	R3, #4
0x030E	0x4023    ANDS	R3, R4
0x0310	0x2B00    CMP	R3, #0
0x0312	0xD001    BEQ	L_GPIO_Config24
;__Lib_GPIO_32F051xx.c, 120 :: 		
; mode start address is: 0 (R0)
0x0314	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x0316	0xE000    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F051xx.c, 122 :: 		
; mode start address is: 0 (R0)
0x0318	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config25:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config23:
; mode start address is: 0 (R0)
0x031A	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
L_GPIO_Config21:
;__Lib_GPIO_32F051xx.c, 124 :: 		
; mode start address is: 28 (R7)
0x031C	0x9C05    LDR	R4, [SP, #20]
0x031E	0x4B72    LDR	R3, [PC, #456]
0x0320	0x4023    ANDS	R3, R4
0x0322	0x2B00    CMP	R3, #0
0x0324	0xD001    BEQ	L_GPIO_Config26
;__Lib_GPIO_32F051xx.c, 125 :: 		
; speed start address is: 8 (R2)
0x0326	0x2203    MOVS	R2, #3
; speed end address is: 8 (R2)
0x0328	0xE010    B	L_GPIO_Config27
L_GPIO_Config26:
;__Lib_GPIO_32F051xx.c, 126 :: 		
0x032A	0x9C05    LDR	R4, [SP, #20]
0x032C	0x4B6F    LDR	R3, [PC, #444]
0x032E	0x4023    ANDS	R3, R4
0x0330	0x2B00    CMP	R3, #0
0x0332	0xD001    BEQ	L_GPIO_Config28
;__Lib_GPIO_32F051xx.c, 127 :: 		
; speed start address is: 8 (R2)
0x0334	0x2202    MOVS	R2, #2
; speed end address is: 8 (R2)
0x0336	0xE009    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F051xx.c, 128 :: 		
0x0338	0x9C05    LDR	R4, [SP, #20]
0x033A	0x4B6D    LDR	R3, [PC, #436]
0x033C	0x4023    ANDS	R3, R4
0x033E	0x2B00    CMP	R3, #0
0x0340	0xD002    BEQ	L_GPIO_Config30
;__Lib_GPIO_32F051xx.c, 129 :: 		
; speed start address is: 4 (R1)
0x0342	0x2101    MOVS	R1, #1
0x0344	0x460A    MOV	R2, R1
; speed end address is: 4 (R1)
0x0346	0xE001    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F051xx.c, 131 :: 		
; speed start address is: 4 (R1)
0x0348	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
0x034A	0x460A    MOV	R2, R1
L_GPIO_Config31:
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
L_GPIO_Config29:
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
L_GPIO_Config27:
;__Lib_GPIO_32F051xx.c, 133 :: 		
; speed start address is: 8 (R2)
0x034C	0x9C05    LDR	R4, [SP, #20]
0x034E	0x2320    MOVS	R3, #32
0x0350	0x4023    ANDS	R3, R4
0x0352	0x2B00    CMP	R3, #0
0x0354	0xD001    BEQ	L_GPIO_Config32
;__Lib_GPIO_32F051xx.c, 134 :: 		
; otype start address is: 4 (R1)
0x0356	0x2101    MOVS	R1, #1
; otype end address is: 4 (R1)
0x0358	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F051xx.c, 136 :: 		
; otype start address is: 4 (R1)
0x035A	0x2100    MOVS	R1, #0
; otype end address is: 4 (R1)
L_GPIO_Config33:
;__Lib_GPIO_32F051xx.c, 138 :: 		
; otype start address is: 4 (R1)
0x035C	0x9C05    LDR	R4, [SP, #20]
0x035E	0x23FF    MOVS	R3, #255
0x0360	0x3301    ADDS	R3, #1
0x0362	0x4023    ANDS	R3, R4
0x0364	0x2B00    CMP	R3, #0
0x0366	0xD002    BEQ	L_GPIO_Config34
;__Lib_GPIO_32F051xx.c, 139 :: 		
; pull start address is: 16 (R4)
0x0368	0x2402    MOVS	R4, #2
0x036A	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
0x036C	0xE008    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F051xx.c, 140 :: 		
0x036E	0x9C05    LDR	R4, [SP, #20]
0x0370	0x2380    MOVS	R3, #128
0x0372	0x4023    ANDS	R3, R4
0x0374	0x2B00    CMP	R3, #0
0x0376	0xD001    BEQ	L_GPIO_Config36
;__Lib_GPIO_32F051xx.c, 141 :: 		
; pull start address is: 16 (R4)
0x0378	0x2401    MOVS	R4, #1
; pull end address is: 16 (R4)
0x037A	0xE000    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F051xx.c, 143 :: 		
; pull start address is: 16 (R4)
0x037C	0x2400    MOVS	R4, #0
; pull end address is: 16 (R4)
L_GPIO_Config37:
; pull start address is: 16 (R4)
0x037E	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
L_GPIO_Config35:
;__Lib_GPIO_32F051xx.c, 147 :: 		
; pull start address is: 0 (R0)
0x0380	0x2300    MOVS	R3, #0
0x0382	0x9302    STR	R3, [SP, #8]
L_GPIO_Config38:
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 28 (R7)
; mode end address is: 28 (R7)
0x0384	0x9B02    LDR	R3, [SP, #8]
0x0386	0x2B10    CMP	R3, #16
0x0388	0xD300    BCC	#0
0x038A	0xE096    B	L_GPIO_Config39
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
;__Lib_GPIO_32F051xx.c, 149 :: 		
; mode start address is: 28 (R7)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x038C	0x9D02    LDR	R5, [SP, #8]
0x038E	0x2301    MOVS	R3, #1
0x0390	0x461C    MOV	R4, R3
0x0392	0x40AC    LSLS	R4, R5
;__Lib_GPIO_32F051xx.c, 151 :: 		
0x0394	0x9B04    LDR	R3, [SP, #16]
0x0396	0xB29B    UXTH	R3, R3
0x0398	0x4023    ANDS	R3, R4
;__Lib_GPIO_32F051xx.c, 153 :: 		
0x039A	0x42A3    CMP	R3, R4
0x039C	0xD000    BEQ	#0
0x039E	0xE088    B	L_GPIO_Config41
;__Lib_GPIO_32F051xx.c, 155 :: 		
0x03A0	0x9B02    LDR	R3, [SP, #8]
0x03A2	0x005D    LSLS	R5, R3, #1
0x03A4	0x2403    MOVS	R4, #3
0x03A6	0x4623    MOV	R3, R4
0x03A8	0x40AB    LSLS	R3, R5
0x03AA	0x43DC    MVN	R4, R3
0x03AC	0x9B03    LDR	R3, [SP, #12]
0x03AE	0x681B    LDR	R3, [R3, #0]
0x03B0	0x401C    ANDS	R4, R3
0x03B2	0x9B03    LDR	R3, [SP, #12]
0x03B4	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 156 :: 		
0x03B6	0x9B02    LDR	R3, [SP, #8]
0x03B8	0x005B    LSLS	R3, R3, #1
0x03BA	0x463C    MOV	R4, R7
0x03BC	0x409C    LSLS	R4, R3
0x03BE	0x9B03    LDR	R3, [SP, #12]
0x03C0	0x681B    LDR	R3, [R3, #0]
0x03C2	0x431C    ORRS	R4, R3
0x03C4	0x9B03    LDR	R3, [SP, #12]
0x03C6	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 158 :: 		
0x03C8	0x9C05    LDR	R4, [SP, #20]
0x03CA	0x230C    MOVS	R3, #12
0x03CC	0x4023    ANDS	R3, R4
0x03CE	0x2B00    CMP	R3, #0
0x03D0	0xD02B    BEQ	L_GPIO_Config42
;__Lib_GPIO_32F051xx.c, 161 :: 		
0x03D2	0x9B03    LDR	R3, [SP, #12]
0x03D4	0x461E    MOV	R6, R3
0x03D6	0x3608    ADDS	R6, #8
0x03D8	0x9B02    LDR	R3, [SP, #8]
0x03DA	0x005D    LSLS	R5, R3, #1
0x03DC	0x2403    MOVS	R4, #3
0x03DE	0x4623    MOV	R3, R4
0x03E0	0x40AB    LSLS	R3, R5
0x03E2	0x43DC    MVN	R4, R3
0x03E4	0x6833    LDR	R3, [R6, #0]
0x03E6	0x4023    ANDS	R3, R4
0x03E8	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F051xx.c, 162 :: 		
0x03EA	0x9B03    LDR	R3, [SP, #12]
0x03EC	0x461D    MOV	R5, R3
0x03EE	0x3508    ADDS	R5, #8
0x03F0	0x9B02    LDR	R3, [SP, #8]
0x03F2	0x005B    LSLS	R3, R3, #1
0x03F4	0x4614    MOV	R4, R2
0x03F6	0x409C    LSLS	R4, R3
0x03F8	0x682B    LDR	R3, [R5, #0]
0x03FA	0x4323    ORRS	R3, R4
0x03FC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F051xx.c, 165 :: 		
0x03FE	0x9B03    LDR	R3, [SP, #12]
0x0400	0x1D1E    ADDS	R6, R3, #4
0x0402	0x9D02    LDR	R5, [SP, #8]
0x0404	0xB2AD    UXTH	R5, R5
0x0406	0x2401    MOVS	R4, #1
0x0408	0x4623    MOV	R3, R4
0x040A	0x40AB    LSLS	R3, R5
0x040C	0x43DC    MVN	R4, R3
0x040E	0x6833    LDR	R3, [R6, #0]
0x0410	0x4023    ANDS	R3, R4
0x0412	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F051xx.c, 166 :: 		
0x0414	0x9B03    LDR	R3, [SP, #12]
0x0416	0x1D1E    ADDS	R6, R3, #4
0x0418	0x9D02    LDR	R5, [SP, #8]
0x041A	0xB2AD    UXTH	R5, R5
0x041C	0xB28B    UXTH	R3, R1
0x041E	0x461C    MOV	R4, R3
0x0420	0x40AC    LSLS	R4, R5
0x0422	0xB2A4    UXTH	R4, R4
0x0424	0x6833    LDR	R3, [R6, #0]
0x0426	0x4323    ORRS	R3, R4
0x0428	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F051xx.c, 167 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F051xx.c, 170 :: 		
0x042A	0x9B03    LDR	R3, [SP, #12]
0x042C	0x461E    MOV	R6, R3
0x042E	0x360C    ADDS	R6, #12
0x0430	0x9B02    LDR	R3, [SP, #8]
0x0432	0xB29B    UXTH	R3, R3
0x0434	0x005D    LSLS	R5, R3, #1
0x0436	0xB2AD    UXTH	R5, R5
0x0438	0x2403    MOVS	R4, #3
0x043A	0x4623    MOV	R3, R4
0x043C	0x40AB    LSLS	R3, R5
0x043E	0x43DC    MVN	R4, R3
0x0440	0x6833    LDR	R3, [R6, #0]
0x0442	0x4023    ANDS	R3, R4
0x0444	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F051xx.c, 171 :: 		
0x0446	0x9B03    LDR	R3, [SP, #12]
0x0448	0x461D    MOV	R5, R3
0x044A	0x350C    ADDS	R5, #12
0x044C	0x9B02    LDR	R3, [SP, #8]
0x044E	0x005B    LSLS	R3, R3, #1
0x0450	0x4604    MOV	R4, R0
0x0452	0x409C    LSLS	R4, R3
0x0454	0x682B    LDR	R3, [R5, #0]
0x0456	0x4323    ORRS	R3, R4
0x0458	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F051xx.c, 173 :: 		
0x045A	0x9C05    LDR	R4, [SP, #20]
0x045C	0x2308    MOVS	R3, #8
0x045E	0x4023    ANDS	R3, R4
0x0460	0x2B00    CMP	R3, #0
0x0462	0xD026    BEQ	L_GPIO_Config43
;__Lib_GPIO_32F051xx.c, 174 :: 		
0x0464	0x9C05    LDR	R4, [SP, #20]
0x0466	0x4B23    LDR	R3, [PC, #140]
0x0468	0x4023    ANDS	R3, R4
0x046A	0x0D1B    LSRS	R3, R3, #20
0x046C	0x9301    STR	R3, [SP, #4]
;__Lib_GPIO_32F051xx.c, 175 :: 		
0x046E	0x9B02    LDR	R3, [SP, #8]
0x0470	0x2B07    CMP	R3, #7
0x0472	0xD906    BLS	L_GPIO_Config44
;__Lib_GPIO_32F051xx.c, 176 :: 		
0x0474	0x9B03    LDR	R3, [SP, #12]
0x0476	0x3324    ADDS	R3, #36
0x0478	0x9300    STR	R3, [SP, #0]
;__Lib_GPIO_32F051xx.c, 177 :: 		
0x047A	0x9B02    LDR	R3, [SP, #8]
0x047C	0x461E    MOV	R6, R3
0x047E	0x3E08    SUBS	R6, #8
; pos start address is: 24 (R6)
;__Lib_GPIO_32F051xx.c, 178 :: 		
; pos end address is: 24 (R6)
0x0480	0xE003    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F051xx.c, 179 :: 		
0x0482	0x9B03    LDR	R3, [SP, #12]
0x0484	0x3320    ADDS	R3, #32
0x0486	0x9300    STR	R3, [SP, #0]
;__Lib_GPIO_32F051xx.c, 180 :: 		
; pos start address is: 24 (R6)
0x0488	0x9E02    LDR	R6, [SP, #8]
; pos end address is: 24 (R6)
;__Lib_GPIO_32F051xx.c, 181 :: 		
L_GPIO_Config45:
;__Lib_GPIO_32F051xx.c, 182 :: 		
; pos start address is: 24 (R6)
0x048A	0x00B5    LSLS	R5, R6, #2
0x048C	0x240F    MOVS	R4, #15
0x048E	0x4623    MOV	R3, R4
0x0490	0x40AB    LSLS	R3, R5
0x0492	0x43DC    MVN	R4, R3
0x0494	0x9B00    LDR	R3, [SP, #0]
0x0496	0x681B    LDR	R3, [R3, #0]
0x0498	0x401C    ANDS	R4, R3
0x049A	0x9B00    LDR	R3, [SP, #0]
0x049C	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 183 :: 		
0x049E	0x9D01    LDR	R5, [SP, #4]
0x04A0	0xB2ED    UXTB	R5, R5
0x04A2	0x00B3    LSLS	R3, R6, #2
; pos end address is: 24 (R6)
0x04A4	0x462C    MOV	R4, R5
0x04A6	0x409C    LSLS	R4, R3
0x04A8	0x9B00    LDR	R3, [SP, #0]
0x04AA	0x681B    LDR	R3, [R3, #0]
0x04AC	0x431C    ORRS	R4, R3
0x04AE	0x9B00    LDR	R3, [SP, #0]
0x04B0	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F051xx.c, 184 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F051xx.c, 186 :: 		
L_GPIO_Config41:
;__Lib_GPIO_32F051xx.c, 147 :: 		
0x04B2	0x9B02    LDR	R3, [SP, #8]
0x04B4	0x3301    ADDS	R3, #1
0x04B6	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F051xx.c, 187 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
0x04B8	0xE764    B	L_GPIO_Config38
L_GPIO_Config39:
;__Lib_GPIO_32F051xx.c, 188 :: 		
L_end_GPIO_Config:
0x04BA	0xB006    ADD	SP, SP, #24
0x04BC	0xBD00    POP	(R15)
0x04BE	0xBF00    NOP
0x04C0	0xFC00FFFF  	#-1024
0x04C4	0x00FF0000  	__GPIO_PINMASK_LOW
0x04C8	0x0000FFFF  	#-65536
0x04CC	0x00140008  	#524308
0x04D0	0x55550000  	#21845
0x04D4	0xFF00FFFF  	#-256
0x04D8	0xFFFF0000  	#65535
0x04DC	0xFFFF0000  	__GPIO_PINMASK_ALL
0x04E0	0x55555555  	#1431655765
0x04E4	0xFFFFFFFF  	#-1
0x04E8	0x08000008  	#526336
0x04EC	0x08000000  	#2048
0x04F0	0x04000000  	#1024
0x04F4	0x000000F0  	#15728640
; end of _GPIO_Config
_OLED_reset_sequence:
;ssd1306.c, 67 :: 		void OLED_reset_sequence()
;ssd1306.c, 69 :: 		delay_ms(40);
0x0748	0x4F02    LDR	R7, [PC, #8]
0x074A	0xBF00    NOP
L_OLED_reset_sequence2:
0x074C	0x1E7F    SUBS	R7, R7, #1
0x074E	0xD1FD    BNE	L_OLED_reset_sequence2
0x0750	0xE002    B	#4
0x0752	0xBF00    NOP
0x0754	0xE1FF0004  	#319999
;ssd1306.c, 70 :: 		SCL = 1;
0x0758	0x4A0E    LDR	R2, [PC, #56]
0x075A	0x6810    LDR	R0, [R2, #0]
0x075C	0x2180    MOVS	R1, #128
0x075E	0x4308    ORRS	R0, R1
0x0760	0x6010    STR	R0, [R2, #0]
;ssd1306.c, 71 :: 		RST = 0;
0x0762	0x4A0C    LDR	R2, [PC, #48]
0x0764	0x6810    LDR	R0, [R2, #0]
0x0766	0x2120    MOVS	R1, #32
0x0768	0x4388    BICS	R0, R1
0x076A	0x6010    STR	R0, [R2, #0]
;ssd1306.c, 72 :: 		delay_ms(40);
0x076C	0x4F02    LDR	R7, [PC, #8]
0x076E	0xBF00    NOP
L_OLED_reset_sequence4:
0x0770	0x1E7F    SUBS	R7, R7, #1
0x0772	0xD1FD    BNE	L_OLED_reset_sequence4
0x0774	0xE002    B	#4
0x0776	0xBF00    NOP
0x0778	0xE1FF0004  	#319999
;ssd1306.c, 73 :: 		RST = 1;
0x077C	0x4A05    LDR	R2, [PC, #20]
0x077E	0x6810    LDR	R0, [R2, #0]
0x0780	0x2120    MOVS	R1, #32
0x0782	0x4308    ORRS	R0, R1
0x0784	0x6010    STR	R0, [R2, #0]
;ssd1306.c, 74 :: 		SCL = 0;
0x0786	0x4A03    LDR	R2, [PC, #12]
0x0788	0x6810    LDR	R0, [R2, #0]
0x078A	0x2180    MOVS	R1, #128
0x078C	0x4388    BICS	R0, R1
0x078E	0x6010    STR	R0, [R2, #0]
;ssd1306.c, 75 :: 		}
L_end_OLED_reset_sequence:
0x0790	0x4770    BX	LR
0x0792	0xBF00    NOP
0x0794	0x04144800  	GPIOB_ODRbits+0
; end of _OLED_reset_sequence
_OLED_write:
;ssd1306.c, 78 :: 		void OLED_write(unsigned char value, unsigned char type)
; type start address is: 4 (R1)
; value start address is: 0 (R0)
0x0798	0xB500    PUSH	(R14)
; type end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
; type start address is: 4 (R1)
;ssd1306.c, 80 :: 		unsigned char s = 0x08;
; s start address is: 20 (R5)
0x079A	0x2508    MOVS	R5, #8
;ssd1306.c, 82 :: 		DC = type;
0x079C	0x4C17    LDR	R4, [PC, #92]
0x079E	0x6822    LDR	R2, [R4, #0]
0x07A0	0x2301    MOVS	R3, #1
0x07A2	0x400B    ANDS	R3, R1
0x07A4	0xD002    BEQ	L__OLED_write249
0x07A6	0x2310    MOVS	R3, #16
0x07A8	0x431A    ORRS	R2, R3
0x07AA	0xE001    B	L__OLED_write248
L__OLED_write249:
0x07AC	0x2310    MOVS	R3, #16
0x07AE	0x439A    BICS	R2, R3
L__OLED_write248:
; type end address is: 4 (R1)
0x07B0	0x6022    STR	R2, [R4, #0]
; value end address is: 0 (R0)
; s end address is: 20 (R5)
0x07B2	0xB2C1    UXTB	R1, R0
0x07B4	0xB2E8    UXTB	R0, R5
;ssd1306.c, 84 :: 		while(s > 0)
L_OLED_write6:
; s start address is: 0 (R0)
; value start address is: 4 (R1)
0x07B6	0x2800    CMP	R0, #0
0x07B8	0xD91E    BLS	L_OLED_write7
;ssd1306.c, 86 :: 		if((value & 0x80) != 0)
0x07BA	0x2280    MOVS	R2, #128
0x07BC	0x400A    ANDS	R2, R1
0x07BE	0xB2D2    UXTB	R2, R2
0x07C0	0x2A00    CMP	R2, #0
0x07C2	0xD005    BEQ	L_OLED_write8
;ssd1306.c, 88 :: 		SDA = 1;
0x07C4	0x4C0D    LDR	R4, [PC, #52]
0x07C6	0x6822    LDR	R2, [R4, #0]
0x07C8	0x2340    MOVS	R3, #64
0x07CA	0x431A    ORRS	R2, R3
0x07CC	0x6022    STR	R2, [R4, #0]
;ssd1306.c, 89 :: 		}
0x07CE	0xE004    B	L_OLED_write9
L_OLED_write8:
;ssd1306.c, 92 :: 		SDA = 0;
0x07D0	0x4C0A    LDR	R4, [PC, #40]
0x07D2	0x6822    LDR	R2, [R4, #0]
0x07D4	0x2340    MOVS	R3, #64
0x07D6	0x439A    BICS	R2, R3
0x07D8	0x6022    STR	R2, [R4, #0]
;ssd1306.c, 93 :: 		}
L_OLED_write9:
;ssd1306.c, 95 :: 		SCL = 1;
0x07DA	0x4C08    LDR	R4, [PC, #32]
0x07DC	0x6822    LDR	R2, [R4, #0]
0x07DE	0x2380    MOVS	R3, #128
0x07E0	0x431A    ORRS	R2, R3
0x07E2	0x6022    STR	R2, [R4, #0]
;ssd1306.c, 96 :: 		SCL = 0;
0x07E4	0x4C05    LDR	R4, [PC, #20]
0x07E6	0x6822    LDR	R2, [R4, #0]
0x07E8	0x2380    MOVS	R3, #128
0x07EA	0x439A    BICS	R2, R3
0x07EC	0x6022    STR	R2, [R4, #0]
;ssd1306.c, 98 :: 		value <<= 1;
0x07EE	0x004A    LSLS	R2, R1, #1
0x07F0	0xB2D1    UXTB	R1, R2
;ssd1306.c, 99 :: 		s--;
0x07F2	0x1E40    SUBS	R0, R0, #1
0x07F4	0xB2C0    UXTB	R0, R0
;ssd1306.c, 100 :: 		}
; value end address is: 4 (R1)
; s end address is: 0 (R0)
0x07F6	0xE7DE    B	L_OLED_write6
L_OLED_write7:
;ssd1306.c, 101 :: 		}
L_end_OLED_write:
0x07F8	0xBD00    POP	(R15)
0x07FA	0xBF00    NOP
0x07FC	0x04144800  	GPIOB_ODRbits+0
; end of _OLED_write
_OLED_gotoxy:
;ssd1306.c, 104 :: 		void OLED_gotoxy(unsigned char x_pos, unsigned char y_pos)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0800	0xB500    PUSH	(R14)
0x0802	0xB2C6    UXTB	R6, R0
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 24 (R6)
; y_pos start address is: 4 (R1)
;ssd1306.c, 106 :: 		OLED_write((Set_Page_Start_Address_CMD + y_pos), CMD);
0x0804	0x460A    MOV	R2, R1
0x0806	0x32B0    ADDS	R2, #176
; y_pos end address is: 4 (R1)
0x0808	0x2100    MOVS	R1, #0
0x080A	0xB2D0    UXTB	R0, R2
0x080C	0xF7FFFFC4  BL	_OLED_write+0
;ssd1306.c, 107 :: 		OLED_write(((x_pos & 0x0F) | Set_Lower_Column_Start_Address_CMD), CMD);
0x0810	0x220F    MOVS	R2, #15
0x0812	0x4032    ANDS	R2, R6
0x0814	0x2100    MOVS	R1, #0
0x0816	0xB2D0    UXTB	R0, R2
0x0818	0xF7FFFFBE  BL	_OLED_write+0
;ssd1306.c, 108 :: 		OLED_write((((x_pos & 0xF0) >> 0x04) | Set_Higher_Column_Start_Address_CMD), CMD);
0x081C	0x22F0    MOVS	R2, #240
0x081E	0x4032    ANDS	R2, R6
0x0820	0xB2D2    UXTB	R2, R2
; x_pos end address is: 24 (R6)
0x0822	0x0913    LSRS	R3, R2, #4
0x0824	0xB2DB    UXTB	R3, R3
0x0826	0x2210    MOVS	R2, #16
0x0828	0x431A    ORRS	R2, R3
0x082A	0x2100    MOVS	R1, #0
0x082C	0xB2D0    UXTB	R0, R2
0x082E	0xF7FFFFB3  BL	_OLED_write+0
;ssd1306.c, 109 :: 		}
L_end_OLED_gotoxy:
0x0832	0xBD00    POP	(R15)
; end of _OLED_gotoxy
_OLED_clear_screen:
;ssd1306.c, 131 :: 		void OLED_clear_screen()
0x05FC	0xB500    PUSH	(R14)
;ssd1306.c, 133 :: 		OLED_fill(0x00);
0x05FE	0x2000    MOVS	R0, #0
0x0600	0xF7FFFDFE  BL	_OLED_fill+0
;ssd1306.c, 134 :: 		}
L_end_OLED_clear_screen:
0x0604	0xBD00    POP	(R15)
; end of _OLED_clear_screen
_OLED_fill:
;ssd1306.c, 112 :: 		void OLED_fill(unsigned char bmp_data)
; bmp_data start address is: 0 (R0)
0x0200	0xB500    PUSH	(R14)
0x0202	0xB081    SUB	SP, SP, #4
; bmp_data end address is: 0 (R0)
; bmp_data start address is: 0 (R0)
;ssd1306.c, 114 :: 		unsigned char x_pos = 0x00;
;ssd1306.c, 115 :: 		unsigned char page = 0x00;
;ssd1306.c, 117 :: 		for(page = y_min; page < y_max; page++)
; page start address is: 28 (R7)
0x0204	0x2700    MOVS	R7, #0
; bmp_data end address is: 0 (R0)
; page end address is: 28 (R7)
0x0206	0xB2C6    UXTB	R6, R0
L_OLED_fill10:
; page start address is: 28 (R7)
; bmp_data start address is: 24 (R6)
0x0208	0x2F08    CMP	R7, #8
0x020A	0xD21D    BCS	L_OLED_fill11
;ssd1306.c, 119 :: 		OLED_write((Set_Page_Start_Address_CMD + page), CMD);
0x020C	0x4639    MOV	R1, R7
0x020E	0x31B0    ADDS	R1, #176
0x0210	0xB2C8    UXTB	R0, R1
0x0212	0x2100    MOVS	R1, #0
0x0214	0xF000FAC0  BL	_OLED_write+0
;ssd1306.c, 120 :: 		OLED_write(Set_Lower_Column_Start_Address_CMD, CMD);
0x0218	0x2100    MOVS	R1, #0
0x021A	0x2000    MOVS	R0, #0
0x021C	0xF000FABC  BL	_OLED_write+0
;ssd1306.c, 121 :: 		OLED_write(Set_Higher_Column_Start_Address_CMD, CMD);
0x0220	0x2100    MOVS	R1, #0
0x0222	0x2010    MOVS	R0, #16
0x0224	0xF000FAB8  BL	_OLED_write+0
;ssd1306.c, 123 :: 		for(x_pos = x_min; x_pos < x_max; x_pos++)
; x_pos start address is: 0 (R0)
0x0228	0x2000    MOVS	R0, #0
; bmp_data end address is: 24 (R6)
; x_pos end address is: 0 (R0)
; page end address is: 28 (R7)
L_OLED_fill13:
; x_pos start address is: 0 (R0)
; bmp_data start address is: 24 (R6)
; page start address is: 28 (R7)
0x022A	0x2880    CMP	R0, #128
0x022C	0xD209    BCS	L_OLED_fill14
;ssd1306.c, 125 :: 		OLED_write(bmp_data, DAT);
0x022E	0x9000    STR	R0, [SP, #0]
0x0230	0x2101    MOVS	R1, #1
0x0232	0xB2F0    UXTB	R0, R6
0x0234	0xF000FAB0  BL	_OLED_write+0
0x0238	0x9800    LDR	R0, [SP, #0]
0x023A	0xB2C0    UXTB	R0, R0
;ssd1306.c, 123 :: 		for(x_pos = x_min; x_pos < x_max; x_pos++)
0x023C	0x3001    ADDS	R0, #1
0x023E	0xB2C0    UXTB	R0, R0
;ssd1306.c, 126 :: 		}
; x_pos end address is: 0 (R0)
0x0240	0xE7F3    B	L_OLED_fill13
L_OLED_fill14:
;ssd1306.c, 117 :: 		for(page = y_min; page < y_max; page++)
0x0242	0x3701    ADDS	R7, #1
0x0244	0xB2FF    UXTB	R7, R7
;ssd1306.c, 127 :: 		}
; bmp_data end address is: 24 (R6)
; page end address is: 28 (R7)
0x0246	0xE7DF    B	L_OLED_fill10
L_OLED_fill11:
;ssd1306.c, 128 :: 		}
L_end_OLED_fill:
0x0248	0xB001    ADD	SP, SP, #4
0x024A	0xBD00    POP	(R15)
; end of _OLED_fill
_Draw_Circle:
;ssd1306.c, 594 :: 		void Draw_Circle(signed int xc, signed int yc, signed int radius, unsigned char fill, unsigned char colour)
; radius start address is: 8 (R2)
0x18E0	0xB500    PUSH	(R14)
0x18E2	0xB086    SUB	SP, SP, #24
0x18E4	0x9003    STR	R0, [SP, #12]
0x18E6	0xB210    SXTH	R0, R2
0x18E8	0x9104    STR	R1, [SP, #16]
0x18EA	0x9305    STR	R3, [SP, #20]
; radius end address is: 8 (R2)
; radius start address is: 0 (R0)
0x18EC	0x9C07    LDR	R4, [SP, #28]
0x18EE	0xB2E4    UXTB	R4, R4
0x18F0	0x9407    STR	R4, [SP, #28]
;ssd1306.c, 596 :: 		signed int a = 0x0000;
0x18F2	0x466E    MOV	R6, SP
0x18F4	0x2502    MOVS	R5, #2
0x18F6	0x19AD    ADDS	R5, R5, R6
0x18F8	0x4F90    LDR	R7, [PC, #576]
0x18FA	0xF7FFFDDF  BL	___CC2DW+0
;ssd1306.c, 597 :: 		signed int b = 0x0000;
;ssd1306.c, 598 :: 		signed int P = 0x0000;
;ssd1306.c, 600 :: 		b = radius;
0x18FE	0x9001    STR	R0, [SP, #4]
;ssd1306.c, 601 :: 		P = (1 - b);
0x1900	0x2401    MOVS	R4, #1
0x1902	0x1A24    SUBS	R4, R4, R0
; radius end address is: 0 (R0)
0x1904	0x9402    STR	R4, [SP, #8]
;ssd1306.c, 603 :: 		do
L_Draw_Circle120:
;ssd1306.c, 605 :: 		if(fill != 0)
0x1906	0x9C05    LDR	R4, [SP, #20]
0x1908	0xB2E4    UXTB	R4, R4
0x190A	0x2C00    CMP	R4, #0
0x190C	0xD064    BEQ	L_Draw_Circle123
;ssd1306.c, 607 :: 		Draw_Line((xc - a), (yc + b), (xc + a), (yc + b), colour);
0x190E	0x9807    LDR	R0, [SP, #28]
0x1910	0xB2C0    UXTB	R0, R0
0x1912	0x9D01    LDR	R5, [SP, #4]
0x1914	0xB22D    SXTH	R5, R5
0x1916	0x9C04    LDR	R4, [SP, #16]
0x1918	0xB224    SXTH	R4, R4
0x191A	0x1967    ADDS	R7, R4, R5
0x191C	0x9D00    LDR	R5, [SP, #0]
0x191E	0xB22D    SXTH	R5, R5
0x1920	0x9C03    LDR	R4, [SP, #12]
0x1922	0xB224    SXTH	R4, R4
0x1924	0x1966    ADDS	R6, R4, R5
0x1926	0x9D00    LDR	R5, [SP, #0]
0x1928	0xB22D    SXTH	R5, R5
0x192A	0x9C03    LDR	R4, [SP, #12]
0x192C	0xB224    SXTH	R4, R4
0x192E	0x1B64    SUBS	R4, R4, R5
0x1930	0xB401    PUSH	(R0)
0x1932	0xB23B    SXTH	R3, R7
0x1934	0xB232    SXTH	R2, R6
0x1936	0xB239    SXTH	R1, R7
0x1938	0xB220    SXTH	R0, R4
0x193A	0xF7FFFA4F  BL	_Draw_Line+0
0x193E	0xB001    ADD	SP, SP, #4
;ssd1306.c, 608 :: 		Draw_Line((xc - a), (yc - b), (xc + a), (yc - b), colour);
0x1940	0x9807    LDR	R0, [SP, #28]
0x1942	0xB2C0    UXTB	R0, R0
0x1944	0x9D01    LDR	R5, [SP, #4]
0x1946	0xB22D    SXTH	R5, R5
0x1948	0x9C04    LDR	R4, [SP, #16]
0x194A	0xB224    SXTH	R4, R4
0x194C	0x1B67    SUBS	R7, R4, R5
0x194E	0x9D00    LDR	R5, [SP, #0]
0x1950	0xB22D    SXTH	R5, R5
0x1952	0x9C03    LDR	R4, [SP, #12]
0x1954	0xB224    SXTH	R4, R4
0x1956	0x1966    ADDS	R6, R4, R5
0x1958	0x9D00    LDR	R5, [SP, #0]
0x195A	0xB22D    SXTH	R5, R5
0x195C	0x9C03    LDR	R4, [SP, #12]
0x195E	0xB224    SXTH	R4, R4
0x1960	0x1B64    SUBS	R4, R4, R5
0x1962	0xB401    PUSH	(R0)
0x1964	0xB23B    SXTH	R3, R7
0x1966	0xB232    SXTH	R2, R6
0x1968	0xB239    SXTH	R1, R7
0x196A	0xB220    SXTH	R0, R4
0x196C	0xF7FFFA36  BL	_Draw_Line+0
0x1970	0xB001    ADD	SP, SP, #4
;ssd1306.c, 609 :: 		Draw_Line((xc - b), (yc + a), (xc + b), (yc + a), colour);
0x1972	0x9807    LDR	R0, [SP, #28]
0x1974	0xB2C0    UXTB	R0, R0
0x1976	0x9D00    LDR	R5, [SP, #0]
0x1978	0xB22D    SXTH	R5, R5
0x197A	0x9C04    LDR	R4, [SP, #16]
0x197C	0xB224    SXTH	R4, R4
0x197E	0x1967    ADDS	R7, R4, R5
0x1980	0x9D01    LDR	R5, [SP, #4]
0x1982	0xB22D    SXTH	R5, R5
0x1984	0x9C03    LDR	R4, [SP, #12]
0x1986	0xB224    SXTH	R4, R4
0x1988	0x1966    ADDS	R6, R4, R5
0x198A	0x9D01    LDR	R5, [SP, #4]
0x198C	0xB22D    SXTH	R5, R5
0x198E	0x9C03    LDR	R4, [SP, #12]
0x1990	0xB224    SXTH	R4, R4
0x1992	0x1B64    SUBS	R4, R4, R5
0x1994	0xB401    PUSH	(R0)
0x1996	0xB23B    SXTH	R3, R7
0x1998	0xB232    SXTH	R2, R6
0x199A	0xB239    SXTH	R1, R7
0x199C	0xB220    SXTH	R0, R4
0x199E	0xF7FFFA1D  BL	_Draw_Line+0
0x19A2	0xB001    ADD	SP, SP, #4
;ssd1306.c, 610 :: 		Draw_Line((xc - b), (yc - a), (xc + b), (yc - a), colour);
0x19A4	0x9807    LDR	R0, [SP, #28]
0x19A6	0xB2C0    UXTB	R0, R0
0x19A8	0x9D00    LDR	R5, [SP, #0]
0x19AA	0xB22D    SXTH	R5, R5
0x19AC	0x9C04    LDR	R4, [SP, #16]
0x19AE	0xB224    SXTH	R4, R4
0x19B0	0x1B67    SUBS	R7, R4, R5
0x19B2	0x9D01    LDR	R5, [SP, #4]
0x19B4	0xB22D    SXTH	R5, R5
0x19B6	0x9C03    LDR	R4, [SP, #12]
0x19B8	0xB224    SXTH	R4, R4
0x19BA	0x1966    ADDS	R6, R4, R5
0x19BC	0x9D01    LDR	R5, [SP, #4]
0x19BE	0xB22D    SXTH	R5, R5
0x19C0	0x9C03    LDR	R4, [SP, #12]
0x19C2	0xB224    SXTH	R4, R4
0x19C4	0x1B64    SUBS	R4, R4, R5
0x19C6	0xB401    PUSH	(R0)
0x19C8	0xB23B    SXTH	R3, R7
0x19CA	0xB232    SXTH	R2, R6
0x19CC	0xB239    SXTH	R1, R7
0x19CE	0xB220    SXTH	R0, R4
0x19D0	0xF7FFFA04  BL	_Draw_Line+0
0x19D4	0xB001    ADD	SP, SP, #4
;ssd1306.c, 611 :: 		}
0x19D6	0xE07F    B	L_Draw_Circle124
L_Draw_Circle123:
;ssd1306.c, 614 :: 		Draw_Pixel((xc + a), (yc + b), colour);
0x19D8	0x9D01    LDR	R5, [SP, #4]
0x19DA	0xB22D    SXTH	R5, R5
0x19DC	0x9C04    LDR	R4, [SP, #16]
0x19DE	0xB224    SXTH	R4, R4
0x19E0	0x1966    ADDS	R6, R4, R5
0x19E2	0x9D00    LDR	R5, [SP, #0]
0x19E4	0xB22D    SXTH	R5, R5
0x19E6	0x9C03    LDR	R4, [SP, #12]
0x19E8	0xB224    SXTH	R4, R4
0x19EA	0x1964    ADDS	R4, R4, R5
0x19EC	0x9A07    LDR	R2, [SP, #28]
0x19EE	0xB2D2    UXTB	R2, R2
0x19F0	0xB2F1    UXTB	R1, R6
0x19F2	0xB2E0    UXTB	R0, R4
0x19F4	0xF7FEFDA2  BL	_Draw_Pixel+0
;ssd1306.c, 615 :: 		Draw_Pixel((xc + b), (yc + a), colour);
0x19F8	0x9D00    LDR	R5, [SP, #0]
0x19FA	0xB22D    SXTH	R5, R5
0x19FC	0x9C04    LDR	R4, [SP, #16]
0x19FE	0xB224    SXTH	R4, R4
0x1A00	0x1966    ADDS	R6, R4, R5
0x1A02	0x9D01    LDR	R5, [SP, #4]
0x1A04	0xB22D    SXTH	R5, R5
0x1A06	0x9C03    LDR	R4, [SP, #12]
0x1A08	0xB224    SXTH	R4, R4
0x1A0A	0x1964    ADDS	R4, R4, R5
0x1A0C	0x9A07    LDR	R2, [SP, #28]
0x1A0E	0xB2D2    UXTB	R2, R2
0x1A10	0xB2F1    UXTB	R1, R6
0x1A12	0xB2E0    UXTB	R0, R4
0x1A14	0xF7FEFD92  BL	_Draw_Pixel+0
;ssd1306.c, 616 :: 		Draw_Pixel((xc - a), (yc + b), colour);
0x1A18	0x9D01    LDR	R5, [SP, #4]
0x1A1A	0xB22D    SXTH	R5, R5
0x1A1C	0x9C04    LDR	R4, [SP, #16]
0x1A1E	0xB224    SXTH	R4, R4
0x1A20	0x1966    ADDS	R6, R4, R5
0x1A22	0x9D00    LDR	R5, [SP, #0]
0x1A24	0xB22D    SXTH	R5, R5
0x1A26	0x9C03    LDR	R4, [SP, #12]
0x1A28	0xB224    SXTH	R4, R4
0x1A2A	0x1B64    SUBS	R4, R4, R5
0x1A2C	0x9A07    LDR	R2, [SP, #28]
0x1A2E	0xB2D2    UXTB	R2, R2
0x1A30	0xB2F1    UXTB	R1, R6
0x1A32	0xB2E0    UXTB	R0, R4
0x1A34	0xF7FEFD82  BL	_Draw_Pixel+0
;ssd1306.c, 617 :: 		Draw_Pixel((xc - b), (yc + a), colour);
0x1A38	0x9D00    LDR	R5, [SP, #0]
0x1A3A	0xB22D    SXTH	R5, R5
0x1A3C	0x9C04    LDR	R4, [SP, #16]
0x1A3E	0xB224    SXTH	R4, R4
0x1A40	0x1966    ADDS	R6, R4, R5
0x1A42	0x9D01    LDR	R5, [SP, #4]
0x1A44	0xB22D    SXTH	R5, R5
0x1A46	0x9C03    LDR	R4, [SP, #12]
0x1A48	0xB224    SXTH	R4, R4
0x1A4A	0x1B64    SUBS	R4, R4, R5
0x1A4C	0x9A07    LDR	R2, [SP, #28]
0x1A4E	0xB2D2    UXTB	R2, R2
0x1A50	0xB2F1    UXTB	R1, R6
0x1A52	0xB2E0    UXTB	R0, R4
0x1A54	0xF7FEFD72  BL	_Draw_Pixel+0
;ssd1306.c, 618 :: 		Draw_Pixel((xc + b), (yc - a), colour);
0x1A58	0x9D00    LDR	R5, [SP, #0]
0x1A5A	0xB22D    SXTH	R5, R5
0x1A5C	0x9C04    LDR	R4, [SP, #16]
0x1A5E	0xB224    SXTH	R4, R4
0x1A60	0x1B66    SUBS	R6, R4, R5
0x1A62	0x9D01    LDR	R5, [SP, #4]
0x1A64	0xB22D    SXTH	R5, R5
0x1A66	0x9C03    LDR	R4, [SP, #12]
0x1A68	0xB224    SXTH	R4, R4
0x1A6A	0x1964    ADDS	R4, R4, R5
0x1A6C	0x9A07    LDR	R2, [SP, #28]
0x1A6E	0xB2D2    UXTB	R2, R2
0x1A70	0xB2F1    UXTB	R1, R6
0x1A72	0xB2E0    UXTB	R0, R4
0x1A74	0xF7FEFD62  BL	_Draw_Pixel+0
;ssd1306.c, 619 :: 		Draw_Pixel((xc + a), (yc - b), colour);
0x1A78	0x9D01    LDR	R5, [SP, #4]
0x1A7A	0xB22D    SXTH	R5, R5
0x1A7C	0x9C04    LDR	R4, [SP, #16]
0x1A7E	0xB224    SXTH	R4, R4
0x1A80	0x1B66    SUBS	R6, R4, R5
0x1A82	0x9D00    LDR	R5, [SP, #0]
0x1A84	0xB22D    SXTH	R5, R5
0x1A86	0x9C03    LDR	R4, [SP, #12]
0x1A88	0xB224    SXTH	R4, R4
0x1A8A	0x1964    ADDS	R4, R4, R5
0x1A8C	0x9A07    LDR	R2, [SP, #28]
0x1A8E	0xB2D2    UXTB	R2, R2
0x1A90	0xB2F1    UXTB	R1, R6
0x1A92	0xB2E0    UXTB	R0, R4
0x1A94	0xF7FEFD52  BL	_Draw_Pixel+0
;ssd1306.c, 620 :: 		Draw_Pixel((xc - a), (yc - b), colour);
0x1A98	0x9D01    LDR	R5, [SP, #4]
0x1A9A	0xB22D    SXTH	R5, R5
0x1A9C	0x9C04    LDR	R4, [SP, #16]
0x1A9E	0xB224    SXTH	R4, R4
0x1AA0	0x1B66    SUBS	R6, R4, R5
0x1AA2	0x9D00    LDR	R5, [SP, #0]
0x1AA4	0xB22D    SXTH	R5, R5
0x1AA6	0x9C03    LDR	R4, [SP, #12]
0x1AA8	0xB224    SXTH	R4, R4
0x1AAA	0x1B64    SUBS	R4, R4, R5
0x1AAC	0x9A07    LDR	R2, [SP, #28]
0x1AAE	0xB2D2    UXTB	R2, R2
0x1AB0	0xB2F1    UXTB	R1, R6
0x1AB2	0xB2E0    UXTB	R0, R4
0x1AB4	0xF7FEFD42  BL	_Draw_Pixel+0
;ssd1306.c, 621 :: 		Draw_Pixel((xc - b), (yc - a), colour);
0x1AB8	0x9D00    LDR	R5, [SP, #0]
0x1ABA	0xB22D    SXTH	R5, R5
0x1ABC	0x9C04    LDR	R4, [SP, #16]
0x1ABE	0xB224    SXTH	R4, R4
0x1AC0	0x1B66    SUBS	R6, R4, R5
0x1AC2	0x9D01    LDR	R5, [SP, #4]
0x1AC4	0xB22D    SXTH	R5, R5
0x1AC6	0x9C03    LDR	R4, [SP, #12]
0x1AC8	0xB224    SXTH	R4, R4
0x1ACA	0x1B64    SUBS	R4, R4, R5
0x1ACC	0x9A07    LDR	R2, [SP, #28]
0x1ACE	0xB2D2    UXTB	R2, R2
0x1AD0	0xB2F1    UXTB	R1, R6
0x1AD2	0xB2E0    UXTB	R0, R4
0x1AD4	0xF7FEFD32  BL	_Draw_Pixel+0
;ssd1306.c, 622 :: 		}
L_Draw_Circle124:
;ssd1306.c, 624 :: 		if(P < 0)
0x1AD8	0x9C02    LDR	R4, [SP, #8]
0x1ADA	0xB224    SXTH	R4, R4
0x1ADC	0x2C00    CMP	R4, #0
0x1ADE	0xDA0E    BGE	L_Draw_Circle125
;ssd1306.c, 626 :: 		P += (3 + (2 * a++));
0x1AE0	0x9C00    LDR	R4, [SP, #0]
0x1AE2	0xB224    SXTH	R4, R4
0x1AE4	0x0064    LSLS	R4, R4, #1
0x1AE6	0xB224    SXTH	R4, R4
0x1AE8	0x1CE5    ADDS	R5, R4, #3
0x1AEA	0xB22D    SXTH	R5, R5
0x1AEC	0x9C02    LDR	R4, [SP, #8]
0x1AEE	0xB224    SXTH	R4, R4
0x1AF0	0x1964    ADDS	R4, R4, R5
0x1AF2	0x9402    STR	R4, [SP, #8]
0x1AF4	0x9C00    LDR	R4, [SP, #0]
0x1AF6	0xB224    SXTH	R4, R4
0x1AF8	0x3401    ADDS	R4, #1
0x1AFA	0x9400    STR	R4, [SP, #0]
;ssd1306.c, 627 :: 		}
0x1AFC	0xE015    B	L_Draw_Circle126
L_Draw_Circle125:
;ssd1306.c, 630 :: 		P += (5 + (2 * ((a++) - (b--))));
0x1AFE	0x9D01    LDR	R5, [SP, #4]
0x1B00	0xB22D    SXTH	R5, R5
0x1B02	0x9C00    LDR	R4, [SP, #0]
0x1B04	0xB224    SXTH	R4, R4
0x1B06	0x1B64    SUBS	R4, R4, R5
0x1B08	0xB224    SXTH	R4, R4
0x1B0A	0x0064    LSLS	R4, R4, #1
0x1B0C	0xB224    SXTH	R4, R4
0x1B0E	0x1D65    ADDS	R5, R4, #5
0x1B10	0xB22D    SXTH	R5, R5
0x1B12	0x9C02    LDR	R4, [SP, #8]
0x1B14	0xB224    SXTH	R4, R4
0x1B16	0x1964    ADDS	R4, R4, R5
0x1B18	0x9402    STR	R4, [SP, #8]
0x1B1A	0x9C00    LDR	R4, [SP, #0]
0x1B1C	0xB224    SXTH	R4, R4
0x1B1E	0x3401    ADDS	R4, #1
0x1B20	0x9400    STR	R4, [SP, #0]
0x1B22	0x9C01    LDR	R4, [SP, #4]
0x1B24	0xB224    SXTH	R4, R4
0x1B26	0x1E64    SUBS	R4, R4, #1
0x1B28	0x9401    STR	R4, [SP, #4]
;ssd1306.c, 631 :: 		}
L_Draw_Circle126:
;ssd1306.c, 632 :: 		}while(a <= b);
0x1B2A	0x9D01    LDR	R5, [SP, #4]
0x1B2C	0xB22D    SXTH	R5, R5
0x1B2E	0x9C00    LDR	R4, [SP, #0]
0x1B30	0xB224    SXTH	R4, R4
0x1B32	0x42AC    CMP	R4, R5
0x1B34	0xDC00    BGT	#0
0x1B36	0xE6E6    B	L_Draw_Circle120
;ssd1306.c, 633 :: 		}
L_end_Draw_Circle:
0x1B38	0xB006    ADD	SP, SP, #24
0x1B3A	0xBD00    POP	(R15)
0x1B3C	0x24080000  	?ICSDraw_Circle_a_L0+0
; end of _Draw_Circle
_Draw_Line:
;ssd1306.c, 462 :: 		void Draw_Line(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char colour)
0x0DDC	0xB500    PUSH	(R14)
0x0DDE	0xB089    SUB	SP, SP, #36
0x0DE0	0x9005    STR	R0, [SP, #20]
0x0DE2	0x9106    STR	R1, [SP, #24]
0x0DE4	0x9207    STR	R2, [SP, #28]
0x0DE6	0x9308    STR	R3, [SP, #32]
0x0DE8	0x9C0A    LDR	R4, [SP, #40]
0x0DEA	0xB2E4    UXTB	R4, R4
0x0DEC	0x940A    STR	R4, [SP, #40]
;ssd1306.c, 464 :: 		signed int dx = 0x0000;
;ssd1306.c, 465 :: 		signed int dy = 0x0000;
;ssd1306.c, 466 :: 		signed int stepx = 0x0000;
;ssd1306.c, 467 :: 		signed int stepy = 0x0000;
;ssd1306.c, 468 :: 		signed int fraction = 0x0000;
;ssd1306.c, 470 :: 		dy = (y2 - y1);
0x0DEE	0x9D06    LDR	R5, [SP, #24]
0x0DF0	0xB22D    SXTH	R5, R5
0x0DF2	0x9C08    LDR	R4, [SP, #32]
0x0DF4	0xB224    SXTH	R4, R4
0x0DF6	0x1B66    SUBS	R6, R4, R5
0x0DF8	0xB236    SXTH	R6, R6
0x0DFA	0x9601    STR	R6, [SP, #4]
;ssd1306.c, 471 :: 		dx = (x2 - x1);
0x0DFC	0x9D05    LDR	R5, [SP, #20]
0x0DFE	0xB22D    SXTH	R5, R5
0x0E00	0x9C07    LDR	R4, [SP, #28]
0x0E02	0xB224    SXTH	R4, R4
0x0E04	0x1B64    SUBS	R4, R4, R5
0x0E06	0x9400    STR	R4, [SP, #0]
;ssd1306.c, 473 :: 		if (dy < 0)
0x0E08	0x2E00    CMP	R6, #0
0x0E0A	0xDA08    BGE	L_Draw_Line95
;ssd1306.c, 475 :: 		dy = -dy;
0x0E0C	0x9C01    LDR	R4, [SP, #4]
0x0E0E	0xB224    SXTH	R4, R4
0x0E10	0x4264    RSBS	R4, R4, #0
0x0E12	0x9401    STR	R4, [SP, #4]
;ssd1306.c, 476 :: 		stepy = -1;
0x0E14	0x2400    MOVS	R4, #0
0x0E16	0x43E4    MVN	R4, R4
0x0E18	0xB224    SXTH	R4, R4
0x0E1A	0x9403    STR	R4, [SP, #12]
;ssd1306.c, 477 :: 		}
0x0E1C	0xE001    B	L_Draw_Line96
L_Draw_Line95:
;ssd1306.c, 480 :: 		stepy = 1;
0x0E1E	0x2401    MOVS	R4, #1
0x0E20	0x9403    STR	R4, [SP, #12]
;ssd1306.c, 481 :: 		}
L_Draw_Line96:
;ssd1306.c, 483 :: 		if (dx < 0)
0x0E22	0x9C00    LDR	R4, [SP, #0]
0x0E24	0xB224    SXTH	R4, R4
0x0E26	0x2C00    CMP	R4, #0
0x0E28	0xDA08    BGE	L_Draw_Line97
;ssd1306.c, 485 :: 		dx = -dx;
0x0E2A	0x9C00    LDR	R4, [SP, #0]
0x0E2C	0xB224    SXTH	R4, R4
0x0E2E	0x4264    RSBS	R4, R4, #0
0x0E30	0x9400    STR	R4, [SP, #0]
;ssd1306.c, 486 :: 		stepx = -1;
0x0E32	0x2400    MOVS	R4, #0
0x0E34	0x43E4    MVN	R4, R4
0x0E36	0xB224    SXTH	R4, R4
0x0E38	0x9402    STR	R4, [SP, #8]
;ssd1306.c, 487 :: 		}
0x0E3A	0xE001    B	L_Draw_Line98
L_Draw_Line97:
;ssd1306.c, 490 :: 		stepx = 1;
0x0E3C	0x2401    MOVS	R4, #1
0x0E3E	0x9402    STR	R4, [SP, #8]
;ssd1306.c, 491 :: 		}
L_Draw_Line98:
;ssd1306.c, 493 :: 		dx <<= 1;
0x0E40	0x9C00    LDR	R4, [SP, #0]
0x0E42	0xB224    SXTH	R4, R4
0x0E44	0x0064    LSLS	R4, R4, #1
0x0E46	0x9400    STR	R4, [SP, #0]
;ssd1306.c, 494 :: 		dy <<= 1;
0x0E48	0x9C01    LDR	R4, [SP, #4]
0x0E4A	0xB224    SXTH	R4, R4
0x0E4C	0x0064    LSLS	R4, R4, #1
0x0E4E	0x9401    STR	R4, [SP, #4]
;ssd1306.c, 496 :: 		Draw_Pixel(x1, y1, colour);
0x0E50	0x9A0A    LDR	R2, [SP, #40]
0x0E52	0xB2D2    UXTB	R2, R2
0x0E54	0x9906    LDR	R1, [SP, #24]
0x0E56	0xB209    SXTH	R1, R1
0x0E58	0x9805    LDR	R0, [SP, #20]
0x0E5A	0xB200    SXTH	R0, R0
0x0E5C	0xF7FFFB6E  BL	_Draw_Pixel+0
;ssd1306.c, 498 :: 		if(dx > dy)
0x0E60	0x9D01    LDR	R5, [SP, #4]
0x0E62	0xB22D    SXTH	R5, R5
0x0E64	0x9C00    LDR	R4, [SP, #0]
0x0E66	0xB224    SXTH	R4, R4
0x0E68	0x42AC    CMP	R4, R5
0x0E6A	0xDD32    BLE	L_Draw_Line99
;ssd1306.c, 500 :: 		fraction = (dy - (dx >> 1));
0x0E6C	0x9C00    LDR	R4, [SP, #0]
0x0E6E	0xB224    SXTH	R4, R4
0x0E70	0x1065    ASRS	R5, R4, #1
0x0E72	0xB22D    SXTH	R5, R5
0x0E74	0x9C01    LDR	R4, [SP, #4]
0x0E76	0xB224    SXTH	R4, R4
0x0E78	0x1B64    SUBS	R4, R4, R5
0x0E7A	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 501 :: 		while (x1 != x2)
L_Draw_Line100:
0x0E7C	0x9D07    LDR	R5, [SP, #28]
0x0E7E	0xB22D    SXTH	R5, R5
0x0E80	0x9C05    LDR	R4, [SP, #20]
0x0E82	0xB224    SXTH	R4, R4
0x0E84	0x42AC    CMP	R4, R5
0x0E86	0xD023    BEQ	L_Draw_Line101
;ssd1306.c, 503 :: 		if(fraction >= 0)
0x0E88	0x9C04    LDR	R4, [SP, #16]
0x0E8A	0xB224    SXTH	R4, R4
0x0E8C	0x2C00    CMP	R4, #0
0x0E8E	0xDB0B    BLT	L_Draw_Line102
;ssd1306.c, 505 :: 		y1 += stepy;
0x0E90	0x9D03    LDR	R5, [SP, #12]
0x0E92	0xB22D    SXTH	R5, R5
0x0E94	0x9C06    LDR	R4, [SP, #24]
0x0E96	0xB224    SXTH	R4, R4
0x0E98	0x1964    ADDS	R4, R4, R5
0x0E9A	0x9406    STR	R4, [SP, #24]
;ssd1306.c, 506 :: 		fraction -= dx;
0x0E9C	0x9D00    LDR	R5, [SP, #0]
0x0E9E	0xB22D    SXTH	R5, R5
0x0EA0	0x9C04    LDR	R4, [SP, #16]
0x0EA2	0xB224    SXTH	R4, R4
0x0EA4	0x1B64    SUBS	R4, R4, R5
0x0EA6	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 507 :: 		}
L_Draw_Line102:
;ssd1306.c, 509 :: 		x1 += stepx;
0x0EA8	0x9D02    LDR	R5, [SP, #8]
0x0EAA	0xB22D    SXTH	R5, R5
0x0EAC	0x9C05    LDR	R4, [SP, #20]
0x0EAE	0xB224    SXTH	R4, R4
0x0EB0	0x1966    ADDS	R6, R4, R5
0x0EB2	0x9605    STR	R6, [SP, #20]
;ssd1306.c, 510 :: 		fraction += dy;
0x0EB4	0x9D01    LDR	R5, [SP, #4]
0x0EB6	0xB22D    SXTH	R5, R5
0x0EB8	0x9C04    LDR	R4, [SP, #16]
0x0EBA	0xB224    SXTH	R4, R4
0x0EBC	0x1964    ADDS	R4, R4, R5
0x0EBE	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 512 :: 		Draw_Pixel(x1, y1, colour);
0x0EC0	0x9A0A    LDR	R2, [SP, #40]
0x0EC2	0xB2D2    UXTB	R2, R2
0x0EC4	0x9906    LDR	R1, [SP, #24]
0x0EC6	0xB209    SXTH	R1, R1
0x0EC8	0xB2F0    UXTB	R0, R6
0x0ECA	0xF7FFFB37  BL	_Draw_Pixel+0
;ssd1306.c, 513 :: 		}
0x0ECE	0xE7D5    B	L_Draw_Line100
L_Draw_Line101:
;ssd1306.c, 514 :: 		}
0x0ED0	0xE031    B	L_Draw_Line103
L_Draw_Line99:
;ssd1306.c, 517 :: 		fraction = (dx - (dy >> 1));
0x0ED2	0x9C01    LDR	R4, [SP, #4]
0x0ED4	0xB224    SXTH	R4, R4
0x0ED6	0x1065    ASRS	R5, R4, #1
0x0ED8	0xB22D    SXTH	R5, R5
0x0EDA	0x9C00    LDR	R4, [SP, #0]
0x0EDC	0xB224    SXTH	R4, R4
0x0EDE	0x1B64    SUBS	R4, R4, R5
0x0EE0	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 518 :: 		while (y1 != y2)
L_Draw_Line104:
0x0EE2	0x9D08    LDR	R5, [SP, #32]
0x0EE4	0xB22D    SXTH	R5, R5
0x0EE6	0x9C06    LDR	R4, [SP, #24]
0x0EE8	0xB224    SXTH	R4, R4
0x0EEA	0x42AC    CMP	R4, R5
0x0EEC	0xD023    BEQ	L_Draw_Line105
;ssd1306.c, 520 :: 		if (fraction >= 0)
0x0EEE	0x9C04    LDR	R4, [SP, #16]
0x0EF0	0xB224    SXTH	R4, R4
0x0EF2	0x2C00    CMP	R4, #0
0x0EF4	0xDB0B    BLT	L_Draw_Line106
;ssd1306.c, 522 :: 		x1 += stepx;
0x0EF6	0x9D02    LDR	R5, [SP, #8]
0x0EF8	0xB22D    SXTH	R5, R5
0x0EFA	0x9C05    LDR	R4, [SP, #20]
0x0EFC	0xB224    SXTH	R4, R4
0x0EFE	0x1964    ADDS	R4, R4, R5
0x0F00	0x9405    STR	R4, [SP, #20]
;ssd1306.c, 523 :: 		fraction -= dy;
0x0F02	0x9D01    LDR	R5, [SP, #4]
0x0F04	0xB22D    SXTH	R5, R5
0x0F06	0x9C04    LDR	R4, [SP, #16]
0x0F08	0xB224    SXTH	R4, R4
0x0F0A	0x1B64    SUBS	R4, R4, R5
0x0F0C	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 524 :: 		}
L_Draw_Line106:
;ssd1306.c, 526 :: 		y1 += stepy;
0x0F0E	0x9D03    LDR	R5, [SP, #12]
0x0F10	0xB22D    SXTH	R5, R5
0x0F12	0x9C06    LDR	R4, [SP, #24]
0x0F14	0xB224    SXTH	R4, R4
0x0F16	0x1966    ADDS	R6, R4, R5
0x0F18	0x9606    STR	R6, [SP, #24]
;ssd1306.c, 527 :: 		fraction += dx;
0x0F1A	0x9D00    LDR	R5, [SP, #0]
0x0F1C	0xB22D    SXTH	R5, R5
0x0F1E	0x9C04    LDR	R4, [SP, #16]
0x0F20	0xB224    SXTH	R4, R4
0x0F22	0x1964    ADDS	R4, R4, R5
0x0F24	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 529 :: 		Draw_Pixel(x1, y1, colour);
0x0F26	0x9A0A    LDR	R2, [SP, #40]
0x0F28	0xB2D2    UXTB	R2, R2
0x0F2A	0xB2F1    UXTB	R1, R6
0x0F2C	0x9805    LDR	R0, [SP, #20]
0x0F2E	0xB200    SXTH	R0, R0
0x0F30	0xF7FFFB04  BL	_Draw_Pixel+0
;ssd1306.c, 530 :: 		}
0x0F34	0xE7D5    B	L_Draw_Line104
L_Draw_Line105:
;ssd1306.c, 531 :: 		}
L_Draw_Line103:
;ssd1306.c, 532 :: 		}
L_end_Draw_Line:
0x0F36	0xB009    ADD	SP, SP, #36
0x0F38	0xBD00    POP	(R15)
; end of _Draw_Line
_Draw_Pixel:
;ssd1306.c, 437 :: 		void Draw_Pixel(unsigned char x_pos, unsigned char y_pos, unsigned char colour)
; colour start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x053C	0xB500    PUSH	(R14)
0x053E	0xB2CD    UXTB	R5, R1
; colour end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 20 (R5)
; colour start address is: 8 (R2)
;ssd1306.c, 439 :: 		unsigned char value = 0x00;
;ssd1306.c, 440 :: 		unsigned char page = 0x00;
;ssd1306.c, 441 :: 		unsigned char bit_pos = 0x00;
;ssd1306.c, 443 :: 		page = (y_pos / y_max);
0x0540	0x08EC    LSRS	R4, R5, #3
0x0542	0xB2E4    UXTB	R4, R4
; page start address is: 4 (R1)
0x0544	0xB2E1    UXTB	R1, R4
;ssd1306.c, 444 :: 		bit_pos = (y_pos - (page * y_max));
0x0546	0x00E3    LSLS	R3, R4, #3
0x0548	0xB21B    SXTH	R3, R3
0x054A	0x1AEB    SUBS	R3, R5, R3
; y_pos end address is: 20 (R5)
; bit_pos start address is: 20 (R5)
0x054C	0xB2DD    UXTB	R5, R3
;ssd1306.c, 445 :: 		value = buffer[((page * x_max) + x_pos)];
0x054E	0x01E3    LSLS	R3, R4, #7
0x0550	0xB21B    SXTH	R3, R3
0x0552	0x181C    ADDS	R4, R3, R0
0x0554	0xB224    SXTH	R4, R4
0x0556	0x4B12    LDR	R3, [PC, #72]
0x0558	0x191B    ADDS	R3, R3, R4
0x055A	0x781B    LDRB	R3, [R3, #0]
; value start address is: 16 (R4)
0x055C	0xB2DC    UXTB	R4, R3
;ssd1306.c, 447 :: 		if((colour & 0x01) != 0)
0x055E	0x2301    MOVS	R3, #1
0x0560	0x4013    ANDS	R3, R2
0x0562	0xB2DB    UXTB	R3, R3
; colour end address is: 8 (R2)
0x0564	0x2B00    CMP	R3, #0
0x0566	0xD005    BEQ	L_Draw_Pixel93
;ssd1306.c, 449 :: 		value |= (1 << bit_pos);
0x0568	0x2301    MOVS	R3, #1
0x056A	0x40AB    LSLS	R3, R5
0x056C	0xB21B    SXTH	R3, R3
; bit_pos end address is: 20 (R5)
0x056E	0x4323    ORRS	R3, R4
; value end address is: 16 (R4)
; value start address is: 28 (R7)
0x0570	0xB2DF    UXTB	R7, R3
;ssd1306.c, 450 :: 		}
; value end address is: 28 (R7)
0x0572	0xE006    B	L_Draw_Pixel94
L_Draw_Pixel93:
;ssd1306.c, 453 :: 		value &= (~(1 << bit_pos));
; value start address is: 16 (R4)
; bit_pos start address is: 20 (R5)
0x0574	0x2301    MOVS	R3, #1
0x0576	0x40AB    LSLS	R3, R5
0x0578	0xB21B    SXTH	R3, R3
; bit_pos end address is: 20 (R5)
0x057A	0x43DB    MVN	R3, R3
0x057C	0xB21B    SXTH	R3, R3
0x057E	0x4023    ANDS	R3, R4
; value end address is: 16 (R4)
; value start address is: 28 (R7)
0x0580	0xB2DF    UXTB	R7, R3
; value end address is: 28 (R7)
;ssd1306.c, 454 :: 		}
L_Draw_Pixel94:
;ssd1306.c, 456 :: 		buffer[((page * x_max) + x_pos)] = value;
; value start address is: 28 (R7)
0x0582	0x01CB    LSLS	R3, R1, #7
0x0584	0xB21B    SXTH	R3, R3
0x0586	0x181C    ADDS	R4, R3, R0
0x0588	0xB224    SXTH	R4, R4
0x058A	0x4B05    LDR	R3, [PC, #20]
0x058C	0x191B    ADDS	R3, R3, R4
0x058E	0x701F    STRB	R7, [R3, #0]
;ssd1306.c, 457 :: 		OLED_gotoxy(x_pos, page);
; page end address is: 4 (R1)
; x_pos end address is: 0 (R0)
0x0590	0xF000F936  BL	_OLED_gotoxy+0
;ssd1306.c, 458 :: 		OLED_write(value, DAT);
0x0594	0x2101    MOVS	R1, #1
0x0596	0xB2F8    UXTB	R0, R7
; value end address is: 28 (R7)
0x0598	0xF000F8FE  BL	_OLED_write+0
;ssd1306.c, 459 :: 		}
L_end_Draw_Pixel:
0x059C	0xBD00    POP	(R15)
0x059E	0xBF00    NOP
0x05A0	0x001D2000  	_buffer+0
; end of _Draw_Pixel
_Draw_Rectangle:
;ssd1306.c, 535 :: 		void Draw_Rectangle(signed int x1, signed int y1, signed int x2, signed int y2, unsigned char fill, unsigned char colour, unsigned char type)
0x16EC	0xB500    PUSH	(R14)
0x16EE	0xB089    SUB	SP, SP, #36
0x16F0	0x9005    STR	R0, [SP, #20]
0x16F2	0x9106    STR	R1, [SP, #24]
0x16F4	0x9207    STR	R2, [SP, #28]
0x16F6	0x9308    STR	R3, [SP, #32]
; fill start address is: 0 (R0)
0x16F8	0x980A    LDR	R0, [SP, #40]
0x16FA	0xB2C0    UXTB	R0, R0
0x16FC	0x9C0B    LDR	R4, [SP, #44]
0x16FE	0xB2E4    UXTB	R4, R4
0x1700	0x940B    STR	R4, [SP, #44]
0x1702	0x9C0C    LDR	R4, [SP, #48]
0x1704	0xB2E4    UXTB	R4, R4
0x1706	0x940C    STR	R4, [SP, #48]
;ssd1306.c, 537 :: 		unsigned short i = 0x00;
;ssd1306.c, 538 :: 		unsigned short xmin = 0x00;
;ssd1306.c, 539 :: 		unsigned short xmax = 0x00;
;ssd1306.c, 540 :: 		unsigned short ymin = 0x00;
;ssd1306.c, 541 :: 		unsigned short ymax = 0x00;
;ssd1306.c, 543 :: 		if(fill != 0)
0x1708	0x2800    CMP	R0, #0
0x170A	0xD047    BEQ	L_Draw_Rectangle107
; fill end address is: 0 (R0)
;ssd1306.c, 545 :: 		if(x1 < x2)
0x170C	0x9D07    LDR	R5, [SP, #28]
0x170E	0xB22D    SXTH	R5, R5
0x1710	0x9C05    LDR	R4, [SP, #20]
0x1712	0xB224    SXTH	R4, R4
0x1714	0x42AC    CMP	R4, R5
0x1716	0xDA06    BGE	L_Draw_Rectangle108
;ssd1306.c, 547 :: 		xmin = x1;
0x1718	0x9C05    LDR	R4, [SP, #20]
0x171A	0xB224    SXTH	R4, R4
0x171C	0x9401    STR	R4, [SP, #4]
;ssd1306.c, 548 :: 		xmax = x2;
0x171E	0x9C07    LDR	R4, [SP, #28]
0x1720	0xB224    SXTH	R4, R4
0x1722	0x9402    STR	R4, [SP, #8]
;ssd1306.c, 549 :: 		}
0x1724	0xE005    B	L_Draw_Rectangle109
L_Draw_Rectangle108:
;ssd1306.c, 552 :: 		xmin = x2;
0x1726	0x9C07    LDR	R4, [SP, #28]
0x1728	0xB224    SXTH	R4, R4
0x172A	0x9401    STR	R4, [SP, #4]
;ssd1306.c, 553 :: 		xmax = x1;
0x172C	0x9C05    LDR	R4, [SP, #20]
0x172E	0xB224    SXTH	R4, R4
0x1730	0x9402    STR	R4, [SP, #8]
;ssd1306.c, 554 :: 		}
L_Draw_Rectangle109:
;ssd1306.c, 556 :: 		if(y1 < y2)
0x1732	0x9D08    LDR	R5, [SP, #32]
0x1734	0xB22D    SXTH	R5, R5
0x1736	0x9C06    LDR	R4, [SP, #24]
0x1738	0xB224    SXTH	R4, R4
0x173A	0x42AC    CMP	R4, R5
0x173C	0xDA06    BGE	L_Draw_Rectangle110
;ssd1306.c, 558 :: 		ymin = y1;
0x173E	0x9C06    LDR	R4, [SP, #24]
0x1740	0xB224    SXTH	R4, R4
0x1742	0x9403    STR	R4, [SP, #12]
;ssd1306.c, 559 :: 		ymax = y2;
0x1744	0x9C08    LDR	R4, [SP, #32]
0x1746	0xB224    SXTH	R4, R4
0x1748	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 560 :: 		}
0x174A	0xE005    B	L_Draw_Rectangle111
L_Draw_Rectangle110:
;ssd1306.c, 563 :: 		ymin = y2;
0x174C	0x9C08    LDR	R4, [SP, #32]
0x174E	0xB224    SXTH	R4, R4
0x1750	0x9403    STR	R4, [SP, #12]
;ssd1306.c, 564 :: 		ymax = y1;
0x1752	0x9C06    LDR	R4, [SP, #24]
0x1754	0xB224    SXTH	R4, R4
0x1756	0x9404    STR	R4, [SP, #16]
;ssd1306.c, 565 :: 		}
L_Draw_Rectangle111:
;ssd1306.c, 567 :: 		for(; xmin <= xmax; ++xmin)
L_Draw_Rectangle112:
0x1758	0x9D02    LDR	R5, [SP, #8]
0x175A	0xB2ED    UXTB	R5, R5
0x175C	0x9C01    LDR	R4, [SP, #4]
0x175E	0xB2E4    UXTB	R4, R4
0x1760	0x42AC    CMP	R4, R5
0x1762	0xD81A    BHI	L_Draw_Rectangle113
;ssd1306.c, 569 :: 		for(i = ymin; i <= ymax; ++i)
0x1764	0x9C03    LDR	R4, [SP, #12]
0x1766	0xB2E4    UXTB	R4, R4
0x1768	0x9400    STR	R4, [SP, #0]
L_Draw_Rectangle115:
0x176A	0x9D04    LDR	R5, [SP, #16]
0x176C	0xB2ED    UXTB	R5, R5
0x176E	0x9C00    LDR	R4, [SP, #0]
0x1770	0xB2E4    UXTB	R4, R4
0x1772	0x42AC    CMP	R4, R5
0x1774	0xD80C    BHI	L_Draw_Rectangle116
;ssd1306.c, 571 :: 		Draw_Pixel(xmin, i, colour);
0x1776	0x9A0B    LDR	R2, [SP, #44]
0x1778	0xB2D2    UXTB	R2, R2
0x177A	0x9900    LDR	R1, [SP, #0]
0x177C	0xB2C9    UXTB	R1, R1
0x177E	0x9801    LDR	R0, [SP, #4]
0x1780	0xB2C0    UXTB	R0, R0
0x1782	0xF7FEFEDB  BL	_Draw_Pixel+0
;ssd1306.c, 569 :: 		for(i = ymin; i <= ymax; ++i)
0x1786	0x9C00    LDR	R4, [SP, #0]
0x1788	0xB2E4    UXTB	R4, R4
0x178A	0x3401    ADDS	R4, #1
0x178C	0x9400    STR	R4, [SP, #0]
;ssd1306.c, 572 :: 		}
0x178E	0xE7EC    B	L_Draw_Rectangle115
L_Draw_Rectangle116:
;ssd1306.c, 567 :: 		for(; xmin <= xmax; ++xmin)
0x1790	0x9C01    LDR	R4, [SP, #4]
0x1792	0xB2E4    UXTB	R4, R4
0x1794	0x3401    ADDS	R4, #1
0x1796	0x9401    STR	R4, [SP, #4]
;ssd1306.c, 573 :: 		}
0x1798	0xE7DE    B	L_Draw_Rectangle112
L_Draw_Rectangle113:
;ssd1306.c, 574 :: 		}
0x179A	0xE037    B	L_Draw_Rectangle118
L_Draw_Rectangle107:
;ssd1306.c, 578 :: 		Draw_Line(x1, y1, x2, y1, colour);
0x179C	0x9C0B    LDR	R4, [SP, #44]
0x179E	0xB2E4    UXTB	R4, R4
0x17A0	0x9B06    LDR	R3, [SP, #24]
0x17A2	0xB21B    SXTH	R3, R3
0x17A4	0x9A07    LDR	R2, [SP, #28]
0x17A6	0xB212    SXTH	R2, R2
0x17A8	0x9906    LDR	R1, [SP, #24]
0x17AA	0xB209    SXTH	R1, R1
0x17AC	0x9805    LDR	R0, [SP, #20]
0x17AE	0xB200    SXTH	R0, R0
0x17B0	0xB410    PUSH	(R4)
0x17B2	0xF7FFFB13  BL	_Draw_Line+0
0x17B6	0xB001    ADD	SP, SP, #4
;ssd1306.c, 579 :: 		Draw_Line(x1, y2, x2, y2, colour);
0x17B8	0x9C0B    LDR	R4, [SP, #44]
0x17BA	0xB2E4    UXTB	R4, R4
0x17BC	0x9B08    LDR	R3, [SP, #32]
0x17BE	0xB21B    SXTH	R3, R3
0x17C0	0x9A07    LDR	R2, [SP, #28]
0x17C2	0xB212    SXTH	R2, R2
0x17C4	0x9908    LDR	R1, [SP, #32]
0x17C6	0xB209    SXTH	R1, R1
0x17C8	0x9805    LDR	R0, [SP, #20]
0x17CA	0xB200    SXTH	R0, R0
0x17CC	0xB410    PUSH	(R4)
0x17CE	0xF7FFFB05  BL	_Draw_Line+0
0x17D2	0xB001    ADD	SP, SP, #4
;ssd1306.c, 580 :: 		Draw_Line(x1, y1, x1, y2, colour);
0x17D4	0x9C0B    LDR	R4, [SP, #44]
0x17D6	0xB2E4    UXTB	R4, R4
0x17D8	0x9B08    LDR	R3, [SP, #32]
0x17DA	0xB21B    SXTH	R3, R3
0x17DC	0x9A05    LDR	R2, [SP, #20]
0x17DE	0xB212    SXTH	R2, R2
0x17E0	0x9906    LDR	R1, [SP, #24]
0x17E2	0xB209    SXTH	R1, R1
0x17E4	0x9805    LDR	R0, [SP, #20]
0x17E6	0xB200    SXTH	R0, R0
0x17E8	0xB410    PUSH	(R4)
0x17EA	0xF7FFFAF7  BL	_Draw_Line+0
0x17EE	0xB001    ADD	SP, SP, #4
;ssd1306.c, 581 :: 		Draw_Line(x2, y1, x2, y2, colour);
0x17F0	0x9C0B    LDR	R4, [SP, #44]
0x17F2	0xB2E4    UXTB	R4, R4
0x17F4	0x9B08    LDR	R3, [SP, #32]
0x17F6	0xB21B    SXTH	R3, R3
0x17F8	0x9A07    LDR	R2, [SP, #28]
0x17FA	0xB212    SXTH	R2, R2
0x17FC	0x9906    LDR	R1, [SP, #24]
0x17FE	0xB209    SXTH	R1, R1
0x1800	0x9807    LDR	R0, [SP, #28]
0x1802	0xB200    SXTH	R0, R0
0x1804	0xB410    PUSH	(R4)
0x1806	0xF7FFFAE9  BL	_Draw_Line+0
0x180A	0xB001    ADD	SP, SP, #4
;ssd1306.c, 582 :: 		}
L_Draw_Rectangle118:
;ssd1306.c, 584 :: 		if(type != SQUARE)
0x180C	0x9C0C    LDR	R4, [SP, #48]
0x180E	0xB2E4    UXTB	R4, R4
0x1810	0x2C00    CMP	R4, #0
0x1812	0xD027    BEQ	L_Draw_Rectangle119
;ssd1306.c, 586 :: 		Draw_Pixel(x1, y1, ~colour);
0x1814	0x9C0B    LDR	R4, [SP, #44]
0x1816	0xB2E4    UXTB	R4, R4
0x1818	0x43E4    MVN	R4, R4
0x181A	0xB2E2    UXTB	R2, R4
0x181C	0x9906    LDR	R1, [SP, #24]
0x181E	0xB209    SXTH	R1, R1
0x1820	0x9805    LDR	R0, [SP, #20]
0x1822	0xB200    SXTH	R0, R0
0x1824	0xF7FEFE8A  BL	_Draw_Pixel+0
;ssd1306.c, 587 :: 		Draw_Pixel(x1, y2, ~colour);
0x1828	0x9C0B    LDR	R4, [SP, #44]
0x182A	0xB2E4    UXTB	R4, R4
0x182C	0x43E4    MVN	R4, R4
0x182E	0xB2E2    UXTB	R2, R4
0x1830	0x9908    LDR	R1, [SP, #32]
0x1832	0xB209    SXTH	R1, R1
0x1834	0x9805    LDR	R0, [SP, #20]
0x1836	0xB200    SXTH	R0, R0
0x1838	0xF7FEFE80  BL	_Draw_Pixel+0
;ssd1306.c, 588 :: 		Draw_Pixel(x2, y1, ~colour);
0x183C	0x9C0B    LDR	R4, [SP, #44]
0x183E	0xB2E4    UXTB	R4, R4
0x1840	0x43E4    MVN	R4, R4
0x1842	0xB2E2    UXTB	R2, R4
0x1844	0x9906    LDR	R1, [SP, #24]
0x1846	0xB209    SXTH	R1, R1
0x1848	0x9807    LDR	R0, [SP, #28]
0x184A	0xB200    SXTH	R0, R0
0x184C	0xF7FEFE76  BL	_Draw_Pixel+0
;ssd1306.c, 589 :: 		Draw_Pixel(x2, y2, ~colour);
0x1850	0x9C0B    LDR	R4, [SP, #44]
0x1852	0xB2E4    UXTB	R4, R4
0x1854	0x43E4    MVN	R4, R4
0x1856	0xB2E2    UXTB	R2, R4
0x1858	0x9908    LDR	R1, [SP, #32]
0x185A	0xB209    SXTH	R1, R1
0x185C	0x9807    LDR	R0, [SP, #28]
0x185E	0xB200    SXTH	R0, R0
0x1860	0xF7FEFE6C  BL	_Draw_Pixel+0
;ssd1306.c, 590 :: 		}
L_Draw_Rectangle119:
;ssd1306.c, 591 :: 		}
L_end_Draw_Rectangle:
0x1864	0xB009    ADD	SP, SP, #36
0x1866	0xBD00    POP	(R15)
; end of _Draw_Rectangle
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 249 :: 		
0x155C	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 251 :: 		
0x155E	0xB410    PUSH	(R4)
;__Lib_MathDouble.c, 252 :: 		
0x1560	0x2200    MOVS	R2, #0
;__Lib_MathDouble.c, 253 :: 		
0x1562	0x2396    MOVS	R3, #150
;__Lib_MathDouble.c, 254 :: 		
0x1564	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 255 :: 		
0x1566	0xF7FFFBFB  BL	__Lib_MathDouble___Float_Aux+0
;__Lib_MathDouble.c, 256 :: 		
0x156A	0xBC10    POP	(R4)
;__Lib_MathDouble.c, 258 :: 		
L_end__UnsignedIntegralToFloat:
0x156C	0xBD00    POP	(R15)
; end of __UnsignedIntegralToFloat
__Lib_MathDouble___Float_Aux:
;__Lib_MathDouble.c, 1764 :: 		
0x0D60	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1766 :: 		
0x0D62	0xB470    PUSH	(R4, R5, R6)
;__Lib_MathDouble.c, 1767 :: 		
0x0D64	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 1768 :: 		
0x0D66	0x0C05    LSRS	R5, R0, #16
;__Lib_MathDouble.c, 1769 :: 		
0x0D68	0xD105    BNE	__Float_Aux_Lab_1
;__Lib_MathDouble.c, 1770 :: 		
0x0D6A	0x2410    MOVS	R4, #16
;__Lib_MathDouble.c, 1771 :: 		
0x0D6C	0x0400    LSLS	R0, R0, #16
;__Lib_MathDouble.c, 1772 :: 		
0x0D6E	0xD102    BNE	__Float_Aux_Lab_1
;__Lib_MathDouble.c, 1773 :: 		
0x0D70	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1774 :: 		
0x0D72	0xD022    BEQ	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1775 :: 		
0x0D74	0x2411    MOVS	R4, #17
;__Lib_MathDouble.c, 1777 :: 		
__Float_Aux_Lab_1:
;__Lib_MathDouble.c, 1778 :: 		
0x0D76	0x0E05    LSRS	R5, R0, #24
;__Lib_MathDouble.c, 1779 :: 		
0x0D78	0xD101    BNE	__Float_Aux_Lab_3
;__Lib_MathDouble.c, 1780 :: 		
0x0D7A	0x3408    ADDS	R4, #8
;__Lib_MathDouble.c, 1781 :: 		
0x0D7C	0x0200    LSLS	R0, R0, #8
;__Lib_MathDouble.c, 1783 :: 		
__Float_Aux_Lab_3:
;__Lib_MathDouble.c, 1784 :: 		
0x0D7E	0x0F05    LSRS	R5, R0, #28
;__Lib_MathDouble.c, 1785 :: 		
0x0D80	0xD101    BNE	__Float_Aux_Lab_4
;__Lib_MathDouble.c, 1786 :: 		
0x0D82	0x1D24    ADDS	R4, R4, #4
;__Lib_MathDouble.c, 1787 :: 		
0x0D84	0x0100    LSLS	R0, R0, #4
;__Lib_MathDouble.c, 1789 :: 		
__Float_Aux_Lab_4:
;__Lib_MathDouble.c, 1790 :: 		
0x0D86	0x0F85    LSRS	R5, R0, #30
;__Lib_MathDouble.c, 1791 :: 		
0x0D88	0xD101    BNE	__Float_Aux_Lab_5
;__Lib_MathDouble.c, 1792 :: 		
0x0D8A	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 1793 :: 		
0x0D8C	0x0080    LSLS	R0, R0, #2
;__Lib_MathDouble.c, 1795 :: 		
__Float_Aux_Lab_5:
;__Lib_MathDouble.c, 1796 :: 		
0x0D8E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 1797 :: 		
0x0D90	0xDB01    BLT	__Float_Aux_Lab_6
;__Lib_MathDouble.c, 1798 :: 		
0x0D92	0x1C64    ADDS	R4, R4, #1
;__Lib_MathDouble.c, 1799 :: 		
0x0D94	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1801 :: 		
__Float_Aux_Lab_6:
;__Lib_MathDouble.c, 1802 :: 		
0x0D96	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1803 :: 		
0x0D98	0xD008    BEQ	__Float_Aux_Lab_7
;__Lib_MathDouble.c, 1804 :: 		
0x0D9A	0x2520    MOVS	R5, #32
;__Lib_MathDouble.c, 1805 :: 		
0x0D9C	0x1B2E    SUBS	R6, R5, R4
;__Lib_MathDouble.c, 1806 :: 		
0x0D9E	0x460D    MOV	R5, R1
;__Lib_MathDouble.c, 1807 :: 		
0x0DA0	0x40F5    LSRS	R5, R6
;__Lib_MathDouble.c, 1808 :: 		
0x0DA2	0x40A1    LSLS	R1, R4
;__Lib_MathDouble.c, 1809 :: 		
0x0DA4	0xD000    BEQ	__Float_Aux_Lab_9
;__Lib_MathDouble.c, 1810 :: 		
0x0DA6	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 1812 :: 		
__Float_Aux_Lab_9:
;__Lib_MathDouble.c, 1813 :: 		
0x0DA8	0x430D    ORRS	R5, R1
;__Lib_MathDouble.c, 1814 :: 		
0x0DAA	0x4328    ORRS	R0, R5
;__Lib_MathDouble.c, 1816 :: 		
__Float_Aux_Lab_7:
;__Lib_MathDouble.c, 1817 :: 		
0x0DAC	0x1B1B    SUBS	R3, R3, R4
;__Lib_MathDouble.c, 1818 :: 		
0x0DAE	0x0601    LSLS	R1, R0, #24
;__Lib_MathDouble.c, 1819 :: 		
0x0DB0	0x1DDB    ADDS	R3, R3, #7
;__Lib_MathDouble.c, 1820 :: 		
0x0DB2	0x0A00    LSRS	R0, R0, #8
;__Lib_MathDouble.c, 1821 :: 		
0x0DB4	0x2B00    CMP	R3, #0
;__Lib_MathDouble.c, 1822 :: 		
0x0DB6	0xDA02    BGE	__Float_Aux_Lab_8
;__Lib_MathDouble.c, 1823 :: 		
0x0DB8	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1825 :: 		
__Float_Aux_Lab_2:
;__Lib_MathDouble.c, 1826 :: 		
0x0DBA	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 1828 :: 		
0x0DBC	0xE00C    B	__Float_Aux_Lab_end
;__Lib_MathDouble.c, 1830 :: 		
__Float_Aux_Lab_8:
;__Lib_MathDouble.c, 1831 :: 		
0x0DBE	0x05DB    LSLS	R3, R3, #23
;__Lib_MathDouble.c, 1832 :: 		
0x0DC0	0x1818    ADDS	R0, R3, R0
;__Lib_MathDouble.c, 1833 :: 		
0x0DC2	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 1834 :: 		
0x0DC4	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1835 :: 		
0x0DC6	0xDAF8    BGE	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1836 :: 		
0x0DC8	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 1837 :: 		
0x0DCA	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 1838 :: 		
0x0DCC	0xD1F5    BNE	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1839 :: 		
0x0DCE	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 1840 :: 		
0x0DD0	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 1841 :: 		
0x0DD2	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1842 :: 		
0x0DD4	0xE000    B	__Float_Aux_Lab_end
;__Lib_MathDouble.c, 1843 :: 		
0x0DD6	0x0000    MOVS	R0, R0
;__Lib_MathDouble.c, 1845 :: 		
__Float_Aux_Lab_end:
;__Lib_MathDouble.c, 1847 :: 		
L_end___Float_Aux:
0x0DD8	0xB001    ADD	SP, SP, #4
0x0DDA	0x4770    BX	LR
; end of __Lib_MathDouble___Float_Aux
__Mul_FP:
;__Lib_MathDouble.c, 494 :: 		
0x1570	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 496 :: 		
0x1572	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 498 :: 		
0x1574	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 499 :: 		
0x1576	0xB470    PUSH	(R4, R5, R6)
;__Lib_MathDouble.c, 500 :: 		
0x1578	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 501 :: 		
0x157A	0x0FD3    LSRS	R3, R2, #31
;__Lib_MathDouble.c, 502 :: 		
0x157C	0x07DB    LSLS	R3, R3, #31
;__Lib_MathDouble.c, 503 :: 		
0x157E	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 504 :: 		
0x1580	0xD034    BEQ	_Mul_FP_Lab_end
;__Lib_MathDouble.c, 505 :: 		
0x1582	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 506 :: 		
0x1584	0xD02A    BEQ	_Mul_FP_Lab_1
;__Lib_MathDouble.c, 507 :: 		
0x1586	0x0E01    LSRS	R1, R0, #24
;__Lib_MathDouble.c, 508 :: 		
0x1588	0x0E14    LSRS	R4, R2, #24
;__Lib_MathDouble.c, 509 :: 		
0x158A	0x1909    ADDS	R1, R1, R4
;__Lib_MathDouble.c, 510 :: 		
0x158C	0x0200    LSLS	R0, R0, #8
;__Lib_MathDouble.c, 511 :: 		
0x158E	0x0212    LSLS	R2, R2, #8
;__Lib_MathDouble.c, 512 :: 		
0x1590	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 513 :: 		
0x1592	0x0A52    LSRS	R2, R2, #9
;__Lib_MathDouble.c, 514 :: 		
0x1594	0x1884    ADDS	R4, R0, R2
;__Lib_MathDouble.c, 515 :: 		
0x1596	0x01E5    LSLS	R5, R4, #7
;__Lib_MathDouble.c, 516 :: 		
0x1598	0x4604    MOV	R4, R0
;__Lib_MathDouble.c, 517 :: 		
0x159A	0x4354    MULS	R4, R2, R4
;__Lib_MathDouble.c, 518 :: 		
0x159C	0x0A00    LSRS	R0, R0, #8
;__Lib_MathDouble.c, 519 :: 		
0x159E	0x0A12    LSRS	R2, R2, #8
;__Lib_MathDouble.c, 520 :: 		
0x15A0	0x042E    LSLS	R6, R5, #16
;__Lib_MathDouble.c, 521 :: 		
0x15A2	0x4350    MULS	R0, R2, R0
;__Lib_MathDouble.c, 522 :: 		
0x15A4	0x19A4    ADDS	R4, R4, R6
;__Lib_MathDouble.c, 523 :: 		
0x15A6	0x1942    ADDS	R2, R0, R5
;__Lib_MathDouble.c, 524 :: 		
0x15A8	0x0C20    LSRS	R0, R4, #16
;__Lib_MathDouble.c, 525 :: 		
0x15AA	0x43C5    MVNS	R5, R0
;__Lib_MathDouble.c, 526 :: 		
0x15AC	0x18AA    ADDS	R2, R5, R2
;__Lib_MathDouble.c, 527 :: 		
0x15AE	0x0C12    LSRS	R2, R2, #16
;__Lib_MathDouble.c, 528 :: 		
0x15B0	0x2501    MOVS	R5, #1
;__Lib_MathDouble.c, 529 :: 		
0x15B2	0x397F    SUBS	R1, #127
;__Lib_MathDouble.c, 530 :: 		
0x15B4	0x1C52    ADDS	R2, R2, #1
;__Lib_MathDouble.c, 531 :: 		
0x15B6	0x03AD    LSLS	R5, R5, #14
;__Lib_MathDouble.c, 532 :: 		
0x15B8	0x1952    ADDS	R2, R2, R5
;__Lib_MathDouble.c, 533 :: 		
0x15BA	0x0412    LSLS	R2, R2, #16
;__Lib_MathDouble.c, 534 :: 		
0x15BC	0x0424    LSLS	R4, R4, #16
;__Lib_MathDouble.c, 535 :: 		
0x15BE	0xD000    BEQ	_Mul_FP_Lab_2
;__Lib_MathDouble.c, 536 :: 		
0x15C0	0x1C52    ADDS	R2, R2, #1
;__Lib_MathDouble.c, 538 :: 		
_Mul_FP_Lab_2:
;__Lib_MathDouble.c, 539 :: 		
0x15C2	0x4310    ORRS	R0, R2
;__Lib_MathDouble.c, 540 :: 		
0x15C4	0xD401    BMI	_Mul_FP_Lab_3
;__Lib_MathDouble.c, 541 :: 		
0x15C6	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 542 :: 		
0x15C8	0x1E49    SUBS	R1, R1, #1
;__Lib_MathDouble.c, 544 :: 		
_Mul_FP_Lab_3:
;__Lib_MathDouble.c, 545 :: 		
0x15CA	0xB2C2    UXTB	R2, R0
;__Lib_MathDouble.c, 546 :: 		
0x15CC	0x060C    LSLS	R4, R1, #24
;__Lib_MathDouble.c, 547 :: 		
0x15CE	0x09C0    LSRS	R0, R0, #7
;__Lib_MathDouble.c, 548 :: 		
0x15D0	0x1820    ADDS	R0, R4, R0
;__Lib_MathDouble.c, 549 :: 		
0x15D2	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 550 :: 		
0x15D4	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 551 :: 		
0x15D6	0x2A80    CMP	R2, #128
;__Lib_MathDouble.c, 552 :: 		
0x15D8	0xD002    BEQ	_Mul_FP_Lab_4
;__Lib_MathDouble.c, 553 :: 		
0x15DA	0xE003    B	_Mul_FP_Lab_5
;__Lib_MathDouble.c, 555 :: 		
_Mul_FP_Lab_1:
;__Lib_MathDouble.c, 556 :: 		
0x15DC	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 558 :: 		
0x15DE	0xE005    B	_Mul_FP_Lab_end
;__Lib_MathDouble.c, 561 :: 		
_Mul_FP_Lab_4:
;__Lib_MathDouble.c, 562 :: 		
0x15E0	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 563 :: 		
0x15E2	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 565 :: 		
_Mul_FP_Lab_5:
;__Lib_MathDouble.c, 566 :: 		
0x15E4	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 567 :: 		
0x15E6	0xDA00    BGE	_Mul_FP_Lab_6
;__Lib_MathDouble.c, 568 :: 		
0x15E8	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 570 :: 		
_Mul_FP_Lab_6:
;__Lib_MathDouble.c, 571 :: 		
0x15EA	0x4318    ORRS	R0, R3
;__Lib_MathDouble.c, 573 :: 		
_Mul_FP_Lab_end:
;__Lib_MathDouble.c, 574 :: 		
0x15EC	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 576 :: 		
L_end__Mul_FP:
0x15EE	0xB001    ADD	SP, SP, #4
0x15F0	0x4770    BX	LR
; end of __Mul_FP
_sin:
;__Lib_CMath.c, 263 :: 		
0x15F4	0xB500    PUSH	(R14)
0x15F6	0xB084    SUB	SP, SP, #16
0x15F8	0x9002    STR	R0, [SP, #8]
;__Lib_CMath.c, 281 :: 		
0x15FA	0x2100    MOVS	R1, #0
0x15FC	0x9101    STR	R1, [SP, #4]
;__Lib_CMath.c, 282 :: 		
0x15FE	0x9A02    LDR	R2, [SP, #8]
0x1600	0x2000    MOVS	R0, #0
0x1602	0xF7FEFFCF  BL	__Compare_FP+0
0x1606	0xDD01    BLE	L__sin131
0x1608	0x2001    MOVS	R0, #1
0x160A	0xE000    B	L__sin132
L__sin131:
0x160C	0x2000    MOVS	R0, #0
L__sin132:
0x160E	0x2800    CMP	R0, #0
0x1610	0xD005    BEQ	L_sin48
;__Lib_CMath.c, 283 :: 		
0x1612	0x9A02    LDR	R2, [SP, #8]
0x1614	0x492E    LDR	R1, [PC, #184]
0x1616	0x4051    EORS	R1, R2
0x1618	0x9102    STR	R1, [SP, #8]
;__Lib_CMath.c, 284 :: 		
0x161A	0x2101    MOVS	R1, #1
0x161C	0x9101    STR	R1, [SP, #4]
;__Lib_CMath.c, 285 :: 		
L_sin48:
;__Lib_CMath.c, 286 :: 		
0x161E	0x9A02    LDR	R2, [SP, #8]
0x1620	0x482C    LDR	R0, [PC, #176]
0x1622	0xF7FFFFA5  BL	__Mul_FP+0
0x1626	0x9002    STR	R0, [SP, #8]
;__Lib_CMath.c, 287 :: 		
0x1628	0xF7FFFCFA  BL	_floor+0
0x162C	0x9003    STR	R0, [SP, #12]
0x162E	0x9A03    LDR	R2, [SP, #12]
0x1630	0x9802    LDR	R0, [SP, #8]
0x1632	0xF7FFF813  BL	__Sub_FP+0
0x1636	0x4A28    LDR	R2, [PC, #160]
0x1638	0xF7FFFF9A  BL	__Mul_FP+0
0x163C	0x9002    STR	R0, [SP, #8]
;__Lib_CMath.c, 288 :: 		
0x163E	0x4A27    LDR	R2, [PC, #156]
0x1640	0xF7FEFFB0  BL	__Compare_FP+0
0x1644	0xDD01    BLE	L__sin133
0x1646	0x2001    MOVS	R0, #1
0x1648	0xE000    B	L__sin134
L__sin133:
0x164A	0x2000    MOVS	R0, #0
L__sin134:
0x164C	0x2800    CMP	R0, #0
0x164E	0xD00C    BEQ	L_sin49
;__Lib_CMath.c, 289 :: 		
0x1650	0x9802    LDR	R0, [SP, #8]
0x1652	0x4A22    LDR	R2, [PC, #136]
0x1654	0xF7FFF802  BL	__Sub_FP+0
0x1658	0x9002    STR	R0, [SP, #8]
;__Lib_CMath.c, 290 :: 		
0x165A	0x9901    LDR	R1, [SP, #4]
0x165C	0xB2C9    UXTB	R1, R1
0x165E	0x2900    CMP	R1, #0
0x1660	0xD101    BNE	L__sin135
0x1662	0x2101    MOVS	R1, #1
0x1664	0xE000    B	L__sin136
L__sin135:
0x1666	0x2100    MOVS	R1, #0
L__sin136:
0x1668	0x9101    STR	R1, [SP, #4]
;__Lib_CMath.c, 291 :: 		
L_sin49:
;__Lib_CMath.c, 292 :: 		
0x166A	0x9A02    LDR	R2, [SP, #8]
0x166C	0x481C    LDR	R0, [PC, #112]
0x166E	0xF7FEFF99  BL	__Compare_FP+0
0x1672	0xDA01    BGE	L__sin137
0x1674	0x2001    MOVS	R0, #1
0x1676	0xE000    B	L__sin138
L__sin137:
0x1678	0x2000    MOVS	R0, #0
L__sin138:
0x167A	0x2800    CMP	R0, #0
0x167C	0xD004    BEQ	L_sin50
;__Lib_CMath.c, 293 :: 		
0x167E	0x9A02    LDR	R2, [SP, #8]
0x1680	0x4816    LDR	R0, [PC, #88]
0x1682	0xF7FEFFEB  BL	__Sub_FP+0
0x1686	0x9002    STR	R0, [SP, #8]
L_sin50:
;__Lib_CMath.c, 294 :: 		
0x1688	0x9A02    LDR	R2, [SP, #8]
0x168A	0x9802    LDR	R0, [SP, #8]
0x168C	0xF7FFFF70  BL	__Mul_FP+0
0x1690	0x9000    STR	R0, [SP, #0]
;__Lib_CMath.c, 295 :: 		
0x1692	0x2204    MOVS	R2, #4
0x1694	0x4913    LDR	R1, [PC, #76]
0x1696	0xF7FFF939  BL	__Lib_CMath_eval_poly+0
0x169A	0x9A02    LDR	R2, [SP, #8]
0x169C	0xF7FFFF68  BL	__Mul_FP+0
0x16A0	0x9002    STR	R0, [SP, #8]
;__Lib_CMath.c, 296 :: 		
0x16A2	0x2203    MOVS	R2, #3
0x16A4	0x4910    LDR	R1, [PC, #64]
0x16A6	0x9800    LDR	R0, [SP, #0]
0x16A8	0xF7FFF930  BL	__Lib_CMath_eval_poly+0
0x16AC	0x9003    STR	R0, [SP, #12]
0x16AE	0x9A03    LDR	R2, [SP, #12]
0x16B0	0x9802    LDR	R0, [SP, #8]
0x16B2	0xF7FFF94F  BL	__Div_FP+0
0x16B6	0x9002    STR	R0, [SP, #8]
;__Lib_CMath.c, 298 :: 		
0x16B8	0x9901    LDR	R1, [SP, #4]
0x16BA	0xB2C9    UXTB	R1, R1
0x16BC	0x2900    CMP	R1, #0
0x16BE	0xD004    BEQ	L_sin51
;__Lib_CMath.c, 299 :: 		
0x16C0	0x9A02    LDR	R2, [SP, #8]
0x16C2	0x4903    LDR	R1, [PC, #12]
0x16C4	0x4051    EORS	R1, R2
0x16C6	0x4608    MOV	R0, R1
0x16C8	0xE000    B	L_end_sin
L_sin51:
;__Lib_CMath.c, 300 :: 		
0x16CA	0x9802    LDR	R0, [SP, #8]
;__Lib_CMath.c, 301 :: 		
L_end_sin:
0x16CC	0xB004    ADD	SP, SP, #16
0x16CE	0xBD00    POP	(R15)
0x16D0	0x00008000  	#-2147483648
0x16D4	0xF9833E22  	#1042479491
0x16D8	0x00004080  	#1082130432
0x16DC	0x00004000  	#1073741824
0x16E0	0x00003F80  	#1065353216
0x16E4	0x23E40000  	sin_coeff_a_L0+0
0x16E8	0x23F80000  	sin_coeff_b_L0+0
; end of _sin
_floor:
;__Lib_CMath.c, 38 :: 		
0x1020	0xB500    PUSH	(R14)
0x1022	0xB081    SUB	SP, SP, #4
0x1024	0x9000    STR	R0, [SP, #0]
;__Lib_CMath.c, 42 :: 		
0x1026	0x4669    MOV	R1, SP
0x1028	0x6809    LDR	R1, [R1, #0]
0x102A	0x0DCA    LSRS	R2, R1, #23
0x102C	0x21FF    MOVS	R1, #255
0x102E	0x4011    ANDS	R1, R2
;__Lib_CMath.c, 43 :: 		
0x1030	0xB209    SXTH	R1, R1
0x1032	0x397F    SUBS	R1, #127
0x1034	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x1036	0xB208    SXTH	R0, R1
;__Lib_CMath.c, 44 :: 		
0x1038	0x2900    CMP	R1, #0
0x103A	0xDA0D    BGE	L_floor1
; expon end address is: 0 (R0)
;__Lib_CMath.c, 45 :: 		
0x103C	0x9A00    LDR	R2, [SP, #0]
0x103E	0x2000    MOVS	R0, #0
0x1040	0xF7FFFAB0  BL	__Compare_FP+0
0x1044	0xDD01    BLE	L__floor74
0x1046	0x2001    MOVS	R0, #1
0x1048	0xE000    B	L__floor75
L__floor74:
0x104A	0x2000    MOVS	R0, #0
L__floor75:
0x104C	0x2800    CMP	R0, #0
0x104E	0xD001    BEQ	L_floor2
;__Lib_CMath.c, 46 :: 		
0x1050	0x480F    LDR	R0, [PC, #60]
0x1052	0xE01B    B	L_end_floor
L_floor2:
;__Lib_CMath.c, 48 :: 		
0x1054	0x2000    MOVS	R0, #0
0x1056	0xE019    B	L_end_floor
L_floor1:
;__Lib_CMath.c, 49 :: 		
; expon start address is: 0 (R0)
0x1058	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x105A	0x2918    CMP	R1, #24
0x105C	0xD901    BLS	L_floor4
;__Lib_CMath.c, 50 :: 		
0x105E	0x9800    LDR	R0, [SP, #0]
0x1060	0xE014    B	L_end_floor
L_floor4:
;__Lib_CMath.c, 51 :: 		
0x1062	0x9800    LDR	R0, [SP, #0]
0x1064	0xF7FFFADE  BL	__FloatToSignedIntegral+0
0x1068	0xF7FFFACE  BL	__SignedIntegralToFloat+0
; i start address is: 12 (R3)
0x106C	0x4603    MOV	R3, R0
;__Lib_CMath.c, 53 :: 		
0x106E	0x9A00    LDR	R2, [SP, #0]
0x1070	0xF7FFFA98  BL	__Compare_FP+0
0x1074	0xDD01    BLE	L__floor76
0x1076	0x2001    MOVS	R0, #1
0x1078	0xE000    B	L__floor77
L__floor76:
0x107A	0x2000    MOVS	R0, #0
L__floor77:
0x107C	0x2800    CMP	R0, #0
0x107E	0xD004    BEQ	L_floor5
;__Lib_CMath.c, 54 :: 		
0x1080	0x4A04    LDR	R2, [PC, #16]
0x1082	0x4618    MOV	R0, R3
0x1084	0xF7FFFAEA  BL	__Sub_FP+0
; i end address is: 12 (R3)
0x1088	0xE000    B	L_end_floor
L_floor5:
;__Lib_CMath.c, 55 :: 		
; i start address is: 12 (R3)
0x108A	0x4618    MOV	R0, R3
; i end address is: 12 (R3)
;__Lib_CMath.c, 56 :: 		
L_end_floor:
0x108C	0xB001    ADD	SP, SP, #4
0x108E	0xBD00    POP	(R15)
0x1090	0x0000BF80  	#-1082130432
0x1094	0x00003F80  	#1065353216
; end of _floor
__Compare_FP:
;__Lib_MathDouble.c, 697 :: 		
0x05A4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 700 :: 		
0x05A6	0xB410    PUSH	(R4)
;__Lib_MathDouble.c, 702 :: 		
0x05A8	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 706 :: 		
0x05AA	0xD023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 711 :: 		
0x05AC	0x4604    MOV	R4, R0
;__Lib_MathDouble.c, 712 :: 		
0x05AE	0x4314    ORRS	R4, R2
;__Lib_MathDouble.c, 713 :: 		
0x05B0	0x0064    LSLS	R4, R4, #1
;__Lib_MathDouble.c, 714 :: 		
0x05B2	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 718 :: 		
0x05B4	0xD01E    BEQ	__me_lab_end
;__Lib_MathDouble.c, 720 :: 		
0x05B6	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 721 :: 		
0x05B8	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 723 :: 		
0x05BA	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 724 :: 		
0x05BC	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 725 :: 		
0x05BE	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 726 :: 		
0x05C0	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 727 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 730 :: 		
0x05C2	0xE017    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ct2_:
;__Lib_MathDouble.c, 733 :: 		
0x05C4	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 734 :: 		
0x05C6	0x0E24    LSRS	R4, R4, #24
;__Lib_MathDouble.c, 735 :: 		
0x05C8	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 736 :: 		
0x05CA	0xD107    BNE	__me_ct1_
;__Lib_MathDouble.c, 737 :: 		
0x05CC	0x0054    LSLS	R4, R2, #1
;__Lib_MathDouble.c, 738 :: 		
0x05CE	0x0E24    LSRS	R4, R4, #24
;__Lib_MathDouble.c, 739 :: 		
0x05D0	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 740 :: 		
0x05D2	0xD103    BNE	__me_ct1_
;__Lib_MathDouble.c, 742 :: 		
0x05D4	0x0FD4    LSRS	R4, R2, #31
;__Lib_MathDouble.c, 744 :: 		
0x05D6	0x0FC1    LSRS	R1, R0, #31
;__Lib_MathDouble.c, 745 :: 		
0x05D8	0x1A64    SUBS	R4, R4, R1
;__Lib_MathDouble.c, 748 :: 		
0x05DA	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 750 :: 		
__me_ct1_:
;__Lib_MathDouble.c, 751 :: 		
0x05DC	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 752 :: 		
0x05DE	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 754 :: 		
0x05E0	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 755 :: 		
0x05E2	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 756 :: 		
0x05E4	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 757 :: 		
0x05E6	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 760 :: 		
0x05E8	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 763 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 764 :: 		
0x05EA	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 767 :: 		
0x05EC	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 769 :: 		
__me_op2_m:
;__Lib_MathDouble.c, 770 :: 		
0x05EE	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 774 :: 		
0x05F0	0xD500    BPL	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x05F2	0x4282    CMP	R2, R0
;__Lib_MathDouble.c, 777 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 778 :: 		
0x05F4	0xBC10    POP	(R4)
;__Lib_MathDouble.c, 781 :: 		
L_end__Compare_FP:
0x05F6	0xB001    ADD	SP, SP, #4
0x05F8	0x4770    BX	LR
; end of __Compare_FP
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 22 :: 		
0x0624	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 24 :: 		
0x0626	0x0FC2    LSRS	R2, R0, #31
;__Lib_MathDouble.c, 25 :: 		
0x0628	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 26 :: 		
0x062A	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 27 :: 		
0x062C	0x0DC1    LSRS	R1, R0, #23
;__Lib_MathDouble.c, 28 :: 		
0x062E	0x0240    LSLS	R0, R0, #9
;__Lib_MathDouble.c, 29 :: 		
0x0630	0x2301    MOVS	R3, #1
;__Lib_MathDouble.c, 30 :: 		
0x0632	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 31 :: 		
0x0634	0x05DB    LSLS	R3, R3, #23
;__Lib_MathDouble.c, 32 :: 		
0x0636	0x07D2    LSLS	R2, R2, #31
;__Lib_MathDouble.c, 33 :: 		
0x0638	0x18C0    ADDS	R0, R0, R3
;__Lib_MathDouble.c, 34 :: 		
0x063A	0x297F    CMP	R1, #127
;__Lib_MathDouble.c, 35 :: 		
0x063C	0xDA01    BGE	_FloatToSignedIntegral_Lab_1
;__Lib_MathDouble.c, 36 :: 		
0x063E	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 37 :: 		
0x0640	0xE00A    B	_FloatToSignedIntegral_Lab_end
;__Lib_MathDouble.c, 38 :: 		
_FloatToSignedIntegral_Lab_1:
;__Lib_MathDouble.c, 39 :: 		
0x0642	0x2996    CMP	R1, #150
;__Lib_MathDouble.c, 40 :: 		
0x0644	0xDC03    BGT	_FloatToSignedIntegral_Lab_2
;__Lib_MathDouble.c, 41 :: 		
0x0646	0x2396    MOVS	R3, #150
;__Lib_MathDouble.c, 42 :: 		
0x0648	0x1A59    SUBS	R1, R3, R1
;__Lib_MathDouble.c, 43 :: 		
0x064A	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 44 :: 		
0x064C	0xE001    B	_FloatToSignedIntegral_Lab_3
;__Lib_MathDouble.c, 45 :: 		
_FloatToSignedIntegral_Lab_2:
;__Lib_MathDouble.c, 46 :: 		
0x064E	0x3996    SUBS	R1, #150
;__Lib_MathDouble.c, 47 :: 		
0x0650	0x4088    LSLS	R0, R1
;__Lib_MathDouble.c, 48 :: 		
_FloatToSignedIntegral_Lab_3:
;__Lib_MathDouble.c, 49 :: 		
0x0652	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 50 :: 		
0x0654	0xD000    BEQ	_FloatToSignedIntegral_Lab_end
;__Lib_MathDouble.c, 51 :: 		
0x0656	0x4240    RSBS	R0, R0, #0
;__Lib_MathDouble.c, 53 :: 		
_FloatToSignedIntegral_Lab_end:
;__Lib_MathDouble.c, 56 :: 		
L_end__FloatToSignedIntegral:
0x0658	0xB001    ADD	SP, SP, #4
0x065A	0x4770    BX	LR
; end of __FloatToSignedIntegral
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 202 :: 		
0x0608	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 204 :: 		
0x060A	0x17C2    ASRS	R2, R0, #31
;__Lib_MathDouble.c, 205 :: 		
0x060C	0x0FC1    LSRS	R1, R0, #31
;__Lib_MathDouble.c, 206 :: 		
0x060E	0x4050    EORS	R0, R2
;__Lib_MathDouble.c, 207 :: 		
0x0610	0xB410    PUSH	(R4)
;__Lib_MathDouble.c, 208 :: 		
0x0612	0x1840    ADDS	R0, R0, R1
;__Lib_MathDouble.c, 209 :: 		
0x0614	0x07CA    LSLS	R2, R1, #31
;__Lib_MathDouble.c, 210 :: 		
0x0616	0x2396    MOVS	R3, #150
;__Lib_MathDouble.c, 211 :: 		
0x0618	0x2100    MOVS	R1, #0
;__Lib_MathDouble.c, 212 :: 		
0x061A	0xF000FBA1  BL	__Lib_MathDouble___Float_Aux+0
;__Lib_MathDouble.c, 213 :: 		
0x061E	0xBC10    POP	(R4)
;__Lib_MathDouble.c, 214 :: 		
0x0620	0x0000    MOVS	R0, R0
;__Lib_MathDouble.c, 216 :: 		
L_end__SignedIntegralToFloat:
0x0622	0xBD00    POP	(R15)
; end of __SignedIntegralToFloat
__Sub_FP:
;__Lib_MathDouble.c, 481 :: 		
0x065C	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 483 :: 		
0x065E	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 484 :: 		
0x0660	0x07C9    LSLS	R1, R1, #31
;__Lib_MathDouble.c, 485 :: 		
0x0662	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 486 :: 		
0x0664	0xF7FFFD36  BL	__Add_FP+0
;__Lib_MathDouble.c, 488 :: 		
L_end__Sub_FP:
0x0668	0xBD00    POP	(R15)
; end of __Sub_FP
__Add_FP:
;__Lib_MathDouble.c, 369 :: 		
0x00D4	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 371 :: 		
0x00D6	0xB4F8    PUSH	(R3, R4, R5, R6, R7)
;__Lib_MathDouble.c, 373 :: 		
0x00D8	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 375 :: 		
0x00DA	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 376 :: 		
0x00DC	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 377 :: 		
0x00DE	0x0FD4    LSRS	R4, R2, #31
;__Lib_MathDouble.c, 378 :: 		
0x00E0	0x0042    LSLS	R2, R0, #1
;__Lib_MathDouble.c, 379 :: 		
0x00E2	0x004B    LSLS	R3, R1, #1
;__Lib_MathDouble.c, 380 :: 		
0x00E4	0x0852    LSRS	R2, R2, #1
;__Lib_MathDouble.c, 381 :: 		
0x00E6	0x085B    LSRS	R3, R3, #1
;__Lib_MathDouble.c, 382 :: 		
0x00E8	0x429A    CMP	R2, R3
;__Lib_MathDouble.c, 383 :: 		
0x00EA	0xD202    BCS	_Add_FP_Lab_1
;__Lib_MathDouble.c, 384 :: 		
0x00EC	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 385 :: 		
0x00EE	0x4608    MOV	R0, R1
;__Lib_MathDouble.c, 386 :: 		
0x00F0	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 388 :: 		
_Add_FP_Lab_1:
;__Lib_MathDouble.c, 389 :: 		
0x00F2	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 391 :: 		
0x00F4	0xD041    BEQ	_Add_FP_Lab_end
;__Lib_MathDouble.c, 392 :: 		
0x00F6	0x0DC3    LSRS	R3, R0, #23
;__Lib_MathDouble.c, 393 :: 		
0x00F8	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 394 :: 		
0x00FA	0xB2DD    UXTB	R5, R3
;__Lib_MathDouble.c, 395 :: 		
0x00FC	0x0E12    LSRS	R2, R2, #24
;__Lib_MathDouble.c, 396 :: 		
0x00FE	0x1AAD    SUBS	R5, R5, R2
;__Lib_MathDouble.c, 397 :: 		
0x0100	0x2D20    CMP	R5, #32
;__Lib_MathDouble.c, 398 :: 		
0x0102	0xDA35    BGE	_Add_FP_Lab_2
;__Lib_MathDouble.c, 399 :: 		
0x0104	0x0249    LSLS	R1, R1, #9
;__Lib_MathDouble.c, 400 :: 		
0x0106	0x2601    MOVS	R6, #1
;__Lib_MathDouble.c, 401 :: 		
0x0108	0x0A49    LSRS	R1, R1, #9
;__Lib_MathDouble.c, 402 :: 		
0x010A	0x05F6    LSLS	R6, R6, #23
;__Lib_MathDouble.c, 403 :: 		
0x010C	0x198A    ADDS	R2, R1, R6
;__Lib_MathDouble.c, 404 :: 		
0x010E	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 405 :: 		
0x0110	0xD000    BEQ	_Add_FP_Lab_3
;__Lib_MathDouble.c, 406 :: 		
0x0112	0x4252    RSBS	R2, R2, #0
;__Lib_MathDouble.c, 408 :: 		
_Add_FP_Lab_3:
;__Lib_MathDouble.c, 409 :: 		
0x0114	0x2120    MOVS	R1, #32
;__Lib_MathDouble.c, 410 :: 		
0x0116	0x1B4F    SUBS	R7, R1, R5
;__Lib_MathDouble.c, 411 :: 		
0x0118	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 412 :: 		
0x011A	0x40B9    LSLS	R1, R7
;__Lib_MathDouble.c, 413 :: 		
0x011C	0x412A    ASRS	R2, R5
;__Lib_MathDouble.c, 414 :: 		
0x011E	0x1810    ADDS	R0, R2, R0
;__Lib_MathDouble.c, 415 :: 		
0x0120	0x0DC2    LSRS	R2, R0, #23
;__Lib_MathDouble.c, 416 :: 		
0x0122	0x429A    CMP	R2, R3
;__Lib_MathDouble.c, 417 :: 		
0x0124	0xD021    BEQ	_Add_FP_Lab_4
;__Lib_MathDouble.c, 418 :: 		
0x0126	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 419 :: 		
0x0128	0xD017    BEQ	_Add_FP_Lab_5
;__Lib_MathDouble.c, 420 :: 		
0x012A	0x2D01    CMP	R5, #1
;__Lib_MathDouble.c, 421 :: 		
0x012C	0xDC08    BGT	_Add_FP_Lab_6
;__Lib_MathDouble.c, 422 :: 		
0x012E	0x05DA    LSLS	R2, R3, #23
;__Lib_MathDouble.c, 423 :: 		
0x0130	0x1A80    SUBS	R0, R0, R2
;__Lib_MathDouble.c, 424 :: 		
0x0132	0x0FD2    LSRS	R2, R2, #31
;__Lib_MathDouble.c, 425 :: 		
0x0134	0x1980    ADDS	R0, R0, R6
;__Lib_MathDouble.c, 426 :: 		
0x0136	0x07D2    LSLS	R2, R2, #31
;__Lib_MathDouble.c, 427 :: 		
0x0138	0xB2DB    UXTB	R3, R3
;__Lib_MathDouble.c, 428 :: 		
0x013A	0xF000FE11  BL	__Lib_MathDouble___Float_Aux+0
;__Lib_MathDouble.c, 430 :: 		
0x013E	0xE01C    B	_Add_FP_Lab_end
;__Lib_MathDouble.c, 433 :: 		
_Add_FP_Lab_6:
;__Lib_MathDouble.c, 434 :: 		
0x0140	0x05DA    LSLS	R2, R3, #23
;__Lib_MathDouble.c, 435 :: 		
0x0142	0x1A80    SUBS	R0, R0, R2
;__Lib_MathDouble.c, 436 :: 		
0x0144	0x2301    MOVS	R3, #1
;__Lib_MathDouble.c, 437 :: 		
0x0146	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 438 :: 		
0x0148	0x061B    LSLS	R3, R3, #24
;__Lib_MathDouble.c, 439 :: 		
0x014A	0x18C0    ADDS	R0, R0, R3
;__Lib_MathDouble.c, 440 :: 		
0x014C	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 441 :: 		
0x014E	0x425A    RSBS	R2, R3, #0
;__Lib_MathDouble.c, 442 :: 		
0x0150	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 443 :: 		
0x0152	0x0FCA    LSRS	R2, R1, #31
;__Lib_MathDouble.c, 444 :: 		
0x0154	0x4310    ORRS	R0, R2
;__Lib_MathDouble.c, 445 :: 		
0x0156	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 446 :: 		
0x0158	0xE007    B	_Add_FP_Lab_4
;__Lib_MathDouble.c, 448 :: 		
_Add_FP_Lab_5:
;__Lib_MathDouble.c, 449 :: 		
0x015A	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 450 :: 		
0x015C	0x07C2    LSLS	R2, R0, #31
;__Lib_MathDouble.c, 451 :: 		
0x015E	0x4311    ORRS	R1, R2
;__Lib_MathDouble.c, 452 :: 		
0x0160	0x05DA    LSLS	R2, R3, #23
;__Lib_MathDouble.c, 453 :: 		
0x0162	0x1A80    SUBS	R0, R0, R2
;__Lib_MathDouble.c, 454 :: 		
0x0164	0x1980    ADDS	R0, R0, R6
;__Lib_MathDouble.c, 455 :: 		
0x0166	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 456 :: 		
0x0168	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 458 :: 		
_Add_FP_Lab_4:
;__Lib_MathDouble.c, 459 :: 		
0x016A	0xF7FFFFA9  BL	__Lib_MathDouble___Fp+0
;__Lib_MathDouble.c, 461 :: 		
0x016E	0xE004    B	_Add_FP_Lab_end
;__Lib_MathDouble.c, 464 :: 		
_Add_FP_Lab_2:
;__Lib_MathDouble.c, 465 :: 		
0x0170	0x0061    LSLS	R1, R4, #1
;__Lib_MathDouble.c, 466 :: 		
0x0172	0x2201    MOVS	R2, #1
;__Lib_MathDouble.c, 467 :: 		
0x0174	0x1A51    SUBS	R1, R2, R1
;__Lib_MathDouble.c, 468 :: 		
0x0176	0x1B00    SUBS	R0, R0, R4
;__Lib_MathDouble.c, 469 :: 		
0x0178	0xE7F7    B	_Add_FP_Lab_4
;__Lib_MathDouble.c, 471 :: 		
_Add_FP_Lab_end:
;__Lib_MathDouble.c, 472 :: 		
0x017A	0xBCF8    POP	(R3, R4, R5, R6, R7)
;__Lib_MathDouble.c, 474 :: 		
L_end__Add_FP:
0x017C	0xBD00    POP	(R15)
; end of __Add_FP
__Lib_MathDouble___Fp:
;__Lib_MathDouble.c, 2028 :: 		
0x00C0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 2030 :: 		
0x00C2	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 2031 :: 		
0x00C4	0xDA04    BGE	__Fp_Lab_end
;__Lib_MathDouble.c, 2032 :: 		
0x00C6	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 2033 :: 		
0x00C8	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 2034 :: 		
0x00CA	0xD101    BNE	__Fp_Lab_end
;__Lib_MathDouble.c, 2035 :: 		
0x00CC	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 2036 :: 		
0x00CE	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 2038 :: 		
__Fp_Lab_end:
;__Lib_MathDouble.c, 2040 :: 		
L_end___Fp:
0x00D0	0xB001    ADD	SP, SP, #4
0x00D2	0x4770    BX	LR
; end of __Lib_MathDouble___Fp
__Lib_CMath_eval_poly:
;__Lib_CMath.c, 117 :: 		
0x090C	0xB500    PUSH	(R14)
0x090E	0xB083    SUB	SP, SP, #12
0x0910	0x9000    STR	R0, [SP, #0]
0x0912	0x9101    STR	R1, [SP, #4]
0x0914	0x9202    STR	R2, [SP, #8]
;__Lib_CMath.c, 120 :: 		
0x0916	0x9B02    LDR	R3, [SP, #8]
0x0918	0xB21B    SXTH	R3, R3
0x091A	0x009C    LSLS	R4, R3, #2
0x091C	0x9B01    LDR	R3, [SP, #4]
0x091E	0x191B    ADDS	R3, R3, R4
0x0920	0x6818    LDR	R0, [R3, #0]
; res start address is: 0 (R0)
; res end address is: 0 (R0)
0x0922	0x4601    MOV	R1, R0
;__Lib_CMath.c, 121 :: 		
L___Lib_CMath_eval_poly17:
; res start address is: 4 (R1)
0x0924	0x9B02    LDR	R3, [SP, #8]
0x0926	0xB21B    SXTH	R3, R3
0x0928	0x2B00    CMP	R3, #0
0x092A	0xD010    BEQ	L___Lib_CMath_eval_poly18
;__Lib_CMath.c, 122 :: 		
0x092C	0x9800    LDR	R0, [SP, #0]
0x092E	0x460A    MOV	R2, R1
0x0930	0xF000FE1E  BL	__Mul_FP+0
; res end address is: 4 (R1)
0x0934	0x9B02    LDR	R3, [SP, #8]
0x0936	0xB21B    SXTH	R3, R3
0x0938	0x1E5B    SUBS	R3, R3, #1
0x093A	0xB21B    SXTH	R3, R3
0x093C	0x9302    STR	R3, [SP, #8]
0x093E	0x009C    LSLS	R4, R3, #2
0x0940	0x9B01    LDR	R3, [SP, #4]
0x0942	0x191B    ADDS	R3, R3, R4
0x0944	0x681A    LDR	R2, [R3, #0]
0x0946	0xF7FFFBC5  BL	__Add_FP+0
; res start address is: 0 (R0)
0x094A	0x4601    MOV	R1, R0
; res end address is: 0 (R0)
0x094C	0xE7EA    B	L___Lib_CMath_eval_poly17
L___Lib_CMath_eval_poly18:
;__Lib_CMath.c, 124 :: 		
; res start address is: 4 (R1)
0x094E	0x4608    MOV	R0, R1
; res end address is: 4 (R1)
;__Lib_CMath.c, 125 :: 		
L_end_eval_poly:
0x0950	0xB003    ADD	SP, SP, #12
0x0952	0xBD00    POP	(R15)
; end of __Lib_CMath_eval_poly
__Div_FP:
;__Lib_MathDouble.c, 582 :: 		
0x0954	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 584 :: 		
0x0956	0xB470    PUSH	(R4, R5, R6)
;__Lib_MathDouble.c, 588 :: 		
0x0958	0x0014    MOVS	R4, R2
;__Lib_MathDouble.c, 589 :: 		
0x095A	0xD105    BNE	_Div_FP_Lab_10
;__Lib_MathDouble.c, 591 :: 		
0x095C	0x0000    MOVS	R0, R0
;__Lib_MathDouble.c, 592 :: 		
0x095E	0xD501    BPL	_Div_FP_Lab_11
;__Lib_MathDouble.c, 594 :: 		
0x0960	0x4822    LDR	R0, [PC, #136]
;__Lib_MathDouble.c, 595 :: 		
0x0962	0xE040    B	_Div_FP_end
;__Lib_MathDouble.c, 597 :: 		
_Div_FP_Lab_11:
;__Lib_MathDouble.c, 598 :: 		
0x0964	0x4822    LDR	R0, [PC, #136]
;__Lib_MathDouble.c, 599 :: 		
0x0966	0xE03E    B	_Div_FP_end
;__Lib_MathDouble.c, 602 :: 		
_Div_FP_Lab_10:
;__Lib_MathDouble.c, 604 :: 		
0x0968	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 605 :: 		
0x096A	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 606 :: 		
0x096C	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 607 :: 		
0x096E	0x0FD5    LSRS	R5, R2, #31
;__Lib_MathDouble.c, 608 :: 		
0x0970	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 609 :: 		
0x0972	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 610 :: 		
0x0974	0x07ED    LSLS	R5, R5, #31
;__Lib_MathDouble.c, 611 :: 		
0x0976	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 612 :: 		
0x0978	0x0852    LSRS	R2, R2, #1
;__Lib_MathDouble.c, 613 :: 		
0x097A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 614 :: 		
0x097C	0xD016    BEQ	_Div_FP_Lab_1
;__Lib_MathDouble.c, 615 :: 		
0x097E	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 616 :: 		
0x0980	0xD014    BEQ	_Div_FP_Lab_1
;__Lib_MathDouble.c, 617 :: 		
0x0982	0x0041    LSLS	R1, R0, #1
;__Lib_MathDouble.c, 618 :: 		
0x0984	0x0E0C    LSRS	R4, R1, #24
;__Lib_MathDouble.c, 619 :: 		
0x0986	0x0051    LSLS	R1, R2, #1
;__Lib_MathDouble.c, 620 :: 		
0x0988	0x0E0B    LSRS	R3, R1, #24
;__Lib_MathDouble.c, 621 :: 		
0x098A	0x0241    LSLS	R1, R0, #9
;__Lib_MathDouble.c, 622 :: 		
0x098C	0x2001    MOVS	R0, #1
;__Lib_MathDouble.c, 623 :: 		
0x098E	0x05C0    LSLS	R0, R0, #23
;__Lib_MathDouble.c, 624 :: 		
0x0990	0x0252    LSLS	R2, R2, #9
;__Lib_MathDouble.c, 625 :: 		
0x0992	0x0A49    LSRS	R1, R1, #9
;__Lib_MathDouble.c, 626 :: 		
0x0994	0x0A52    LSRS	R2, R2, #9
;__Lib_MathDouble.c, 627 :: 		
0x0996	0x1AE4    SUBS	R4, R4, R3
;__Lib_MathDouble.c, 628 :: 		
0x0998	0x1809    ADDS	R1, R1, R0
;__Lib_MathDouble.c, 629 :: 		
0x099A	0x1812    ADDS	R2, R2, R0
;__Lib_MathDouble.c, 630 :: 		
0x099C	0x347D    ADDS	R4, #125
;__Lib_MathDouble.c, 631 :: 		
0x099E	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 632 :: 		
0x09A0	0xD301    BCC	_Div_FP_Lab_2
;__Lib_MathDouble.c, 633 :: 		
0x09A2	0x1C64    ADDS	R4, R4, #1
;__Lib_MathDouble.c, 634 :: 		
0x09A4	0xE000    B	_Div_FP_Lab_3
;__Lib_MathDouble.c, 636 :: 		
_Div_FP_Lab_2:
;__Lib_MathDouble.c, 637 :: 		
0x09A6	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 639 :: 		
_Div_FP_Lab_3:
;__Lib_MathDouble.c, 640 :: 		
0x09A8	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 641 :: 		
0x09AA	0xDA01    BGE	_Div_FP_Lab_4
;__Lib_MathDouble.c, 643 :: 		
_Div_FP_Lab_1:
;__Lib_MathDouble.c, 644 :: 		
0x09AC	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 646 :: 		
0x09AE	0xE01A    B	_Div_FP_end
;__Lib_MathDouble.c, 649 :: 		
_Div_FP_Lab_4:
;__Lib_MathDouble.c, 650 :: 		
0x09B0	0x2300    MOVS	R3, #0
;__Lib_MathDouble.c, 652 :: 		
_Div_FP_Lab_6:
;__Lib_MathDouble.c, 653 :: 		
0x09B2	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 654 :: 		
0x09B4	0xD301    BCC	_Div_FP_Lab_5
;__Lib_MathDouble.c, 655 :: 		
0x09B6	0x1A89    SUBS	R1, R1, R2
;__Lib_MathDouble.c, 656 :: 		
0x09B8	0x4303    ORRS	R3, R0
;__Lib_MathDouble.c, 658 :: 		
_Div_FP_Lab_5:
;__Lib_MathDouble.c, 659 :: 		
0x09BA	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 660 :: 		
0x09BC	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 661 :: 		
0x09BE	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 662 :: 		
0x09C0	0xD1F7    BNE	_Div_FP_Lab_6
;__Lib_MathDouble.c, 663 :: 		
0x09C2	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 664 :: 		
0x09C4	0xD00A    BEQ	_Div_FP_Lab_7
;__Lib_MathDouble.c, 665 :: 		
0x09C6	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 666 :: 		
0x09C8	0xD102    BNE	_Div_FP_Lab_8
;__Lib_MathDouble.c, 667 :: 		
0x09CA	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 668 :: 		
0x09CC	0x07C9    LSLS	R1, R1, #31
;__Lib_MathDouble.c, 669 :: 		
0x09CE	0xE005    B	_Div_FP_Lab_7
;__Lib_MathDouble.c, 671 :: 		
_Div_FP_Lab_8:
;__Lib_MathDouble.c, 672 :: 		
0x09D0	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 673 :: 		
0x09D2	0xD201    BCS	_Div_FP_Lab_9
;__Lib_MathDouble.c, 674 :: 		
0x09D4	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 675 :: 		
0x09D6	0xE001    B	_Div_FP_Lab_7
;__Lib_MathDouble.c, 677 :: 		
_Div_FP_Lab_9:
;__Lib_MathDouble.c, 678 :: 		
0x09D8	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 679 :: 		
0x09DA	0x43C9    MVNS	R1, R1
;__Lib_MathDouble.c, 681 :: 		
_Div_FP_Lab_7:
;__Lib_MathDouble.c, 682 :: 		
0x09DC	0x05E0    LSLS	R0, R4, #23
;__Lib_MathDouble.c, 683 :: 		
0x09DE	0x18C0    ADDS	R0, R0, R3
;__Lib_MathDouble.c, 684 :: 		
0x09E0	0x1940    ADDS	R0, R0, R5
;__Lib_MathDouble.c, 685 :: 		
0x09E2	0xF7FFFB6D  BL	__Lib_MathDouble___Fp+0
;__Lib_MathDouble.c, 687 :: 		
_Div_FP_end:
;__Lib_MathDouble.c, 688 :: 		
0x09E6	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 689 :: 		
0x09E8	0xE004    B	#8
0x09EA	0xBF00    NOP
0x09EC	0x0000FF80  	#-8388608
0x09F0	0x00007F80  	#2139095040
;__Lib_MathDouble.c, 690 :: 		
L_end__Div_FP:
0x09F4	0xBD00    POP	(R15)
; end of __Div_FP
__FloatToUnsignedIntegral:
;__Lib_MathDouble.c, 62 :: 		
0x1868	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 64 :: 		
0x186A	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 65 :: 		
0x186C	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 66 :: 		
0x186E	0x0DC1    LSRS	R1, R0, #23
;__Lib_MathDouble.c, 67 :: 		
0x1870	0x0240    LSLS	R0, R0, #9
;__Lib_MathDouble.c, 68 :: 		
0x1872	0x2201    MOVS	R2, #1
;__Lib_MathDouble.c, 69 :: 		
0x1874	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 70 :: 		
0x1876	0x05D2    LSLS	R2, R2, #23
;__Lib_MathDouble.c, 71 :: 		
0x1878	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 72 :: 		
0x187A	0x297F    CMP	R1, #127
;__Lib_MathDouble.c, 73 :: 		
0x187C	0xDA01    BGE	_FloatToUnsignedIntegral_Lab_1
;__Lib_MathDouble.c, 74 :: 		
0x187E	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 75 :: 		
0x1880	0xE007    B	_FloatToUnsignedIntegral_Lab_end
;__Lib_MathDouble.c, 76 :: 		
_FloatToUnsignedIntegral_Lab_1:
;__Lib_MathDouble.c, 77 :: 		
0x1882	0x2996    CMP	R1, #150
;__Lib_MathDouble.c, 78 :: 		
0x1884	0xDC03    BGT	_FloatToUnsignedIntegral_Lab_2
;__Lib_MathDouble.c, 79 :: 		
0x1886	0x2296    MOVS	R2, #150
;__Lib_MathDouble.c, 80 :: 		
0x1888	0x1A51    SUBS	R1, R2, R1
;__Lib_MathDouble.c, 81 :: 		
0x188A	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 82 :: 		
0x188C	0xE001    B	_FloatToUnsignedIntegral_Lab_end
;__Lib_MathDouble.c, 83 :: 		
_FloatToUnsignedIntegral_Lab_2:
;__Lib_MathDouble.c, 84 :: 		
0x188E	0x3996    SUBS	R1, #150
;__Lib_MathDouble.c, 85 :: 		
0x1890	0x4088    LSLS	R0, R1
;__Lib_MathDouble.c, 87 :: 		
_FloatToUnsignedIntegral_Lab_end:
;__Lib_MathDouble.c, 89 :: 		
L_end__FloatToUnsignedIntegral:
0x1892	0xB001    ADD	SP, SP, #4
0x1894	0x4770    BX	LR
; end of __FloatToUnsignedIntegral
_cos:
;__Lib_CMath.c, 305 :: 		
; f start address is: 0 (R0)
0x1898	0xB500    PUSH	(R14)
0x189A	0xB081    SUB	SP, SP, #4
0x189C	0x4601    MOV	R1, R0
; f end address is: 0 (R0)
; f start address is: 4 (R1)
;__Lib_CMath.c, 306 :: 		
0x189E	0x480D    LDR	R0, [PC, #52]
0x18A0	0x9100    STR	R1, [SP, #0]
0x18A2	0x460A    MOV	R2, R1
0x18A4	0xF7FEFE7E  BL	__Compare_FP+0
0x18A8	0xDA01    BGE	L__cos140
0x18AA	0x2001    MOVS	R0, #1
0x18AC	0xE000    B	L__cos141
L__cos140:
0x18AE	0x2000    MOVS	R0, #0
L__cos141:
0x18B0	0x9900    LDR	R1, [SP, #0]
0x18B2	0x2800    CMP	R0, #0
0x18B4	0xD006    BEQ	L_cos52
;__Lib_CMath.c, 307 :: 		
0x18B6	0x4A08    LDR	R2, [PC, #32]
0x18B8	0x4608    MOV	R0, R1
0x18BA	0xF7FEFECF  BL	__Sub_FP+0
; f end address is: 4 (R1)
0x18BE	0xF7FFFE99  BL	_sin+0
0x18C2	0xE005    B	L_end_cos
L_cos52:
;__Lib_CMath.c, 308 :: 		
; f start address is: 4 (R1)
0x18C4	0x4805    LDR	R0, [PC, #20]
0x18C6	0x460A    MOV	R2, R1
0x18C8	0xF7FEFC04  BL	__Add_FP+0
; f end address is: 4 (R1)
0x18CC	0xF7FFFE92  BL	_sin+0
;__Lib_CMath.c, 309 :: 		
L_end_cos:
0x18D0	0xB001    ADD	SP, SP, #4
0x18D2	0xBD00    POP	(R15)
0x18D4	0x0FDB4049  	#1078530011
0x18D8	0xCBE44096  	#1083624420
0x18DC	0x0FDB3FC9  	#1070141403
; end of _cos
_OLED_print_string:
;ssd1306.c, 210 :: 		void OLED_print_string(unsigned char x_pos, unsigned char y_pos, unsigned char *ch)
0x14D0	0xB500    PUSH	(R14)
0x14D2	0xB085    SUB	SP, SP, #20
0x14D4	0x9002    STR	R0, [SP, #8]
0x14D6	0x9103    STR	R1, [SP, #12]
0x14D8	0x9204    STR	R2, [SP, #16]
;ssd1306.c, 212 :: 		unsigned char chr = 0x00;
;ssd1306.c, 213 :: 		unsigned char i = 0x00;
;ssd1306.c, 214 :: 		unsigned char j = 0x00;
0x14DA	0x2300    MOVS	R3, #0
0x14DC	0x9301    STR	R3, [SP, #4]
;ssd1306.c, 216 :: 		while(ch[j] != '\0')
L_OLED_print_string35:
0x14DE	0x9C01    LDR	R4, [SP, #4]
0x14E0	0xB2E4    UXTB	R4, R4
0x14E2	0x9B04    LDR	R3, [SP, #16]
0x14E4	0x191B    ADDS	R3, R3, R4
0x14E6	0x781B    LDRB	R3, [R3, #0]
0x14E8	0x2B00    CMP	R3, #0
0x14EA	0xD033    BEQ	L_OLED_print_string36
;ssd1306.c, 218 :: 		chr = (ch[j] - 32);
0x14EC	0x9C01    LDR	R4, [SP, #4]
0x14EE	0xB2E4    UXTB	R4, R4
0x14F0	0x9B04    LDR	R3, [SP, #16]
0x14F2	0x191B    ADDS	R3, R3, R4
0x14F4	0x781B    LDRB	R3, [R3, #0]
0x14F6	0x3B20    SUBS	R3, #32
0x14F8	0x9300    STR	R3, [SP, #0]
;ssd1306.c, 220 :: 		if(x_pos > (x_max - 0x06))
0x14FA	0x9B02    LDR	R3, [SP, #8]
0x14FC	0xB2DB    UXTB	R3, R3
0x14FE	0x2B7A    CMP	R3, #122
0x1500	0xD905    BLS	L_OLED_print_string37
;ssd1306.c, 222 :: 		x_pos = 0x00;
0x1502	0x2300    MOVS	R3, #0
0x1504	0x9302    STR	R3, [SP, #8]
;ssd1306.c, 223 :: 		y_pos++;
0x1506	0x9B03    LDR	R3, [SP, #12]
0x1508	0xB2DB    UXTB	R3, R3
0x150A	0x3301    ADDS	R3, #1
0x150C	0x9303    STR	R3, [SP, #12]
;ssd1306.c, 224 :: 		}
L_OLED_print_string37:
;ssd1306.c, 225 :: 		OLED_gotoxy(x_pos, y_pos);
0x150E	0x9903    LDR	R1, [SP, #12]
0x1510	0xB2C9    UXTB	R1, R1
0x1512	0x9802    LDR	R0, [SP, #8]
0x1514	0xB2C0    UXTB	R0, R0
0x1516	0xF7FFF973  BL	_OLED_gotoxy+0
;ssd1306.c, 227 :: 		for(i = 0x00; i < 0x06; i++)
; i start address is: 24 (R6)
0x151A	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
L_OLED_print_string38:
; i start address is: 24 (R6)
0x151C	0x2E06    CMP	R6, #6
0x151E	0xD210    BCS	L_OLED_print_string39
;ssd1306.c, 229 :: 		OLED_write(font_regular[chr][i], DAT);
0x1520	0x9D00    LDR	R5, [SP, #0]
0x1522	0xB2ED    UXTB	R5, R5
0x1524	0x2306    MOVS	R3, #6
0x1526	0x462C    MOV	R4, R5
0x1528	0x435C    MULS	R4, R3, R4
0x152A	0x4B0B    LDR	R3, [PC, #44]
0x152C	0x191B    ADDS	R3, R3, R4
0x152E	0x199B    ADDS	R3, R3, R6
0x1530	0x781B    LDRB	R3, [R3, #0]
0x1532	0x2101    MOVS	R1, #1
0x1534	0xB2D8    UXTB	R0, R3
0x1536	0xF7FFF92F  BL	_OLED_write+0
;ssd1306.c, 227 :: 		for(i = 0x00; i < 0x06; i++)
0x153A	0x1C73    ADDS	R3, R6, #1
; i end address is: 24 (R6)
; i start address is: 4 (R1)
0x153C	0xB2D9    UXTB	R1, R3
;ssd1306.c, 230 :: 		}
0x153E	0xB2CE    UXTB	R6, R1
; i end address is: 4 (R1)
0x1540	0xE7EC    B	L_OLED_print_string38
L_OLED_print_string39:
;ssd1306.c, 232 :: 		j++;
0x1542	0x9B01    LDR	R3, [SP, #4]
0x1544	0xB2DB    UXTB	R3, R3
0x1546	0x3301    ADDS	R3, #1
0x1548	0x9301    STR	R3, [SP, #4]
;ssd1306.c, 233 :: 		x_pos += 6;
0x154A	0x9B02    LDR	R3, [SP, #8]
0x154C	0xB2DB    UXTB	R3, R3
0x154E	0x3306    ADDS	R3, #6
0x1550	0x9302    STR	R3, [SP, #8]
;ssd1306.c, 234 :: 		}
0x1552	0xE7C4    B	L_OLED_print_string35
L_OLED_print_string36:
;ssd1306.c, 235 :: 		}
L_end_OLED_print_string:
0x1554	0xB005    ADD	SP, SP, #20
0x1556	0xBD00    POP	(R15)
0x1558	0x21840000  	_font_regular+0
; end of _OLED_print_string
_OLED_print_float:
;ssd1306.c, 393 :: 		void OLED_print_float(unsigned char x_pos, unsigned char y_pos, float value, unsigned char points)
0x10A0	0xB500    PUSH	(R14)
0x10A2	0xB086    SUB	SP, SP, #24
0x10A4	0x9001    STR	R0, [SP, #4]
0x10A6	0x9102    STR	R1, [SP, #8]
0x10A8	0x9203    STR	R2, [SP, #12]
0x10AA	0x9304    STR	R3, [SP, #16]
;ssd1306.c, 395 :: 		signed long tmp = 0x00;
;ssd1306.c, 397 :: 		tmp = value;
0x10AC	0x9803    LDR	R0, [SP, #12]
0x10AE	0xF7FFFAB9  BL	__FloatToSignedIntegral+0
0x10B2	0x9000    STR	R0, [SP, #0]
;ssd1306.c, 398 :: 		OLED_print_int(x_pos, y_pos, tmp);
0x10B4	0x4602    MOV	R2, R0
0x10B6	0x9902    LDR	R1, [SP, #8]
0x10B8	0xB2C9    UXTB	R1, R1
0x10BA	0x9801    LDR	R0, [SP, #4]
0x10BC	0xB2C0    UXTB	R0, R0
0x10BE	0xF7FFFC9B  BL	_OLED_print_int+0
;ssd1306.c, 399 :: 		tmp = ((value - tmp) * 10000);
0x10C2	0x9800    LDR	R0, [SP, #0]
0x10C4	0xF7FFFAA0  BL	__SignedIntegralToFloat+0
0x10C8	0x9005    STR	R0, [SP, #20]
0x10CA	0x9005    STR	R0, [SP, #20]
0x10CC	0x9A05    LDR	R2, [SP, #20]
0x10CE	0x9803    LDR	R0, [SP, #12]
0x10D0	0xF7FFFAC4  BL	__Sub_FP+0
0x10D4	0x4A5D    LDR	R2, [PC, #372]
0x10D6	0xF000FA4B  BL	__Mul_FP+0
0x10DA	0xF7FFFAA3  BL	__FloatToSignedIntegral+0
0x10DE	0x9000    STR	R0, [SP, #0]
;ssd1306.c, 401 :: 		if(tmp < 0)
0x10E0	0x2800    CMP	R0, #0
0x10E2	0xDA02    BGE	L_OLED_print_float73
;ssd1306.c, 403 :: 		tmp = -tmp;
0x10E4	0x9C00    LDR	R4, [SP, #0]
0x10E6	0x4264    RSBS	R4, R4, #0
0x10E8	0x9400    STR	R4, [SP, #0]
;ssd1306.c, 404 :: 		}
L_OLED_print_float73:
;ssd1306.c, 406 :: 		if((value >= 9999) && (value < 99999))
0x10EA	0x9A03    LDR	R2, [SP, #12]
0x10EC	0x4858    LDR	R0, [PC, #352]
0x10EE	0xF7FFFA59  BL	__Compare_FP+0
0x10F2	0xDC01    BGT	L__OLED_print_float262
0x10F4	0x2001    MOVS	R0, #1
0x10F6	0xE000    B	L__OLED_print_float263
L__OLED_print_float262:
0x10F8	0x2000    MOVS	R0, #0
L__OLED_print_float263:
0x10FA	0x2800    CMP	R0, #0
0x10FC	0xD015    BEQ	L__OLED_print_float237
0x10FE	0x9A03    LDR	R2, [SP, #12]
0x1100	0x4854    LDR	R0, [PC, #336]
0x1102	0xF7FFFA4F  BL	__Compare_FP+0
0x1106	0xDD01    BLE	L__OLED_print_float264
0x1108	0x2001    MOVS	R0, #1
0x110A	0xE000    B	L__OLED_print_float265
L__OLED_print_float264:
0x110C	0x2000    MOVS	R0, #0
L__OLED_print_float265:
0x110E	0x2800    CMP	R0, #0
0x1110	0xD00B    BEQ	L__OLED_print_float236
L__OLED_print_float235:
;ssd1306.c, 408 :: 		OLED_print_decimal((x_pos + 36), y_pos, tmp, points);
0x1112	0x9C01    LDR	R4, [SP, #4]
0x1114	0xB2E4    UXTB	R4, R4
0x1116	0x3424    ADDS	R4, #36
0x1118	0x9B04    LDR	R3, [SP, #16]
0x111A	0xB2DB    UXTB	R3, R3
0x111C	0x9A00    LDR	R2, [SP, #0]
0x111E	0x9902    LDR	R1, [SP, #8]
0x1120	0xB2C9    UXTB	R1, R1
0x1122	0xB2E0    UXTB	R0, R4
0x1124	0xF7FFFB86  BL	_OLED_print_decimal+0
;ssd1306.c, 409 :: 		}
0x1128	0xE08D    B	L_OLED_print_float77
;ssd1306.c, 406 :: 		if((value >= 9999) && (value < 99999))
L__OLED_print_float237:
L__OLED_print_float236:
;ssd1306.c, 410 :: 		else if((value >= 999) && (value < 9999))
0x112A	0x9A03    LDR	R2, [SP, #12]
0x112C	0x484A    LDR	R0, [PC, #296]
0x112E	0xF7FFFA39  BL	__Compare_FP+0
0x1132	0xDC01    BGT	L__OLED_print_float266
0x1134	0x2001    MOVS	R0, #1
0x1136	0xE000    B	L__OLED_print_float267
L__OLED_print_float266:
0x1138	0x2000    MOVS	R0, #0
L__OLED_print_float267:
0x113A	0x2800    CMP	R0, #0
0x113C	0xD015    BEQ	L__OLED_print_float239
0x113E	0x9A03    LDR	R2, [SP, #12]
0x1140	0x4843    LDR	R0, [PC, #268]
0x1142	0xF7FFFA2F  BL	__Compare_FP+0
0x1146	0xDD01    BLE	L__OLED_print_float268
0x1148	0x2001    MOVS	R0, #1
0x114A	0xE000    B	L__OLED_print_float269
L__OLED_print_float268:
0x114C	0x2000    MOVS	R0, #0
L__OLED_print_float269:
0x114E	0x2800    CMP	R0, #0
0x1150	0xD00B    BEQ	L__OLED_print_float238
L__OLED_print_float234:
;ssd1306.c, 412 :: 		OLED_print_decimal((x_pos + 30), y_pos, tmp, points);
0x1152	0x9C01    LDR	R4, [SP, #4]
0x1154	0xB2E4    UXTB	R4, R4
0x1156	0x341E    ADDS	R4, #30
0x1158	0x9B04    LDR	R3, [SP, #16]
0x115A	0xB2DB    UXTB	R3, R3
0x115C	0x9A00    LDR	R2, [SP, #0]
0x115E	0x9902    LDR	R1, [SP, #8]
0x1160	0xB2C9    UXTB	R1, R1
0x1162	0xB2E0    UXTB	R0, R4
0x1164	0xF7FFFB66  BL	_OLED_print_decimal+0
;ssd1306.c, 413 :: 		}
0x1168	0xE06D    B	L_OLED_print_float81
;ssd1306.c, 410 :: 		else if((value >= 999) && (value < 9999))
L__OLED_print_float239:
L__OLED_print_float238:
;ssd1306.c, 414 :: 		else if((value >= 99) && (value < 999))
0x116A	0x9A03    LDR	R2, [SP, #12]
0x116C	0x483B    LDR	R0, [PC, #236]
0x116E	0xF7FFFA19  BL	__Compare_FP+0
0x1172	0xDC01    BGT	L__OLED_print_float270
0x1174	0x2001    MOVS	R0, #1
0x1176	0xE000    B	L__OLED_print_float271
L__OLED_print_float270:
0x1178	0x2000    MOVS	R0, #0
L__OLED_print_float271:
0x117A	0x2800    CMP	R0, #0
0x117C	0xD015    BEQ	L__OLED_print_float241
0x117E	0x9A03    LDR	R2, [SP, #12]
0x1180	0x4835    LDR	R0, [PC, #212]
0x1182	0xF7FFFA0F  BL	__Compare_FP+0
0x1186	0xDD01    BLE	L__OLED_print_float272
0x1188	0x2001    MOVS	R0, #1
0x118A	0xE000    B	L__OLED_print_float273
L__OLED_print_float272:
0x118C	0x2000    MOVS	R0, #0
L__OLED_print_float273:
0x118E	0x2800    CMP	R0, #0
0x1190	0xD00B    BEQ	L__OLED_print_float240
L__OLED_print_float233:
;ssd1306.c, 416 :: 		OLED_print_decimal((x_pos + 24), y_pos, tmp, points);
0x1192	0x9C01    LDR	R4, [SP, #4]
0x1194	0xB2E4    UXTB	R4, R4
0x1196	0x3418    ADDS	R4, #24
0x1198	0x9B04    LDR	R3, [SP, #16]
0x119A	0xB2DB    UXTB	R3, R3
0x119C	0x9A00    LDR	R2, [SP, #0]
0x119E	0x9902    LDR	R1, [SP, #8]
0x11A0	0xB2C9    UXTB	R1, R1
0x11A2	0xB2E0    UXTB	R0, R4
0x11A4	0xF7FFFB46  BL	_OLED_print_decimal+0
;ssd1306.c, 417 :: 		}
0x11A8	0xE04D    B	L_OLED_print_float85
;ssd1306.c, 414 :: 		else if((value >= 99) && (value < 999))
L__OLED_print_float241:
L__OLED_print_float240:
;ssd1306.c, 418 :: 		else if((value >= 9) && (value < 99))
0x11AA	0x9A03    LDR	R2, [SP, #12]
0x11AC	0x482C    LDR	R0, [PC, #176]
0x11AE	0xF7FFF9F9  BL	__Compare_FP+0
0x11B2	0xDC01    BGT	L__OLED_print_float274
0x11B4	0x2001    MOVS	R0, #1
0x11B6	0xE000    B	L__OLED_print_float275
L__OLED_print_float274:
0x11B8	0x2000    MOVS	R0, #0
L__OLED_print_float275:
0x11BA	0x2800    CMP	R0, #0
0x11BC	0xD015    BEQ	L__OLED_print_float243
0x11BE	0x9A03    LDR	R2, [SP, #12]
0x11C0	0x4826    LDR	R0, [PC, #152]
0x11C2	0xF7FFF9EF  BL	__Compare_FP+0
0x11C6	0xDD01    BLE	L__OLED_print_float276
0x11C8	0x2001    MOVS	R0, #1
0x11CA	0xE000    B	L__OLED_print_float277
L__OLED_print_float276:
0x11CC	0x2000    MOVS	R0, #0
L__OLED_print_float277:
0x11CE	0x2800    CMP	R0, #0
0x11D0	0xD00B    BEQ	L__OLED_print_float242
L__OLED_print_float232:
;ssd1306.c, 420 :: 		OLED_print_decimal((x_pos + 18), y_pos, tmp, points);
0x11D2	0x9C01    LDR	R4, [SP, #4]
0x11D4	0xB2E4    UXTB	R4, R4
0x11D6	0x3412    ADDS	R4, #18
0x11D8	0x9B04    LDR	R3, [SP, #16]
0x11DA	0xB2DB    UXTB	R3, R3
0x11DC	0x9A00    LDR	R2, [SP, #0]
0x11DE	0x9902    LDR	R1, [SP, #8]
0x11E0	0xB2C9    UXTB	R1, R1
0x11E2	0xB2E0    UXTB	R0, R4
0x11E4	0xF7FFFB26  BL	_OLED_print_decimal+0
;ssd1306.c, 421 :: 		}
0x11E8	0xE02D    B	L_OLED_print_float89
;ssd1306.c, 418 :: 		else if((value >= 9) && (value < 99))
L__OLED_print_float243:
L__OLED_print_float242:
;ssd1306.c, 422 :: 		else if(value < 9)
0x11EA	0x9A03    LDR	R2, [SP, #12]
0x11EC	0x481C    LDR	R0, [PC, #112]
0x11EE	0xF7FFF9D9  BL	__Compare_FP+0
0x11F2	0xDD01    BLE	L__OLED_print_float278
0x11F4	0x2001    MOVS	R0, #1
0x11F6	0xE000    B	L__OLED_print_float279
L__OLED_print_float278:
0x11F8	0x2000    MOVS	R0, #0
L__OLED_print_float279:
0x11FA	0x2800    CMP	R0, #0
0x11FC	0xD023    BEQ	L_OLED_print_float90
;ssd1306.c, 424 :: 		OLED_print_decimal((x_pos + 12), y_pos, tmp, points);
0x11FE	0x9C01    LDR	R4, [SP, #4]
0x1200	0xB2E4    UXTB	R4, R4
0x1202	0x340C    ADDS	R4, #12
0x1204	0x9B04    LDR	R3, [SP, #16]
0x1206	0xB2DB    UXTB	R3, R3
0x1208	0x9A00    LDR	R2, [SP, #0]
0x120A	0x9902    LDR	R1, [SP, #8]
0x120C	0xB2C9    UXTB	R1, R1
0x120E	0xB2E0    UXTB	R0, R4
0x1210	0xF7FFFB10  BL	_OLED_print_decimal+0
;ssd1306.c, 425 :: 		if((value) < 0)
0x1214	0x9A03    LDR	R2, [SP, #12]
0x1216	0x2000    MOVS	R0, #0
0x1218	0xF7FFF9C4  BL	__Compare_FP+0
0x121C	0xDD01    BLE	L__OLED_print_float280
0x121E	0x2001    MOVS	R0, #1
0x1220	0xE000    B	L__OLED_print_float281
L__OLED_print_float280:
0x1222	0x2000    MOVS	R0, #0
L__OLED_print_float281:
0x1224	0x2800    CMP	R0, #0
0x1226	0xD007    BEQ	L_OLED_print_float91
;ssd1306.c, 427 :: 		OLED_print_char(x_pos, y_pos, '-');
0x1228	0x222D    MOVS	R2, #45
0x122A	0x9902    LDR	R1, [SP, #8]
0x122C	0xB2C9    UXTB	R1, R1
0x122E	0x9801    LDR	R0, [SP, #4]
0x1230	0xB2C0    UXTB	R0, R0
0x1232	0xF7FFFA67  BL	_OLED_print_char+0
;ssd1306.c, 428 :: 		}
0x1236	0xE006    B	L_OLED_print_float92
L_OLED_print_float91:
;ssd1306.c, 431 :: 		OLED_print_char(x_pos, y_pos, ' ');
0x1238	0x2220    MOVS	R2, #32
0x123A	0x9902    LDR	R1, [SP, #8]
0x123C	0xB2C9    UXTB	R1, R1
0x123E	0x9801    LDR	R0, [SP, #4]
0x1240	0xB2C0    UXTB	R0, R0
0x1242	0xF7FFFA5F  BL	_OLED_print_char+0
;ssd1306.c, 432 :: 		}
L_OLED_print_float92:
;ssd1306.c, 433 :: 		}
L_OLED_print_float90:
L_OLED_print_float89:
L_OLED_print_float85:
L_OLED_print_float81:
L_OLED_print_float77:
;ssd1306.c, 434 :: 		}
L_end_OLED_print_float:
0x1246	0xB006    ADD	SP, SP, #24
0x1248	0xBD00    POP	(R15)
0x124A	0xBF00    NOP
0x124C	0x4000461C  	#1176256512
0x1250	0x3C00461C  	#1176255488
0x1254	0x4F8047C3  	#1203982208
0x1258	0xC0004479  	#1148829696
0x125C	0x000042C6  	#1120272384
0x1260	0x00004110  	#1091567616
; end of _OLED_print_float
_OLED_print_int:
;ssd1306.c, 279 :: 		void OLED_print_int(unsigned char x_pos, unsigned char y_pos, signed long value)
0x09F8	0xB500    PUSH	(R14)
0x09FA	0xB083    SUB	SP, SP, #12
0x09FC	0x9000    STR	R0, [SP, #0]
0x09FE	0x9101    STR	R1, [SP, #4]
0x0A00	0x9202    STR	R2, [SP, #8]
;ssd1306.c, 281 :: 		unsigned char ch = 0x00;
;ssd1306.c, 283 :: 		if(value < 0)
0x0A02	0x9B02    LDR	R3, [SP, #8]
0x0A04	0x2B00    CMP	R3, #0
0x0A06	0xDA0A    BGE	L_OLED_print_int54
;ssd1306.c, 285 :: 		OLED_print_char(x_pos, y_pos, '-');
0x0A08	0x222D    MOVS	R2, #45
0x0A0A	0x9901    LDR	R1, [SP, #4]
0x0A0C	0xB2C9    UXTB	R1, R1
0x0A0E	0x9800    LDR	R0, [SP, #0]
0x0A10	0xB2C0    UXTB	R0, R0
0x0A12	0xF7FFFE77  BL	_OLED_print_char+0
;ssd1306.c, 286 :: 		value = -value;
0x0A16	0x9B02    LDR	R3, [SP, #8]
0x0A18	0x425B    RSBS	R3, R3, #0
0x0A1A	0x9302    STR	R3, [SP, #8]
;ssd1306.c, 287 :: 		}
0x0A1C	0xE006    B	L_OLED_print_int55
L_OLED_print_int54:
;ssd1306.c, 290 :: 		OLED_print_char(x_pos, y_pos,' ');
0x0A1E	0x2220    MOVS	R2, #32
0x0A20	0x9901    LDR	R1, [SP, #4]
0x0A22	0xB2C9    UXTB	R1, R1
0x0A24	0x9800    LDR	R0, [SP, #0]
0x0A26	0xB2C0    UXTB	R0, R0
0x0A28	0xF7FFFE6C  BL	_OLED_print_char+0
;ssd1306.c, 291 :: 		}
L_OLED_print_int55:
;ssd1306.c, 293 :: 		if(value > 9999)
0x0A2C	0x9C02    LDR	R4, [SP, #8]
0x0A2E	0x4BC8    LDR	R3, [PC, #800]
0x0A30	0x429C    CMP	R4, R3
0x0A32	0xDD5D    BLE	L_OLED_print_int56
;ssd1306.c, 295 :: 		ch = (value / 10000);
0x0A34	0x9802    LDR	R0, [SP, #8]
0x0A36	0x4AC7    LDR	R2, [PC, #796]
0x0A38	0xF7FFFE40  BL	__Div_32x32_S+0
;ssd1306.c, 296 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x0A3C	0xB2C3    UXTB	R3, R0
0x0A3E	0x461C    MOV	R4, R3
0x0A40	0x3430    ADDS	R4, #48
0x0A42	0x9B00    LDR	R3, [SP, #0]
0x0A44	0xB2DB    UXTB	R3, R3
0x0A46	0x3306    ADDS	R3, #6
0x0A48	0xB2E2    UXTB	R2, R4
0x0A4A	0x9901    LDR	R1, [SP, #4]
0x0A4C	0xB2C9    UXTB	R1, R1
0x0A4E	0xB2D8    UXTB	R0, R3
0x0A50	0xF7FFFE58  BL	_OLED_print_char+0
;ssd1306.c, 298 :: 		ch = ((value % 10000)/ 1000);
0x0A54	0x9802    LDR	R0, [SP, #8]
0x0A56	0x4ABF    LDR	R2, [PC, #764]
0x0A58	0xF7FFFE30  BL	__Div_32x32_S+0
0x0A5C	0x4610    MOV	R0, R2
0x0A5E	0x4ABE    LDR	R2, [PC, #760]
0x0A60	0xF7FFFE2C  BL	__Div_32x32_S+0
;ssd1306.c, 299 :: 		OLED_print_char((x_pos + 12), y_pos , (48 + ch));
0x0A64	0xB2C3    UXTB	R3, R0
0x0A66	0x461C    MOV	R4, R3
0x0A68	0x3430    ADDS	R4, #48
0x0A6A	0x9B00    LDR	R3, [SP, #0]
0x0A6C	0xB2DB    UXTB	R3, R3
0x0A6E	0x330C    ADDS	R3, #12
0x0A70	0xB2E2    UXTB	R2, R4
0x0A72	0x9901    LDR	R1, [SP, #4]
0x0A74	0xB2C9    UXTB	R1, R1
0x0A76	0xB2D8    UXTB	R0, R3
0x0A78	0xF7FFFE44  BL	_OLED_print_char+0
;ssd1306.c, 301 :: 		ch = ((value % 1000) / 100);
0x0A7C	0x9802    LDR	R0, [SP, #8]
0x0A7E	0x4AB6    LDR	R2, [PC, #728]
0x0A80	0xF7FFFE1C  BL	__Div_32x32_S+0
0x0A84	0x4610    MOV	R0, R2
0x0A86	0x2264    MOVS	R2, #100
0x0A88	0xF7FFFE18  BL	__Div_32x32_S+0
;ssd1306.c, 302 :: 		OLED_print_char((x_pos + 18), y_pos , (48 + ch));
0x0A8C	0xB2C3    UXTB	R3, R0
0x0A8E	0x461C    MOV	R4, R3
0x0A90	0x3430    ADDS	R4, #48
0x0A92	0x9B00    LDR	R3, [SP, #0]
0x0A94	0xB2DB    UXTB	R3, R3
0x0A96	0x3312    ADDS	R3, #18
0x0A98	0xB2E2    UXTB	R2, R4
0x0A9A	0x9901    LDR	R1, [SP, #4]
0x0A9C	0xB2C9    UXTB	R1, R1
0x0A9E	0xB2D8    UXTB	R0, R3
0x0AA0	0xF7FFFE30  BL	_OLED_print_char+0
;ssd1306.c, 304 :: 		ch = ((value % 100) / 10);
0x0AA4	0x9802    LDR	R0, [SP, #8]
0x0AA6	0x2264    MOVS	R2, #100
0x0AA8	0xF7FFFE08  BL	__Div_32x32_S+0
0x0AAC	0x4610    MOV	R0, R2
0x0AAE	0x220A    MOVS	R2, #10
0x0AB0	0xF7FFFE04  BL	__Div_32x32_S+0
;ssd1306.c, 305 :: 		OLED_print_char((x_pos + 24), y_pos , (48 + ch));
0x0AB4	0xB2C3    UXTB	R3, R0
0x0AB6	0x461C    MOV	R4, R3
0x0AB8	0x3430    ADDS	R4, #48
0x0ABA	0x9B00    LDR	R3, [SP, #0]
0x0ABC	0xB2DB    UXTB	R3, R3
0x0ABE	0x3318    ADDS	R3, #24
0x0AC0	0xB2E2    UXTB	R2, R4
0x0AC2	0x9901    LDR	R1, [SP, #4]
0x0AC4	0xB2C9    UXTB	R1, R1
0x0AC6	0xB2D8    UXTB	R0, R3
0x0AC8	0xF7FFFE1C  BL	_OLED_print_char+0
;ssd1306.c, 307 :: 		ch = (value % 10);
0x0ACC	0x9802    LDR	R0, [SP, #8]
0x0ACE	0x220A    MOVS	R2, #10
0x0AD0	0xF7FFFDF4  BL	__Div_32x32_S+0
0x0AD4	0x4610    MOV	R0, R2
;ssd1306.c, 308 :: 		OLED_print_char((x_pos + 30), y_pos , (48 + ch));
0x0AD6	0xB2C3    UXTB	R3, R0
0x0AD8	0x461C    MOV	R4, R3
0x0ADA	0x3430    ADDS	R4, #48
0x0ADC	0x9B00    LDR	R3, [SP, #0]
0x0ADE	0xB2DB    UXTB	R3, R3
0x0AE0	0x331E    ADDS	R3, #30
0x0AE2	0xB2E2    UXTB	R2, R4
0x0AE4	0x9901    LDR	R1, [SP, #4]
0x0AE6	0xB2C9    UXTB	R1, R1
0x0AE8	0xB2D8    UXTB	R0, R3
0x0AEA	0xF7FFFE0B  BL	_OLED_print_char+0
;ssd1306.c, 309 :: 		}
0x0AEE	0xE12D    B	L_OLED_print_int57
L_OLED_print_int56:
;ssd1306.c, 311 :: 		else if((value > 999) && (value <= 9999))
0x0AF0	0x9C02    LDR	R4, [SP, #8]
0x0AF2	0x4B9A    LDR	R3, [PC, #616]
0x0AF4	0x429C    CMP	R4, R3
0x0AF6	0xDD5A    BLE	L__OLED_print_int227
0x0AF8	0x9C02    LDR	R4, [SP, #8]
0x0AFA	0x4B95    LDR	R3, [PC, #596]
0x0AFC	0x429C    CMP	R4, R3
0x0AFE	0xDC56    BGT	L__OLED_print_int226
L__OLED_print_int225:
;ssd1306.c, 313 :: 		ch = ((value % 10000)/ 1000);
0x0B00	0x9802    LDR	R0, [SP, #8]
0x0B02	0x4A94    LDR	R2, [PC, #592]
0x0B04	0xF7FFFDDA  BL	__Div_32x32_S+0
0x0B08	0x4610    MOV	R0, R2
0x0B0A	0x4A93    LDR	R2, [PC, #588]
0x0B0C	0xF7FFFDD6  BL	__Div_32x32_S+0
;ssd1306.c, 314 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x0B10	0xB2C3    UXTB	R3, R0
0x0B12	0x461C    MOV	R4, R3
0x0B14	0x3430    ADDS	R4, #48
0x0B16	0x9B00    LDR	R3, [SP, #0]
0x0B18	0xB2DB    UXTB	R3, R3
0x0B1A	0x3306    ADDS	R3, #6
0x0B1C	0xB2E2    UXTB	R2, R4
0x0B1E	0x9901    LDR	R1, [SP, #4]
0x0B20	0xB2C9    UXTB	R1, R1
0x0B22	0xB2D8    UXTB	R0, R3
0x0B24	0xF7FFFDEE  BL	_OLED_print_char+0
;ssd1306.c, 316 :: 		ch = ((value % 1000) / 100);
0x0B28	0x9802    LDR	R0, [SP, #8]
0x0B2A	0x4A8B    LDR	R2, [PC, #556]
0x0B2C	0xF7FFFDC6  BL	__Div_32x32_S+0
0x0B30	0x4610    MOV	R0, R2
0x0B32	0x2264    MOVS	R2, #100
0x0B34	0xF7FFFDC2  BL	__Div_32x32_S+0
;ssd1306.c, 317 :: 		OLED_print_char((x_pos + 12), y_pos , (48 + ch));
0x0B38	0xB2C3    UXTB	R3, R0
0x0B3A	0x461C    MOV	R4, R3
0x0B3C	0x3430    ADDS	R4, #48
0x0B3E	0x9B00    LDR	R3, [SP, #0]
0x0B40	0xB2DB    UXTB	R3, R3
0x0B42	0x330C    ADDS	R3, #12
0x0B44	0xB2E2    UXTB	R2, R4
0x0B46	0x9901    LDR	R1, [SP, #4]
0x0B48	0xB2C9    UXTB	R1, R1
0x0B4A	0xB2D8    UXTB	R0, R3
0x0B4C	0xF7FFFDDA  BL	_OLED_print_char+0
;ssd1306.c, 319 :: 		ch = ((value % 100) / 10);
0x0B50	0x9802    LDR	R0, [SP, #8]
0x0B52	0x2264    MOVS	R2, #100
0x0B54	0xF7FFFDB2  BL	__Div_32x32_S+0
0x0B58	0x4610    MOV	R0, R2
0x0B5A	0x220A    MOVS	R2, #10
0x0B5C	0xF7FFFDAE  BL	__Div_32x32_S+0
;ssd1306.c, 320 :: 		OLED_print_char((x_pos + 18), y_pos , (48 + ch));
0x0B60	0xB2C3    UXTB	R3, R0
0x0B62	0x461C    MOV	R4, R3
0x0B64	0x3430    ADDS	R4, #48
0x0B66	0x9B00    LDR	R3, [SP, #0]
0x0B68	0xB2DB    UXTB	R3, R3
0x0B6A	0x3312    ADDS	R3, #18
0x0B6C	0xB2E2    UXTB	R2, R4
0x0B6E	0x9901    LDR	R1, [SP, #4]
0x0B70	0xB2C9    UXTB	R1, R1
0x0B72	0xB2D8    UXTB	R0, R3
0x0B74	0xF7FFFDC6  BL	_OLED_print_char+0
;ssd1306.c, 322 :: 		ch = (value % 10);
0x0B78	0x9802    LDR	R0, [SP, #8]
0x0B7A	0x220A    MOVS	R2, #10
0x0B7C	0xF7FFFD9E  BL	__Div_32x32_S+0
0x0B80	0x4610    MOV	R0, R2
;ssd1306.c, 323 :: 		OLED_print_char((x_pos + 24), y_pos , (48 + ch));
0x0B82	0xB2C3    UXTB	R3, R0
0x0B84	0x461C    MOV	R4, R3
0x0B86	0x3430    ADDS	R4, #48
0x0B88	0x9B00    LDR	R3, [SP, #0]
0x0B8A	0xB2DB    UXTB	R3, R3
0x0B8C	0x3318    ADDS	R3, #24
0x0B8E	0xB2E2    UXTB	R2, R4
0x0B90	0x9901    LDR	R1, [SP, #4]
0x0B92	0xB2C9    UXTB	R1, R1
0x0B94	0xB2D8    UXTB	R0, R3
0x0B96	0xF7FFFDB5  BL	_OLED_print_char+0
;ssd1306.c, 324 :: 		OLED_print_char((x_pos + 30), y_pos , 32);
0x0B9A	0x9B00    LDR	R3, [SP, #0]
0x0B9C	0xB2DB    UXTB	R3, R3
0x0B9E	0x331E    ADDS	R3, #30
0x0BA0	0x2220    MOVS	R2, #32
0x0BA2	0x9901    LDR	R1, [SP, #4]
0x0BA4	0xB2C9    UXTB	R1, R1
0x0BA6	0xB2D8    UXTB	R0, R3
0x0BA8	0xF7FFFDAC  BL	_OLED_print_char+0
;ssd1306.c, 325 :: 		}
0x0BAC	0xE0CE    B	L_OLED_print_int61
;ssd1306.c, 311 :: 		else if((value > 999) && (value <= 9999))
L__OLED_print_int227:
L__OLED_print_int226:
;ssd1306.c, 326 :: 		else if((value > 99) && (value <= 999))
0x0BAE	0x9B02    LDR	R3, [SP, #8]
0x0BB0	0x2B63    CMP	R3, #99
0x0BB2	0xDD4F    BLE	L__OLED_print_int229
0x0BB4	0x9C02    LDR	R4, [SP, #8]
0x0BB6	0x4B69    LDR	R3, [PC, #420]
0x0BB8	0x429C    CMP	R4, R3
0x0BBA	0xDC4B    BGT	L__OLED_print_int228
L__OLED_print_int224:
;ssd1306.c, 328 :: 		ch = ((value % 1000) / 100);
0x0BBC	0x9802    LDR	R0, [SP, #8]
0x0BBE	0x4A66    LDR	R2, [PC, #408]
0x0BC0	0xF7FFFD7C  BL	__Div_32x32_S+0
0x0BC4	0x4610    MOV	R0, R2
0x0BC6	0x2264    MOVS	R2, #100
0x0BC8	0xF7FFFD78  BL	__Div_32x32_S+0
;ssd1306.c, 329 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x0BCC	0xB2C3    UXTB	R3, R0
0x0BCE	0x461C    MOV	R4, R3
0x0BD0	0x3430    ADDS	R4, #48
0x0BD2	0x9B00    LDR	R3, [SP, #0]
0x0BD4	0xB2DB    UXTB	R3, R3
0x0BD6	0x3306    ADDS	R3, #6
0x0BD8	0xB2E2    UXTB	R2, R4
0x0BDA	0x9901    LDR	R1, [SP, #4]
0x0BDC	0xB2C9    UXTB	R1, R1
0x0BDE	0xB2D8    UXTB	R0, R3
0x0BE0	0xF7FFFD90  BL	_OLED_print_char+0
;ssd1306.c, 331 :: 		ch = ((value % 100) / 10);
0x0BE4	0x9802    LDR	R0, [SP, #8]
0x0BE6	0x2264    MOVS	R2, #100
0x0BE8	0xF7FFFD68  BL	__Div_32x32_S+0
0x0BEC	0x4610    MOV	R0, R2
0x0BEE	0x220A    MOVS	R2, #10
0x0BF0	0xF7FFFD64  BL	__Div_32x32_S+0
;ssd1306.c, 332 :: 		OLED_print_char((x_pos + 12), y_pos , (48 + ch));
0x0BF4	0xB2C3    UXTB	R3, R0
0x0BF6	0x461C    MOV	R4, R3
0x0BF8	0x3430    ADDS	R4, #48
0x0BFA	0x9B00    LDR	R3, [SP, #0]
0x0BFC	0xB2DB    UXTB	R3, R3
0x0BFE	0x330C    ADDS	R3, #12
0x0C00	0xB2E2    UXTB	R2, R4
0x0C02	0x9901    LDR	R1, [SP, #4]
0x0C04	0xB2C9    UXTB	R1, R1
0x0C06	0xB2D8    UXTB	R0, R3
0x0C08	0xF7FFFD7C  BL	_OLED_print_char+0
;ssd1306.c, 334 :: 		ch = (value % 10);
0x0C0C	0x9802    LDR	R0, [SP, #8]
0x0C0E	0x220A    MOVS	R2, #10
0x0C10	0xF7FFFD54  BL	__Div_32x32_S+0
0x0C14	0x4610    MOV	R0, R2
;ssd1306.c, 335 :: 		OLED_print_char((x_pos + 18), y_pos , (48 + ch));
0x0C16	0xB2C3    UXTB	R3, R0
0x0C18	0x461C    MOV	R4, R3
0x0C1A	0x3430    ADDS	R4, #48
0x0C1C	0x9B00    LDR	R3, [SP, #0]
0x0C1E	0xB2DB    UXTB	R3, R3
0x0C20	0x3312    ADDS	R3, #18
0x0C22	0xB2E2    UXTB	R2, R4
0x0C24	0x9901    LDR	R1, [SP, #4]
0x0C26	0xB2C9    UXTB	R1, R1
0x0C28	0xB2D8    UXTB	R0, R3
0x0C2A	0xF7FFFD6B  BL	_OLED_print_char+0
;ssd1306.c, 336 :: 		OLED_print_char((x_pos + 24), y_pos , 32);
0x0C2E	0x9B00    LDR	R3, [SP, #0]
0x0C30	0xB2DB    UXTB	R3, R3
0x0C32	0x3318    ADDS	R3, #24
0x0C34	0x2220    MOVS	R2, #32
0x0C36	0x9901    LDR	R1, [SP, #4]
0x0C38	0xB2C9    UXTB	R1, R1
0x0C3A	0xB2D8    UXTB	R0, R3
0x0C3C	0xF7FFFD62  BL	_OLED_print_char+0
;ssd1306.c, 337 :: 		OLED_print_char((x_pos + 30), y_pos , 32);
0x0C40	0x9B00    LDR	R3, [SP, #0]
0x0C42	0xB2DB    UXTB	R3, R3
0x0C44	0x331E    ADDS	R3, #30
0x0C46	0x2220    MOVS	R2, #32
0x0C48	0x9901    LDR	R1, [SP, #4]
0x0C4A	0xB2C9    UXTB	R1, R1
0x0C4C	0xB2D8    UXTB	R0, R3
0x0C4E	0xF7FFFD59  BL	_OLED_print_char+0
;ssd1306.c, 338 :: 		}
0x0C52	0xE07B    B	L_OLED_print_int65
;ssd1306.c, 326 :: 		else if((value > 99) && (value <= 999))
L__OLED_print_int229:
L__OLED_print_int228:
;ssd1306.c, 339 :: 		else if((value > 9) && (value <= 99))
0x0C54	0x9B02    LDR	R3, [SP, #8]
0x0C56	0x2B09    CMP	R3, #9
0x0C58	0xDD43    BLE	L__OLED_print_int231
0x0C5A	0x9B02    LDR	R3, [SP, #8]
0x0C5C	0x2B63    CMP	R3, #99
0x0C5E	0xDC40    BGT	L__OLED_print_int230
L__OLED_print_int223:
;ssd1306.c, 341 :: 		ch = ((value % 100) / 10);
0x0C60	0x9802    LDR	R0, [SP, #8]
0x0C62	0x2264    MOVS	R2, #100
0x0C64	0xF7FFFD2A  BL	__Div_32x32_S+0
0x0C68	0x4610    MOV	R0, R2
0x0C6A	0x220A    MOVS	R2, #10
0x0C6C	0xF7FFFD26  BL	__Div_32x32_S+0
;ssd1306.c, 342 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x0C70	0xB2C3    UXTB	R3, R0
0x0C72	0x461C    MOV	R4, R3
0x0C74	0x3430    ADDS	R4, #48
0x0C76	0x9B00    LDR	R3, [SP, #0]
0x0C78	0xB2DB    UXTB	R3, R3
0x0C7A	0x3306    ADDS	R3, #6
0x0C7C	0xB2E2    UXTB	R2, R4
0x0C7E	0x9901    LDR	R1, [SP, #4]
0x0C80	0xB2C9    UXTB	R1, R1
0x0C82	0xB2D8    UXTB	R0, R3
0x0C84	0xF7FFFD3E  BL	_OLED_print_char+0
;ssd1306.c, 344 :: 		ch = (value % 10);
0x0C88	0x9802    LDR	R0, [SP, #8]
0x0C8A	0x220A    MOVS	R2, #10
0x0C8C	0xF7FFFD16  BL	__Div_32x32_S+0
0x0C90	0x4610    MOV	R0, R2
;ssd1306.c, 345 :: 		OLED_print_char((x_pos + 12), y_pos , (48 + ch));
0x0C92	0xB2C3    UXTB	R3, R0
0x0C94	0x461C    MOV	R4, R3
0x0C96	0x3430    ADDS	R4, #48
0x0C98	0x9B00    LDR	R3, [SP, #0]
0x0C9A	0xB2DB    UXTB	R3, R3
0x0C9C	0x330C    ADDS	R3, #12
0x0C9E	0xB2E2    UXTB	R2, R4
0x0CA0	0x9901    LDR	R1, [SP, #4]
0x0CA2	0xB2C9    UXTB	R1, R1
0x0CA4	0xB2D8    UXTB	R0, R3
0x0CA6	0xF7FFFD2D  BL	_OLED_print_char+0
;ssd1306.c, 347 :: 		OLED_print_char((x_pos + 18), y_pos , 32);
0x0CAA	0x9B00    LDR	R3, [SP, #0]
0x0CAC	0xB2DB    UXTB	R3, R3
0x0CAE	0x3312    ADDS	R3, #18
0x0CB0	0x2220    MOVS	R2, #32
0x0CB2	0x9901    LDR	R1, [SP, #4]
0x0CB4	0xB2C9    UXTB	R1, R1
0x0CB6	0xB2D8    UXTB	R0, R3
0x0CB8	0xF7FFFD24  BL	_OLED_print_char+0
;ssd1306.c, 348 :: 		OLED_print_char((x_pos + 24), y_pos , 32);
0x0CBC	0x9B00    LDR	R3, [SP, #0]
0x0CBE	0xB2DB    UXTB	R3, R3
0x0CC0	0x3318    ADDS	R3, #24
0x0CC2	0x2220    MOVS	R2, #32
0x0CC4	0x9901    LDR	R1, [SP, #4]
0x0CC6	0xB2C9    UXTB	R1, R1
0x0CC8	0xB2D8    UXTB	R0, R3
0x0CCA	0xF7FFFD1B  BL	_OLED_print_char+0
;ssd1306.c, 349 :: 		OLED_print_char((x_pos + 30), y_pos , 32);
0x0CCE	0x9B00    LDR	R3, [SP, #0]
0x0CD0	0xB2DB    UXTB	R3, R3
0x0CD2	0x331E    ADDS	R3, #30
0x0CD4	0x2220    MOVS	R2, #32
0x0CD6	0x9901    LDR	R1, [SP, #4]
0x0CD8	0xB2C9    UXTB	R1, R1
0x0CDA	0xB2D8    UXTB	R0, R3
0x0CDC	0xF7FFFD12  BL	_OLED_print_char+0
;ssd1306.c, 350 :: 		}
0x0CE0	0xE034    B	L_OLED_print_int69
;ssd1306.c, 339 :: 		else if((value > 9) && (value <= 99))
L__OLED_print_int231:
L__OLED_print_int230:
;ssd1306.c, 353 :: 		ch = (value % 10);
0x0CE2	0x9802    LDR	R0, [SP, #8]
0x0CE4	0x220A    MOVS	R2, #10
0x0CE6	0xF7FFFCE9  BL	__Div_32x32_S+0
0x0CEA	0x4610    MOV	R0, R2
;ssd1306.c, 354 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x0CEC	0xB2C3    UXTB	R3, R0
0x0CEE	0x461C    MOV	R4, R3
0x0CF0	0x3430    ADDS	R4, #48
0x0CF2	0x9B00    LDR	R3, [SP, #0]
0x0CF4	0xB2DB    UXTB	R3, R3
0x0CF6	0x3306    ADDS	R3, #6
0x0CF8	0xB2E2    UXTB	R2, R4
0x0CFA	0x9901    LDR	R1, [SP, #4]
0x0CFC	0xB2C9    UXTB	R1, R1
0x0CFE	0xB2D8    UXTB	R0, R3
0x0D00	0xF7FFFD00  BL	_OLED_print_char+0
;ssd1306.c, 355 :: 		OLED_print_char((x_pos + 12), y_pos , 32);
0x0D04	0x9B00    LDR	R3, [SP, #0]
0x0D06	0xB2DB    UXTB	R3, R3
0x0D08	0x330C    ADDS	R3, #12
0x0D0A	0x2220    MOVS	R2, #32
0x0D0C	0x9901    LDR	R1, [SP, #4]
0x0D0E	0xB2C9    UXTB	R1, R1
0x0D10	0xB2D8    UXTB	R0, R3
0x0D12	0xF7FFFCF7  BL	_OLED_print_char+0
;ssd1306.c, 356 :: 		OLED_print_char((x_pos + 18), y_pos , 32);
0x0D16	0x9B00    LDR	R3, [SP, #0]
0x0D18	0xB2DB    UXTB	R3, R3
0x0D1A	0x3312    ADDS	R3, #18
0x0D1C	0x2220    MOVS	R2, #32
0x0D1E	0x9901    LDR	R1, [SP, #4]
0x0D20	0xB2C9    UXTB	R1, R1
0x0D22	0xB2D8    UXTB	R0, R3
0x0D24	0xF7FFFCEE  BL	_OLED_print_char+0
;ssd1306.c, 357 :: 		OLED_print_char((x_pos + 24), y_pos , 32);
0x0D28	0x9B00    LDR	R3, [SP, #0]
0x0D2A	0xB2DB    UXTB	R3, R3
0x0D2C	0x3318    ADDS	R3, #24
0x0D2E	0x2220    MOVS	R2, #32
0x0D30	0x9901    LDR	R1, [SP, #4]
0x0D32	0xB2C9    UXTB	R1, R1
0x0D34	0xB2D8    UXTB	R0, R3
0x0D36	0xF7FFFCE5  BL	_OLED_print_char+0
;ssd1306.c, 358 :: 		OLED_print_char((x_pos + 30), y_pos , 32);
0x0D3A	0x9B00    LDR	R3, [SP, #0]
0x0D3C	0xB2DB    UXTB	R3, R3
0x0D3E	0x331E    ADDS	R3, #30
0x0D40	0x2220    MOVS	R2, #32
0x0D42	0x9901    LDR	R1, [SP, #4]
0x0D44	0xB2C9    UXTB	R1, R1
0x0D46	0xB2D8    UXTB	R0, R3
0x0D48	0xF7FFFCDC  BL	_OLED_print_char+0
;ssd1306.c, 359 :: 		}
L_OLED_print_int69:
L_OLED_print_int65:
L_OLED_print_int61:
L_OLED_print_int57:
;ssd1306.c, 360 :: 		}
L_end_OLED_print_int:
0x0D4C	0xB003    ADD	SP, SP, #12
0x0D4E	0xBD00    POP	(R15)
0x0D50	0x270F0000  	#9999
0x0D54	0x27100000  	#10000
0x0D58	0x03E80000  	#1000
0x0D5C	0x03E70000  	#999
; end of _OLED_print_int
_OLED_print_char:
;ssd1306.c, 189 :: 		void OLED_print_char(unsigned char x_pos, unsigned char y_pos, unsigned char ch)
; ch start address is: 8 (R2)
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
0x0704	0xB500    PUSH	(R14)
; ch end address is: 8 (R2)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
; x_pos start address is: 0 (R0)
; y_pos start address is: 4 (R1)
; ch start address is: 8 (R2)
;ssd1306.c, 191 :: 		unsigned char chr = 0x00;
;ssd1306.c, 192 :: 		unsigned char s = 0x00;
;ssd1306.c, 194 :: 		chr = (ch - 32);
0x0706	0x4613    MOV	R3, R2
0x0708	0x3B20    SUBS	R3, #32
; ch end address is: 8 (R2)
; chr start address is: 28 (R7)
0x070A	0xB2DF    UXTB	R7, R3
;ssd1306.c, 196 :: 		if(x_pos > (x_max - 6))
0x070C	0x287A    CMP	R0, #122
0x070E	0xD903    BLS	L__OLED_print_char213
;ssd1306.c, 198 :: 		x_pos = 0;
0x0710	0x2000    MOVS	R0, #0
;ssd1306.c, 199 :: 		y_pos++;
0x0712	0x3101    ADDS	R1, #1
0x0714	0xB2C9    UXTB	R1, R1
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
;ssd1306.c, 200 :: 		}
0x0716	0xE7FF    B	L_OLED_print_char31
L__OLED_print_char213:
;ssd1306.c, 196 :: 		if(x_pos > (x_max - 6))
;ssd1306.c, 200 :: 		}
L_OLED_print_char31:
;ssd1306.c, 201 :: 		OLED_gotoxy(x_pos, y_pos);
; y_pos start address is: 4 (R1)
; x_pos start address is: 0 (R0)
; y_pos end address is: 4 (R1)
; x_pos end address is: 0 (R0)
0x0718	0xF000F872  BL	_OLED_gotoxy+0
;ssd1306.c, 203 :: 		for(s = 0x00; s < 0x06; s++)
; s start address is: 0 (R0)
0x071C	0x2000    MOVS	R0, #0
; chr end address is: 28 (R7)
; s end address is: 0 (R0)
0x071E	0xB2FE    UXTB	R6, R7
0x0720	0xB2C7    UXTB	R7, R0
L_OLED_print_char32:
; s start address is: 28 (R7)
; chr start address is: 24 (R6)
; chr start address is: 24 (R6)
; chr end address is: 24 (R6)
0x0722	0x2F06    CMP	R7, #6
0x0724	0xD20D    BCS	L_OLED_print_char33
; chr end address is: 24 (R6)
;ssd1306.c, 205 :: 		OLED_write(font_regular[chr][s], DAT);
; chr start address is: 24 (R6)
0x0726	0x2306    MOVS	R3, #6
0x0728	0x4634    MOV	R4, R6
0x072A	0x435C    MULS	R4, R3, R4
0x072C	0x4B05    LDR	R3, [PC, #20]
0x072E	0x191B    ADDS	R3, R3, R4
0x0730	0x19DB    ADDS	R3, R3, R7
0x0732	0x781B    LDRB	R3, [R3, #0]
0x0734	0x2101    MOVS	R1, #1
0x0736	0xB2D8    UXTB	R0, R3
0x0738	0xF000F82E  BL	_OLED_write+0
;ssd1306.c, 203 :: 		for(s = 0x00; s < 0x06; s++)
0x073C	0x3701    ADDS	R7, #1
0x073E	0xB2FF    UXTB	R7, R7
;ssd1306.c, 206 :: 		}
; chr end address is: 24 (R6)
; s end address is: 28 (R7)
0x0740	0xE7EF    B	L_OLED_print_char32
L_OLED_print_char33:
;ssd1306.c, 207 :: 		}
L_end_OLED_print_char:
0x0742	0xBD00    POP	(R15)
0x0744	0x21840000  	_font_regular+0
; end of _OLED_print_char
__Div_32x32_S:
;__Lib_Math.c, 316 :: 		
0x06BC	0xB500    PUSH	(R14)
;__Lib_Math.c, 318 :: 		
0x06BE	0xB47A    PUSH	(R1, R3, R4, R5, R6)
;__Lib_Math.c, 322 :: 		
0x06C0	0x0014    MOVS	R4, R2
;__Lib_Math.c, 323 :: 		
0x06C2	0xD105    BNE	_Div_32x32_S_Lab_5
;__Lib_Math.c, 325 :: 		
0x06C4	0x0002    MOVS	R2, R0
;__Lib_Math.c, 326 :: 		
0x06C6	0xD501    BPL	_Div_32x32_S_Lab_6
;__Lib_Math.c, 328 :: 		
0x06C8	0x480B    LDR	R0, [PC, #44]
;__Lib_Math.c, 329 :: 		
0x06CA	0xE013    B	_Div_32x32_S_Lab_4
;__Lib_Math.c, 331 :: 		
_Div_32x32_S_Lab_6:
;__Lib_Math.c, 332 :: 		
0x06CC	0x480B    LDR	R0, [PC, #44]
;__Lib_Math.c, 333 :: 		
0x06CE	0xE011    B	_Div_32x32_S_Lab_4
;__Lib_Math.c, 337 :: 		
_Div_32x32_S_Lab_5:
;__Lib_Math.c, 338 :: 		
0x06D0	0x2400    MOVS	R4, #0
;__Lib_Math.c, 339 :: 		
0x06D2	0x4625    MOV	R5, R4
;__Lib_Math.c, 340 :: 		
0x06D4	0x2800    CMP	R0, #0
;__Lib_Math.c, 341 :: 		
0x06D6	0xDA01    BGE	_Div_32x32_S_Lab_1
;__Lib_Math.c, 342 :: 		
0x06D8	0x2401    MOVS	R4, #1
;__Lib_Math.c, 343 :: 		
0x06DA	0x4240    RSBS	R0, R0, #0
;__Lib_Math.c, 345 :: 		
_Div_32x32_S_Lab_1:
;__Lib_Math.c, 346 :: 		
0x06DC	0x2A00    CMP	R2, #0
;__Lib_Math.c, 347 :: 		
0x06DE	0xDA01    BGE	_Div_32x32_S_Lab_2
;__Lib_Math.c, 348 :: 		
0x06E0	0x2501    MOVS	R5, #1
;__Lib_Math.c, 349 :: 		
0x06E2	0x4252    RSBS	R2, R2, #0
;__Lib_Math.c, 351 :: 		
_Div_32x32_S_Lab_2:
;__Lib_Math.c, 352 :: 		
0x06E4	0xF7FFFF08  BL	__Div_32x32_U+0
;__Lib_Math.c, 353 :: 		
0x06E8	0x42AC    CMP	R4, R5
;__Lib_Math.c, 354 :: 		
0x06EA	0xD000    BEQ	_Div_32x32_S_Lab_3
;__Lib_Math.c, 355 :: 		
0x06EC	0x4240    RSBS	R0, R0, #0
;__Lib_Math.c, 357 :: 		
_Div_32x32_S_Lab_3:
;__Lib_Math.c, 358 :: 		
0x06EE	0x2C00    CMP	R4, #0
;__Lib_Math.c, 359 :: 		
0x06F0	0xD000    BEQ	_Div_32x32_S_Lab_4
;__Lib_Math.c, 360 :: 		
0x06F2	0x4252    RSBS	R2, R2, #0
;__Lib_Math.c, 361 :: 		
_Div_32x32_S_Lab_4:
;__Lib_Math.c, 362 :: 		
0x06F4	0xBC7A    POP	(R1, R3, R4, R5, R6)
;__Lib_Math.c, 363 :: 		
0x06F6	0xE004    B	#8
0x06F8	0x00008000  	#-2147483648
0x06FC	0xFFFF7FFF  	#2147483647
0x0700	0xBF00    NOP
;__Lib_Math.c, 364 :: 		
L_end__Div_32x32_S:
0x0702	0xBD00    POP	(R15)
; end of __Div_32x32_S
__Div_32x32_U:
;__Lib_Math.c, 267 :: 		
0x04F8	0xB081    SUB	SP, SP, #4
;__Lib_Math.c, 269 :: 		
0x04FA	0xB43A    PUSH	(R1, R3, R4, R5)
;__Lib_Math.c, 272 :: 		
0x04FC	0x0014    MOVS	R4, R2
;__Lib_Math.c, 273 :: 		
0x04FE	0xD102    BNE	_Div_32x32_U_Lab_3
;__Lib_Math.c, 275 :: 		
0x0500	0x4602    MOV	R2, R0
;__Lib_Math.c, 276 :: 		
0x0502	0x480C    LDR	R0, [PC, #48]
;__Lib_Math.c, 277 :: 		
0x0504	0xE013    B	_Div_32x32_U_Lab_end
;__Lib_Math.c, 281 :: 		
_Div_32x32_U_Lab_3:
;__Lib_Math.c, 282 :: 		
0x0506	0x4613    MOV	R3, R2
;__Lib_Math.c, 283 :: 		
0x0508	0x4602    MOV	R2, R0
;__Lib_Math.c, 284 :: 		
0x050A	0x2000    MOVS	R0, #0
;__Lib_Math.c, 285 :: 		
0x050C	0x2120    MOVS	R1, #32
;__Lib_Math.c, 286 :: 		
0x050E	0x2401    MOVS	R4, #1
;__Lib_Math.c, 287 :: 		
0x0510	0xE009    B	_Div_32x32_U_Lab_1
;__Lib_Math.c, 289 :: 		
_Div_32x32_U_Lab_2:
;__Lib_Math.c, 290 :: 		
0x0512	0x4615    MOV	R5, R2
;__Lib_Math.c, 291 :: 		
0x0514	0x40CD    LSRS	R5, R1
;__Lib_Math.c, 292 :: 		
0x0516	0x429D    CMP	R5, R3
;__Lib_Math.c, 293 :: 		
0x0518	0xD305    BCC	_Div_32x32_U_Lab_1
;__Lib_Math.c, 294 :: 		
0x051A	0x461D    MOV	R5, R3
;__Lib_Math.c, 295 :: 		
0x051C	0x408D    LSLS	R5, R1
;__Lib_Math.c, 296 :: 		
0x051E	0x1B52    SUBS	R2, R2, R5
;__Lib_Math.c, 297 :: 		
0x0520	0x4625    MOV	R5, R4
;__Lib_Math.c, 298 :: 		
0x0522	0x408D    LSLS	R5, R1
;__Lib_Math.c, 299 :: 		
0x0524	0x1940    ADDS	R0, R0, R5
;__Lib_Math.c, 301 :: 		
_Div_32x32_U_Lab_1:
;__Lib_Math.c, 302 :: 		
0x0526	0x460D    MOV	R5, R1
;__Lib_Math.c, 303 :: 		
0x0528	0x1E49    SUBS	R1, R1, #1
;__Lib_Math.c, 304 :: 		
0x052A	0x2D00    CMP	R5, #0
;__Lib_Math.c, 305 :: 		
0x052C	0xDCF1    BGT	_Div_32x32_U_Lab_2
;__Lib_Math.c, 307 :: 		
_Div_32x32_U_Lab_end:
;__Lib_Math.c, 308 :: 		
0x052E	0xBC3A    POP	(R1, R3, R4, R5)
;__Lib_Math.c, 309 :: 		
0x0530	0xE002    B	#4
0x0532	0xBF00    NOP
0x0534	0xFFFFFFFF  	#-1
;__Lib_Math.c, 310 :: 		
L_end__Div_32x32_U:
0x0538	0xB001    ADD	SP, SP, #4
0x053A	0x4770    BX	LR
; end of __Div_32x32_U
_OLED_print_decimal:
;ssd1306.c, 363 :: 		void OLED_print_decimal(unsigned char x_pos, unsigned char y_pos, unsigned int value, unsigned char points)
0x0834	0xB500    PUSH	(R14)
0x0836	0xB084    SUB	SP, SP, #16
0x0838	0x9000    STR	R0, [SP, #0]
0x083A	0x9101    STR	R1, [SP, #4]
0x083C	0x9202    STR	R2, [SP, #8]
0x083E	0x9303    STR	R3, [SP, #12]
;ssd1306.c, 365 :: 		unsigned char ch = 0x00;
;ssd1306.c, 367 :: 		OLED_print_char(x_pos, y_pos, '.');
0x0840	0x222E    MOVS	R2, #46
0x0842	0x9901    LDR	R1, [SP, #4]
0x0844	0xB2C9    UXTB	R1, R1
0x0846	0x9800    LDR	R0, [SP, #0]
0x0848	0xB2C0    UXTB	R0, R0
0x084A	0xF7FFFF5B  BL	_OLED_print_char+0
;ssd1306.c, 369 :: 		ch = (value / 1000);
0x084E	0x9802    LDR	R0, [SP, #8]
0x0850	0xB280    UXTH	R0, R0
0x0852	0x4A2D    LDR	R2, [PC, #180]
0x0854	0xF7FFFE50  BL	__Div_32x32_U+0
;ssd1306.c, 370 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x0858	0xB2C4    UXTB	R4, R0
0x085A	0x4625    MOV	R5, R4
0x085C	0x3530    ADDS	R5, #48
0x085E	0x9C00    LDR	R4, [SP, #0]
0x0860	0xB2E4    UXTB	R4, R4
0x0862	0x3406    ADDS	R4, #6
0x0864	0xB2EA    UXTB	R2, R5
0x0866	0x9901    LDR	R1, [SP, #4]
0x0868	0xB2C9    UXTB	R1, R1
0x086A	0xB2E0    UXTB	R0, R4
0x086C	0xF7FFFF4A  BL	_OLED_print_char+0
;ssd1306.c, 372 :: 		if(points > 1)
0x0870	0x9C03    LDR	R4, [SP, #12]
0x0872	0xB2E4    UXTB	R4, R4
0x0874	0x2C01    CMP	R4, #1
0x0876	0xD945    BLS	L_OLED_print_decimal70
;ssd1306.c, 374 :: 		ch = ((value % 1000) / 100);
0x0878	0x9802    LDR	R0, [SP, #8]
0x087A	0xB280    UXTH	R0, R0
0x087C	0x4A22    LDR	R2, [PC, #136]
0x087E	0xF7FFFE3B  BL	__Div_32x32_U+0
0x0882	0x4610    MOV	R0, R2
0x0884	0xB280    UXTH	R0, R0
0x0886	0x2264    MOVS	R2, #100
0x0888	0xF7FFFE36  BL	__Div_32x32_U+0
;ssd1306.c, 375 :: 		OLED_print_char((x_pos + 12), y_pos , (48 + ch));
0x088C	0xB2C4    UXTB	R4, R0
0x088E	0x4625    MOV	R5, R4
0x0890	0x3530    ADDS	R5, #48
0x0892	0x9C00    LDR	R4, [SP, #0]
0x0894	0xB2E4    UXTB	R4, R4
0x0896	0x340C    ADDS	R4, #12
0x0898	0xB2EA    UXTB	R2, R5
0x089A	0x9901    LDR	R1, [SP, #4]
0x089C	0xB2C9    UXTB	R1, R1
0x089E	0xB2E0    UXTB	R0, R4
0x08A0	0xF7FFFF30  BL	_OLED_print_char+0
;ssd1306.c, 378 :: 		if(points > 2)
0x08A4	0x9C03    LDR	R4, [SP, #12]
0x08A6	0xB2E4    UXTB	R4, R4
0x08A8	0x2C02    CMP	R4, #2
0x08AA	0xD92B    BLS	L_OLED_print_decimal71
;ssd1306.c, 380 :: 		ch = ((value % 100) / 10);
0x08AC	0x9802    LDR	R0, [SP, #8]
0x08AE	0xB280    UXTH	R0, R0
0x08B0	0x2264    MOVS	R2, #100
0x08B2	0xF7FFFE21  BL	__Div_32x32_U+0
0x08B6	0x4610    MOV	R0, R2
0x08B8	0xB280    UXTH	R0, R0
0x08BA	0x220A    MOVS	R2, #10
0x08BC	0xF7FFFE1C  BL	__Div_32x32_U+0
;ssd1306.c, 381 :: 		OLED_print_char((x_pos + 18), y_pos , (48 + ch));
0x08C0	0xB2C4    UXTB	R4, R0
0x08C2	0x4625    MOV	R5, R4
0x08C4	0x3530    ADDS	R5, #48
0x08C6	0x9C00    LDR	R4, [SP, #0]
0x08C8	0xB2E4    UXTB	R4, R4
0x08CA	0x3412    ADDS	R4, #18
0x08CC	0xB2EA    UXTB	R2, R5
0x08CE	0x9901    LDR	R1, [SP, #4]
0x08D0	0xB2C9    UXTB	R1, R1
0x08D2	0xB2E0    UXTB	R0, R4
0x08D4	0xF7FFFF16  BL	_OLED_print_char+0
;ssd1306.c, 383 :: 		if(points > 3)
0x08D8	0x9C03    LDR	R4, [SP, #12]
0x08DA	0xB2E4    UXTB	R4, R4
0x08DC	0x2C03    CMP	R4, #3
0x08DE	0xD911    BLS	L_OLED_print_decimal72
;ssd1306.c, 385 :: 		ch = (value % 10);
0x08E0	0x9802    LDR	R0, [SP, #8]
0x08E2	0xB280    UXTH	R0, R0
0x08E4	0x220A    MOVS	R2, #10
0x08E6	0xF7FFFE07  BL	__Div_32x32_U+0
0x08EA	0x4610    MOV	R0, R2
;ssd1306.c, 386 :: 		OLED_print_char((x_pos + 24), y_pos , (48 + ch));
0x08EC	0xB2C4    UXTB	R4, R0
0x08EE	0x4625    MOV	R5, R4
0x08F0	0x3530    ADDS	R5, #48
0x08F2	0x9C00    LDR	R4, [SP, #0]
0x08F4	0xB2E4    UXTB	R4, R4
0x08F6	0x3418    ADDS	R4, #24
0x08F8	0xB2EA    UXTB	R2, R5
0x08FA	0x9901    LDR	R1, [SP, #4]
0x08FC	0xB2C9    UXTB	R1, R1
0x08FE	0xB2E0    UXTB	R0, R4
0x0900	0xF7FFFF00  BL	_OLED_print_char+0
;ssd1306.c, 387 :: 		}
L_OLED_print_decimal72:
;ssd1306.c, 388 :: 		}
L_OLED_print_decimal71:
;ssd1306.c, 389 :: 		}
L_OLED_print_decimal70:
;ssd1306.c, 390 :: 		}
L_end_OLED_print_decimal:
0x0904	0xB004    ADD	SP, SP, #16
0x0906	0xBD00    POP	(R15)
0x0908	0x03E80000  	#1000
; end of _OLED_print_decimal
_OLED_print_chr:
;ssd1306.c, 238 :: 		void OLED_print_chr(unsigned char x_pos, unsigned char y_pos, signed int value)
0x1264	0xB500    PUSH	(R14)
0x1266	0xB083    SUB	SP, SP, #12
0x1268	0x9000    STR	R0, [SP, #0]
0x126A	0x9101    STR	R1, [SP, #4]
0x126C	0x9202    STR	R2, [SP, #8]
;ssd1306.c, 240 :: 		unsigned char ch = 0x00;
;ssd1306.c, 242 :: 		if(value < 0x00)
0x126E	0x9B02    LDR	R3, [SP, #8]
0x1270	0xB21B    SXTH	R3, R3
0x1272	0x2B00    CMP	R3, #0
0x1274	0xDA0B    BGE	L_OLED_print_chr41
;ssd1306.c, 244 :: 		OLED_print_char(x_pos, y_pos, '-');
0x1276	0x222D    MOVS	R2, #45
0x1278	0x9901    LDR	R1, [SP, #4]
0x127A	0xB2C9    UXTB	R1, R1
0x127C	0x9800    LDR	R0, [SP, #0]
0x127E	0xB2C0    UXTB	R0, R0
0x1280	0xF7FFFA40  BL	_OLED_print_char+0
;ssd1306.c, 245 :: 		value = -value;
0x1284	0x9B02    LDR	R3, [SP, #8]
0x1286	0xB21B    SXTH	R3, R3
0x1288	0x425B    RSBS	R3, R3, #0
0x128A	0x9302    STR	R3, [SP, #8]
;ssd1306.c, 246 :: 		}
0x128C	0xE006    B	L_OLED_print_chr42
L_OLED_print_chr41:
;ssd1306.c, 249 :: 		OLED_print_char(x_pos, y_pos,' ');
0x128E	0x2220    MOVS	R2, #32
0x1290	0x9901    LDR	R1, [SP, #4]
0x1292	0xB2C9    UXTB	R1, R1
0x1294	0x9800    LDR	R0, [SP, #0]
0x1296	0xB2C0    UXTB	R0, R0
0x1298	0xF7FFFA34  BL	_OLED_print_char+0
;ssd1306.c, 250 :: 		}
L_OLED_print_chr42:
;ssd1306.c, 252 :: 		if((value > 99) && (value <= 999))
0x129C	0x9B02    LDR	R3, [SP, #8]
0x129E	0xB21B    SXTH	R3, R3
0x12A0	0x2B63    CMP	R3, #99
0x12A2	0xDD3E    BLE	L__OLED_print_chr218
0x12A4	0x9C02    LDR	R4, [SP, #8]
0x12A6	0xB224    SXTH	R4, R4
0x12A8	0x4B52    LDR	R3, [PC, #328]
0x12AA	0x429C    CMP	R4, R3
0x12AC	0xDC39    BGT	L__OLED_print_chr217
L__OLED_print_chr216:
;ssd1306.c, 254 :: 		ch = (value / 100);
0x12AE	0x9802    LDR	R0, [SP, #8]
0x12B0	0xB200    SXTH	R0, R0
0x12B2	0x2264    MOVS	R2, #100
0x12B4	0xF7FFFA02  BL	__Div_32x32_S+0
;ssd1306.c, 255 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x12B8	0xB2C3    UXTB	R3, R0
0x12BA	0x461C    MOV	R4, R3
0x12BC	0x3430    ADDS	R4, #48
0x12BE	0x9B00    LDR	R3, [SP, #0]
0x12C0	0xB2DB    UXTB	R3, R3
0x12C2	0x3306    ADDS	R3, #6
0x12C4	0xB2E2    UXTB	R2, R4
0x12C6	0x9901    LDR	R1, [SP, #4]
0x12C8	0xB2C9    UXTB	R1, R1
0x12CA	0xB2D8    UXTB	R0, R3
0x12CC	0xF7FFFA1A  BL	_OLED_print_char+0
;ssd1306.c, 256 :: 		ch = ((value % 100) / 10);
0x12D0	0x9802    LDR	R0, [SP, #8]
0x12D2	0xB200    SXTH	R0, R0
0x12D4	0x2264    MOVS	R2, #100
0x12D6	0xF7FFF9F1  BL	__Div_32x32_S+0
0x12DA	0x4610    MOV	R0, R2
0x12DC	0xB200    SXTH	R0, R0
0x12DE	0x220A    MOVS	R2, #10
0x12E0	0xF7FFF9EC  BL	__Div_32x32_S+0
;ssd1306.c, 257 :: 		OLED_print_char((x_pos + 12), y_pos , (48 + ch));
0x12E4	0xB2C3    UXTB	R3, R0
0x12E6	0x461C    MOV	R4, R3
0x12E8	0x3430    ADDS	R4, #48
0x12EA	0x9B00    LDR	R3, [SP, #0]
0x12EC	0xB2DB    UXTB	R3, R3
0x12EE	0x330C    ADDS	R3, #12
0x12F0	0xB2E2    UXTB	R2, R4
0x12F2	0x9901    LDR	R1, [SP, #4]
0x12F4	0xB2C9    UXTB	R1, R1
0x12F6	0xB2D8    UXTB	R0, R3
0x12F8	0xF7FFFA04  BL	_OLED_print_char+0
;ssd1306.c, 258 :: 		ch = (value % 10);
0x12FC	0x9802    LDR	R0, [SP, #8]
0x12FE	0xB200    SXTH	R0, R0
0x1300	0x220A    MOVS	R2, #10
0x1302	0xF7FFF9DB  BL	__Div_32x32_S+0
0x1306	0x4610    MOV	R0, R2
;ssd1306.c, 259 :: 		OLED_print_char((x_pos + 18), y_pos , (48 + ch));
0x1308	0xB2C3    UXTB	R3, R0
0x130A	0x461C    MOV	R4, R3
0x130C	0x3430    ADDS	R4, #48
0x130E	0x9B00    LDR	R3, [SP, #0]
0x1310	0xB2DB    UXTB	R3, R3
0x1312	0x3312    ADDS	R3, #18
0x1314	0xB2E2    UXTB	R2, R4
0x1316	0x9901    LDR	R1, [SP, #4]
0x1318	0xB2C9    UXTB	R1, R1
0x131A	0xB2D8    UXTB	R0, R3
0x131C	0xF7FFF9F2  BL	_OLED_print_char+0
;ssd1306.c, 260 :: 		}
0x1320	0xE065    B	L_OLED_print_chr46
;ssd1306.c, 252 :: 		if((value > 99) && (value <= 999))
L__OLED_print_chr218:
L__OLED_print_chr217:
;ssd1306.c, 261 :: 		else if((value > 9) && (value <= 99))
0x1322	0x9B02    LDR	R3, [SP, #8]
0x1324	0xB21B    SXTH	R3, R3
0x1326	0x2B09    CMP	R3, #9
0x1328	0xDD35    BLE	L__OLED_print_chr220
0x132A	0x9B02    LDR	R3, [SP, #8]
0x132C	0xB21B    SXTH	R3, R3
0x132E	0x2B63    CMP	R3, #99
0x1330	0xDC31    BGT	L__OLED_print_chr219
L__OLED_print_chr215:
;ssd1306.c, 263 :: 		ch = ((value % 100) / 10);
0x1332	0x9802    LDR	R0, [SP, #8]
0x1334	0xB200    SXTH	R0, R0
0x1336	0x2264    MOVS	R2, #100
0x1338	0xF7FFF9C0  BL	__Div_32x32_S+0
0x133C	0x4610    MOV	R0, R2
0x133E	0xB200    SXTH	R0, R0
0x1340	0x220A    MOVS	R2, #10
0x1342	0xF7FFF9BB  BL	__Div_32x32_S+0
;ssd1306.c, 264 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x1346	0xB2C3    UXTB	R3, R0
0x1348	0x461C    MOV	R4, R3
0x134A	0x3430    ADDS	R4, #48
0x134C	0x9B00    LDR	R3, [SP, #0]
0x134E	0xB2DB    UXTB	R3, R3
0x1350	0x3306    ADDS	R3, #6
0x1352	0xB2E2    UXTB	R2, R4
0x1354	0x9901    LDR	R1, [SP, #4]
0x1356	0xB2C9    UXTB	R1, R1
0x1358	0xB2D8    UXTB	R0, R3
0x135A	0xF7FFF9D3  BL	_OLED_print_char+0
;ssd1306.c, 265 :: 		ch = (value % 10);
0x135E	0x9802    LDR	R0, [SP, #8]
0x1360	0xB200    SXTH	R0, R0
0x1362	0x220A    MOVS	R2, #10
0x1364	0xF7FFF9AA  BL	__Div_32x32_S+0
0x1368	0x4610    MOV	R0, R2
;ssd1306.c, 266 :: 		OLED_print_char((x_pos + 12), y_pos , (48 + ch));
0x136A	0xB2C3    UXTB	R3, R0
0x136C	0x461C    MOV	R4, R3
0x136E	0x3430    ADDS	R4, #48
0x1370	0x9B00    LDR	R3, [SP, #0]
0x1372	0xB2DB    UXTB	R3, R3
0x1374	0x330C    ADDS	R3, #12
0x1376	0xB2E2    UXTB	R2, R4
0x1378	0x9901    LDR	R1, [SP, #4]
0x137A	0xB2C9    UXTB	R1, R1
0x137C	0xB2D8    UXTB	R0, R3
0x137E	0xF7FFF9C1  BL	_OLED_print_char+0
;ssd1306.c, 267 :: 		OLED_print_char((x_pos + 18), y_pos , 32);
0x1382	0x9B00    LDR	R3, [SP, #0]
0x1384	0xB2DB    UXTB	R3, R3
0x1386	0x3312    ADDS	R3, #18
0x1388	0x2220    MOVS	R2, #32
0x138A	0x9901    LDR	R1, [SP, #4]
0x138C	0xB2C9    UXTB	R1, R1
0x138E	0xB2D8    UXTB	R0, R3
0x1390	0xF7FFF9B8  BL	_OLED_print_char+0
;ssd1306.c, 268 :: 		}
0x1394	0xE02B    B	L_OLED_print_chr50
;ssd1306.c, 261 :: 		else if((value > 9) && (value <= 99))
L__OLED_print_chr220:
L__OLED_print_chr219:
;ssd1306.c, 269 :: 		else if((value >= 0) && (value <= 9))
0x1396	0x9B02    LDR	R3, [SP, #8]
0x1398	0xB21B    SXTH	R3, R3
0x139A	0x2B00    CMP	R3, #0
0x139C	0xDB27    BLT	L__OLED_print_chr222
0x139E	0x9B02    LDR	R3, [SP, #8]
0x13A0	0xB21B    SXTH	R3, R3
0x13A2	0x2B09    CMP	R3, #9
0x13A4	0xDC23    BGT	L__OLED_print_chr221
L__OLED_print_chr214:
;ssd1306.c, 271 :: 		ch = (value % 10);
0x13A6	0x9802    LDR	R0, [SP, #8]
0x13A8	0xB200    SXTH	R0, R0
0x13AA	0x220A    MOVS	R2, #10
0x13AC	0xF7FFF986  BL	__Div_32x32_S+0
0x13B0	0x4610    MOV	R0, R2
;ssd1306.c, 272 :: 		OLED_print_char((x_pos + 6), y_pos , (48 + ch));
0x13B2	0xB2C3    UXTB	R3, R0
0x13B4	0x461C    MOV	R4, R3
0x13B6	0x3430    ADDS	R4, #48
0x13B8	0x9B00    LDR	R3, [SP, #0]
0x13BA	0xB2DB    UXTB	R3, R3
0x13BC	0x3306    ADDS	R3, #6
0x13BE	0xB2E2    UXTB	R2, R4
0x13C0	0x9901    LDR	R1, [SP, #4]
0x13C2	0xB2C9    UXTB	R1, R1
0x13C4	0xB2D8    UXTB	R0, R3
0x13C6	0xF7FFF99D  BL	_OLED_print_char+0
;ssd1306.c, 273 :: 		OLED_print_char((x_pos + 12), y_pos , 32);
0x13CA	0x9B00    LDR	R3, [SP, #0]
0x13CC	0xB2DB    UXTB	R3, R3
0x13CE	0x330C    ADDS	R3, #12
0x13D0	0x2220    MOVS	R2, #32
0x13D2	0x9901    LDR	R1, [SP, #4]
0x13D4	0xB2C9    UXTB	R1, R1
0x13D6	0xB2D8    UXTB	R0, R3
0x13D8	0xF7FFF994  BL	_OLED_print_char+0
;ssd1306.c, 274 :: 		OLED_print_char((x_pos + 18), y_pos , 32);
0x13DC	0x9B00    LDR	R3, [SP, #0]
0x13DE	0xB2DB    UXTB	R3, R3
0x13E0	0x3312    ADDS	R3, #18
0x13E2	0x2220    MOVS	R2, #32
0x13E4	0x9901    LDR	R1, [SP, #4]
0x13E6	0xB2C9    UXTB	R1, R1
0x13E8	0xB2D8    UXTB	R0, R3
0x13EA	0xF7FFF98B  BL	_OLED_print_char+0
;ssd1306.c, 269 :: 		else if((value >= 0) && (value <= 9))
L__OLED_print_chr222:
L__OLED_print_chr221:
;ssd1306.c, 275 :: 		}
L_OLED_print_chr50:
L_OLED_print_chr46:
;ssd1306.c, 276 :: 		}
L_end_OLED_print_chr:
0x13EE	0xB003    ADD	SP, SP, #12
0x13F0	0xBD00    POP	(R15)
0x13F2	0xBF00    NOP
0x13F4	0x03E70000  	#999
; end of _OLED_print_chr
__Lib_System_InitialSetUpRCCRCC2:
;__Lib_System.c, 346 :: 		
0x2068	0xB500    PUSH	(R14)
0x206A	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 349 :: 		
; ulRCC_CR start address is: 8 (R2)
0x206C	0x4A32    LDR	R2, [PC, #200]
;__Lib_System.c, 350 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x206E	0x4B33    LDR	R3, [PC, #204]
;__Lib_System.c, 351 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x2070	0x4C33    LDR	R4, [PC, #204]
;__Lib_System.c, 352 :: 		
; ulRCC_CSR start address is: 20 (R5)
0x2072	0x4D34    LDR	R5, [PC, #208]
;__Lib_System.c, 353 :: 		
; ulRCC_CR2 start address is: 24 (R6)
0x2074	0x4E34    LDR	R6, [PC, #208]
;__Lib_System.c, 354 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2076	0x4935    LDR	R1, [PC, #212]
;__Lib_System.c, 359 :: 		
0x2078	0x4835    LDR	R0, [PC, #212]
0x207A	0x4281    CMP	R1, R0
0x207C	0xD906    BLS	L___Lib_System_InitialSetUpRCCRCC219
; Fosc_kHz end address is: 4 (R1)
;__Lib_System.c, 360 :: 		
0x207E	0x4835    LDR	R0, [PC, #212]
0x2080	0x6801    LDR	R1, [R0, #0]
0x2082	0x2001    MOVS	R0, #1
0x2084	0x4301    ORRS	R1, R0
0x2086	0x4833    LDR	R0, [PC, #204]
0x2088	0x6001    STR	R1, [R0, #0]
0x208A	0xE005    B	L___Lib_System_InitialSetUpRCCRCC220
L___Lib_System_InitialSetUpRCCRCC219:
;__Lib_System.c, 362 :: 		
0x208C	0x4831    LDR	R0, [PC, #196]
0x208E	0x6801    LDR	R1, [R0, #0]
0x2090	0x4831    LDR	R0, [PC, #196]
0x2092	0x4001    ANDS	R1, R0
0x2094	0x482F    LDR	R0, [PC, #188]
0x2096	0x6001    STR	R1, [R0, #0]
L___Lib_System_InitialSetUpRCCRCC220:
;__Lib_System.c, 364 :: 		
0x2098	0xF7FFF9AE  BL	__Lib_System_SystemClockSetDefault+0
;__Lib_System.c, 366 :: 		
0x209C	0x482F    LDR	R0, [PC, #188]
0x209E	0x6003    STR	R3, [R0, #0]
;__Lib_System.c, 367 :: 		
0x20A0	0x482F    LDR	R0, [PC, #188]
0x20A2	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System.c, 368 :: 		
0x20A4	0x482F    LDR	R0, [PC, #188]
0x20A6	0x4611    MOV	R1, R2
0x20A8	0x4001    ANDS	R1, R0
0x20AA	0x482F    LDR	R0, [PC, #188]
0x20AC	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 369 :: 		
0x20AE	0x482F    LDR	R0, [PC, #188]
0x20B0	0x6005    STR	R5, [R0, #0]
; ulRCC_CSR end address is: 20 (R5)
;__Lib_System.c, 370 :: 		
0x20B2	0x482F    LDR	R0, [PC, #188]
0x20B4	0x6006    STR	R6, [R0, #0]
; ulRCC_CR2 end address is: 24 (R6)
;__Lib_System.c, 372 :: 		
0x20B6	0x2001    MOVS	R0, #1
0x20B8	0x4010    ANDS	R0, R2
0x20BA	0x2800    CMP	R0, #0
0x20BC	0xD008    BEQ	L___Lib_System_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 12 (R3)
;__Lib_System.c, 373 :: 		
L___Lib_System_InitialSetUpRCCRCC222:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x20BE	0x482A    LDR	R0, [PC, #168]
0x20C0	0x6801    LDR	R1, [R0, #0]
0x20C2	0x2002    MOVS	R0, #2
0x20C4	0x4008    ANDS	R0, R1
0x20C6	0x2800    CMP	R0, #0
0x20C8	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC223
;__Lib_System.c, 374 :: 		
0x20CA	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC222
L___Lib_System_InitialSetUpRCCRCC223:
;__Lib_System.c, 375 :: 		
; ulRCC_CFGR end address is: 12 (R3)
0x20CC	0x4619    MOV	R1, R3
0x20CE	0xE000    B	L___Lib_System_InitialSetUpRCCRCC221
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_InitialSetUpRCCRCC236:
;__Lib_System.c, 372 :: 		
0x20D0	0x4619    MOV	R1, R3
;__Lib_System.c, 375 :: 		
L___Lib_System_InitialSetUpRCCRCC221:
;__Lib_System.c, 377 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x20D2	0x4828    LDR	R0, [PC, #160]
0x20D4	0x4010    ANDS	R0, R2
0x20D6	0x2800    CMP	R0, #0
0x20D8	0xD00A    BEQ	L___Lib_System_InitialSetUpRCCRCC237
; ulRCC_CFGR end address is: 4 (R1)
; ulRCC_CR end address is: 8 (R2)
0x20DA	0x460B    MOV	R3, R1
;__Lib_System.c, 378 :: 		
L___Lib_System_InitialSetUpRCCRCC225:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x20DC	0x4822    LDR	R0, [PC, #136]
0x20DE	0x6801    LDR	R1, [R0, #0]
0x20E0	0x4825    LDR	R0, [PC, #148]
0x20E2	0x4008    ANDS	R0, R1
0x20E4	0x2800    CMP	R0, #0
0x20E6	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC226
;__Lib_System.c, 379 :: 		
0x20E8	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC225
L___Lib_System_InitialSetUpRCCRCC226:
;__Lib_System.c, 380 :: 		
0x20EA	0x4611    MOV	R1, R2
; ulRCC_CFGR end address is: 12 (R3)
0x20EC	0x461A    MOV	R2, R3
0x20EE	0xE002    B	L___Lib_System_InitialSetUpRCCRCC224
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_InitialSetUpRCCRCC237:
;__Lib_System.c, 377 :: 		
0x20F0	0x9100    STR	R1, [SP, #0]
0x20F2	0x4611    MOV	R1, R2
0x20F4	0x9A00    LDR	R2, [SP, #0]
;__Lib_System.c, 380 :: 		
L___Lib_System_InitialSetUpRCCRCC224:
;__Lib_System.c, 382 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x20F6	0x4821    LDR	R0, [PC, #132]
0x20F8	0x4008    ANDS	R0, R1
; ulRCC_CR end address is: 4 (R1)
0x20FA	0x2800    CMP	R0, #0
0x20FC	0xD00E    BEQ	L___Lib_System_InitialSetUpRCCRCC238
;__Lib_System.c, 383 :: 		
0x20FE	0x481A    LDR	R0, [PC, #104]
0x2100	0x6801    LDR	R1, [R0, #0]
0x2102	0x481E    LDR	R0, [PC, #120]
0x2104	0x4301    ORRS	R1, R0
0x2106	0x4818    LDR	R0, [PC, #96]
0x2108	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
;__Lib_System.c, 384 :: 		
L___Lib_System_InitialSetUpRCCRCC228:
; ulRCC_CFGR start address is: 8 (R2)
0x210A	0x4817    LDR	R0, [PC, #92]
0x210C	0x6801    LDR	R1, [R0, #0]
0x210E	0x481C    LDR	R0, [PC, #112]
0x2110	0x4008    ANDS	R0, R1
0x2112	0x2800    CMP	R0, #0
0x2114	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC229
;__Lib_System.c, 385 :: 		
0x2116	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC228
L___Lib_System_InitialSetUpRCCRCC229:
;__Lib_System.c, 386 :: 		
0x2118	0x4613    MOV	R3, R2
0x211A	0xE000    B	L___Lib_System_InitialSetUpRCCRCC227
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_InitialSetUpRCCRCC238:
;__Lib_System.c, 382 :: 		
0x211C	0x4613    MOV	R3, R2
;__Lib_System.c, 386 :: 		
L___Lib_System_InitialSetUpRCCRCC227:
;__Lib_System.c, 389 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_InitialSetUpRCCRCC230:
; ulRCC_CFGR start address is: 12 (R3)
0x211E	0x480F    LDR	R0, [PC, #60]
0x2120	0x6801    LDR	R1, [R0, #0]
0x2122	0x200C    MOVS	R0, #12
0x2124	0x460A    MOV	R2, R1
0x2126	0x4002    ANDS	R2, R0
0x2128	0x0099    LSLS	R1, R3, #2
0x212A	0x200C    MOVS	R0, #12
0x212C	0x4008    ANDS	R0, R1
0x212E	0x4282    CMP	R2, R0
0x2130	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC231
;__Lib_System.c, 390 :: 		
; ulRCC_CFGR end address is: 12 (R3)
0x2132	0xE7F4    B	L___Lib_System_InitialSetUpRCCRCC230
L___Lib_System_InitialSetUpRCCRCC231:
;__Lib_System.c, 391 :: 		
L_end_InitialSetUpRCCRCC2:
0x2134	0xB001    ADD	SP, SP, #4
0x2136	0xBD00    POP	(R15)
0x2138	0x00810108  	#17301633
0x213C	0x00020028  	#2621442
0x2140	0x00000000  	#0
0x2144	0x00000000  	#0
0x2148	0x00800000  	#128
0x214C	0xBB800000  	#48000
0x2150	0x5DC00000  	#24000
0x2154	0x20004002  	Flash_ACR+0
0x2158	0xFFF8FFFF  	#-8
0x215C	0x10044002  	RCC_CFGR+0
0x2160	0x102C4002  	RCC_CFGR2+0
0x2164	0xFFFF000F  	#1048575
0x2168	0x10004002  	RCC_CR+0
0x216C	0x10244002  	RCC_CSR+0
0x2170	0x10344002  	RCC_CR2+0
0x2174	0x00000001  	#65536
0x2178	0x00000002  	#131072
0x217C	0x00000100  	#16777216
0x2180	0x00000200  	#33554432
; end of __Lib_System_InitialSetUpRCCRCC2
__Lib_System_SystemClockSetDefault:
;__Lib_System.c, 319 :: 		
0x13F8	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 322 :: 		
0x13FA	0x4819    LDR	R0, [PC, #100]
0x13FC	0x6801    LDR	R1, [R0, #0]
0x13FE	0x2001    MOVS	R0, #1
0x1400	0x4301    ORRS	R1, R0
0x1402	0x4817    LDR	R0, [PC, #92]
0x1404	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 325 :: 		
0x1406	0x4817    LDR	R0, [PC, #92]
0x1408	0x6801    LDR	R1, [R0, #0]
0x140A	0x4817    LDR	R0, [PC, #92]
0x140C	0x4001    ANDS	R1, R0
0x140E	0x4815    LDR	R0, [PC, #84]
0x1410	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 328 :: 		
0x1412	0x4813    LDR	R0, [PC, #76]
0x1414	0x6801    LDR	R1, [R0, #0]
0x1416	0x4815    LDR	R0, [PC, #84]
0x1418	0x4001    ANDS	R1, R0
0x141A	0x4811    LDR	R0, [PC, #68]
0x141C	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 331 :: 		
0x141E	0x4810    LDR	R0, [PC, #64]
0x1420	0x6801    LDR	R1, [R0, #0]
0x1422	0x4813    LDR	R0, [PC, #76]
0x1424	0x4001    ANDS	R1, R0
0x1426	0x480E    LDR	R0, [PC, #56]
0x1428	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 334 :: 		
0x142A	0x480E    LDR	R0, [PC, #56]
0x142C	0x6801    LDR	R1, [R0, #0]
0x142E	0x4811    LDR	R0, [PC, #68]
0x1430	0x4001    ANDS	R1, R0
0x1432	0x480C    LDR	R0, [PC, #48]
0x1434	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 337 :: 		
0x1436	0x4810    LDR	R0, [PC, #64]
0x1438	0x6801    LDR	R1, [R0, #0]
0x143A	0x4810    LDR	R0, [PC, #64]
0x143C	0x4001    ANDS	R1, R0
0x143E	0x480E    LDR	R0, [PC, #56]
0x1440	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 340 :: 		
0x1442	0x480F    LDR	R0, [PC, #60]
0x1444	0x6801    LDR	R1, [R0, #0]
0x1446	0x480F    LDR	R0, [PC, #60]
0x1448	0x4001    ANDS	R1, R0
0x144A	0x480D    LDR	R0, [PC, #52]
0x144C	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 343 :: 		
0x144E	0x480E    LDR	R0, [PC, #56]
0x1450	0x6801    LDR	R1, [R0, #0]
0x1452	0x480E    LDR	R0, [PC, #56]
0x1454	0x4001    ANDS	R1, R0
0x1456	0x480C    LDR	R0, [PC, #48]
0x1458	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 344 :: 		
L_end_SystemClockSetDefault:
0x145A	0xB001    ADD	SP, SP, #4
0x145C	0x4770    BX	LR
0x145E	0xBF00    NOP
0x1460	0x10004002  	RCC_CR+0
0x1464	0x10044002  	RCC_CFGR+0
0x1468	0xB80CF8FF  	#-117458932
0x146C	0xFFFFFEF6  	#-17367041
0x1470	0xFFFFFFFB  	#-262145
0x1474	0xFFFFFFC0  	#-4128769
0x1478	0x102C4002  	RCC_CFGR2+0
0x147C	0xFFF0FFFF  	#-16
0x1480	0x10304002  	RCC_CFGR3+0
0x1484	0xFEACFFFF  	#-340
0x1488	0x10344002  	RCC_CR2+0
0x148C	0xFFFEFFFF  	#-2
; end of __Lib_System_SystemClockSetDefault
__Lib_System_InitialSetUpFosc:
;__Lib_System.c, 393 :: 		
0x1B40	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 394 :: 		
0x1B42	0x4902    LDR	R1, [PC, #8]
0x1B44	0x4802    LDR	R0, [PC, #8]
0x1B46	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 395 :: 		
L_end_InitialSetUpFosc:
0x1B48	0xB001    ADD	SP, SP, #4
0x1B4A	0x4770    BX	LR
0x1B4C	0xBB800000  	#48000
0x1B50	0x04202000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_InitialSetUpFosc
___GenExcept:
;__Lib_System.c, 267 :: 		
0x1B54	0xB500    PUSH	(R14)
;__Lib_System.c, 268 :: 		
L___GenExcept15:
0x1B56	0xE7FE    B	L___GenExcept15
;__Lib_System.c, 269 :: 		
L_end___GenExcept:
0x1B58	0xBD00    POP	(R15)
; end of ___GenExcept
0x240C	0xB500    PUSH	(R14)
0x240E	0x4E03    LDR	R6, [PC, #12]
0x2410	0x4D03    LDR	R5, [PC, #12]
0x2412	0x4F04    LDR	R7, [PC, #16]
0x2414	0xF7FFF852  BL	5308
0x2418	0xBD00    POP	(R15)
0x241A	0x4770    BX	LR
0x241C	0x00002000  	#536870912
0x2420	0x001D2000  	#536870941
0x2424	0x23AC0000  	#9132
0x248C	0xB500    PUSH	(R14)
0x248E	0x4E03    LDR	R6, [PC, #12]
0x2490	0x4D03    LDR	R5, [PC, #12]
0x2492	0xF7FEFFFD  BL	5264
0x2496	0xBD00    POP	(R15)
0x2498	0x4770    BX	LR
0x249A	0xBF00    NOP
0x249C	0x00002000  	#536870912
0x24A0	0x04242000  	#536871972
;OLED_Demo.c,1 :: _font_regular [552]
0x2184	0x00000000 ;_font_regular+0
0x2188	0x00000000 ;_font_regular+4
0x218C	0x00002F00 ;_font_regular+8
0x2190	0x00070000 ;_font_regular+12
0x2194	0x14000007 ;_font_regular+16
0x2198	0x147F147F ;_font_regular+20
0x219C	0x7F2A2400 ;_font_regular+24
0x21A0	0x6200122A ;_font_regular+28
0x21A4	0x23130864 ;_font_regular+32
0x21A8	0x55493600 ;_font_regular+36
0x21AC	0x00005022 ;_font_regular+40
0x21B0	0x00000305 ;_font_regular+44
0x21B4	0x221C0000 ;_font_regular+48
0x21B8	0x00000041 ;_font_regular+52
0x21BC	0x001C2241 ;_font_regular+56
0x21C0	0x3E081400 ;_font_regular+60
0x21C4	0x08001408 ;_font_regular+64
0x21C8	0x08083E08 ;_font_regular+68
0x21CC	0xA0000000 ;_font_regular+72
0x21D0	0x08000060 ;_font_regular+76
0x21D4	0x08080808 ;_font_regular+80
0x21D8	0x60600000 ;_font_regular+84
0x21DC	0x20000000 ;_font_regular+88
0x21E0	0x02040810 ;_font_regular+92
0x21E4	0x49513E00 ;_font_regular+96
0x21E8	0x00003E45 ;_font_regular+100
0x21EC	0x00407F42 ;_font_regular+104
0x21F0	0x51614200 ;_font_regular+108
0x21F4	0x21004649 ;_font_regular+112
0x21F8	0x314B4541 ;_font_regular+116
0x21FC	0x12141800 ;_font_regular+120
0x2200	0x2700107F ;_font_regular+124
0x2204	0x39454545 ;_font_regular+128
0x2208	0x494A3C00 ;_font_regular+132
0x220C	0x01003049 ;_font_regular+136
0x2210	0x03050971 ;_font_regular+140
0x2214	0x49493600 ;_font_regular+144
0x2218	0x06003649 ;_font_regular+148
0x221C	0x1E294949 ;_font_regular+152
0x2220	0x36360000 ;_font_regular+156
0x2224	0x00000000 ;_font_regular+160
0x2228	0x00003656 ;_font_regular+164
0x222C	0x22140800 ;_font_regular+168
0x2230	0x14000041 ;_font_regular+172
0x2234	0x14141414 ;_font_regular+176
0x2238	0x22410000 ;_font_regular+180
0x223C	0x02000814 ;_font_regular+184
0x2240	0x06095101 ;_font_regular+188
0x2244	0x59493200 ;_font_regular+192
0x2248	0x7C003E51 ;_font_regular+196
0x224C	0x7C121112 ;_font_regular+200
0x2250	0x49497F00 ;_font_regular+204
0x2254	0x3E003649 ;_font_regular+208
0x2258	0x22414141 ;_font_regular+212
0x225C	0x41417F00 ;_font_regular+216
0x2260	0x7F001C22 ;_font_regular+220
0x2264	0x41494949 ;_font_regular+224
0x2268	0x09097F00 ;_font_regular+228
0x226C	0x3E000109 ;_font_regular+232
0x2270	0x7A494941 ;_font_regular+236
0x2274	0x08087F00 ;_font_regular+240
0x2278	0x00007F08 ;_font_regular+244
0x227C	0x00417F41 ;_font_regular+248
0x2280	0x41402000 ;_font_regular+252
0x2284	0x7F00013F ;_font_regular+256
0x2288	0x41221408 ;_font_regular+260
0x228C	0x40407F00 ;_font_regular+264
0x2290	0x7F004040 ;_font_regular+268
0x2294	0x7F020C02 ;_font_regular+272
0x2298	0x08047F00 ;_font_regular+276
0x229C	0x3E007F10 ;_font_regular+280
0x22A0	0x3E414141 ;_font_regular+284
0x22A4	0x09097F00 ;_font_regular+288
0x22A8	0x3E000609 ;_font_regular+292
0x22AC	0x5E215141 ;_font_regular+296
0x22B0	0x19097F00 ;_font_regular+300
0x22B4	0x46004629 ;_font_regular+304
0x22B8	0x31494949 ;_font_regular+308
0x22BC	0x7F010100 ;_font_regular+312
0x22C0	0x3F000101 ;_font_regular+316
0x22C4	0x3F404040 ;_font_regular+320
0x22C8	0x40201F00 ;_font_regular+324
0x22CC	0x3F001F20 ;_font_regular+328
0x22D0	0x3F403840 ;_font_regular+332
0x22D4	0x08146300 ;_font_regular+336
0x22D8	0x07006314 ;_font_regular+340
0x22DC	0x07087008 ;_font_regular+344
0x22E0	0x49516100 ;_font_regular+348
0x22E4	0x00004345 ;_font_regular+352
0x22E8	0x0041417F ;_font_regular+356
0x22EC	0x08040200 ;_font_regular+360
0x22F0	0x00002010 ;_font_regular+364
0x22F4	0x007F4141 ;_font_regular+368
0x22F8	0x01020400 ;_font_regular+372
0x22FC	0x40000402 ;_font_regular+376
0x2300	0x40404040 ;_font_regular+380
0x2304	0x02010000 ;_font_regular+384
0x2308	0x20000004 ;_font_regular+388
0x230C	0x78545454 ;_font_regular+392
0x2310	0x44487F00 ;_font_regular+396
0x2314	0x38003844 ;_font_regular+400
0x2318	0x20444444 ;_font_regular+404
0x231C	0x44443800 ;_font_regular+408
0x2320	0x38007F48 ;_font_regular+412
0x2324	0x18545454 ;_font_regular+416
0x2328	0x097E0800 ;_font_regular+420
0x232C	0x18000201 ;_font_regular+424
0x2330	0x7CA4A4A4 ;_font_regular+428
0x2334	0x04087F00 ;_font_regular+432
0x2338	0x00007804 ;_font_regular+436
0x233C	0x00407D44 ;_font_regular+440
0x2340	0x84804000 ;_font_regular+444
0x2344	0x7F00007D ;_font_regular+448
0x2348	0x00442810 ;_font_regular+452
0x234C	0x7F410000 ;_font_regular+456
0x2350	0x7C000040 ;_font_regular+460
0x2354	0x78041804 ;_font_regular+464
0x2358	0x04087C00 ;_font_regular+468
0x235C	0x38007804 ;_font_regular+472
0x2360	0x38444444 ;_font_regular+476
0x2364	0x2424FC00 ;_font_regular+480
0x2368	0x18001824 ;_font_regular+484
0x236C	0xFC182424 ;_font_regular+488
0x2370	0x04087C00 ;_font_regular+492
0x2374	0x48000804 ;_font_regular+496
0x2378	0x20545454 ;_font_regular+500
0x237C	0x443F0400 ;_font_regular+504
0x2380	0x3C002040 ;_font_regular+508
0x2384	0x7C204040 ;_font_regular+512
0x2388	0x40201C00 ;_font_regular+516
0x238C	0x3C001C20 ;_font_regular+520
0x2390	0x3C403040 ;_font_regular+524
0x2394	0x10284400 ;_font_regular+528
0x2398	0x1C004428 ;_font_regular+532
0x239C	0x7CA0A0A0 ;_font_regular+536
0x23A0	0x54644400 ;_font_regular+540
0x23A4	0x1414444C ;_font_regular+544
0x23A8	0x14141414 ;_font_regular+548
; end of _font_regular
;,0 :: _initBlock_1 [29]
; Containing: ?ICS?lstr1_OLED_Demo [11]
;             ?ICS?lstr2_OLED_Demo [18]
0x23AC	0x7263694D ;_initBlock_1+0 : ?ICS?lstr1_OLED_Demo at 0x23AC
0x23B0	0x6572416F ;_initBlock_1+4
0x23B4	0x6600616E ;_initBlock_1+8 : ?ICS?lstr2_OLED_Demo at 0x23B7
0x23B8	0x6F632E62 ;_initBlock_1+12
0x23BC	0x694D2F6D ;_initBlock_1+16
0x23C0	0x416F7263 ;_initBlock_1+20
0x23C4	0x616E6572 ;_initBlock_1+24
0x23C8	0x00 ;_initBlock_1+28
; end of _initBlock_1
;__Lib_GPIO_32F051xx.c,0 :: ?ICSGPIO_Config_pinpos_L0 [4]
0x23CC	0x00000000 ;?ICSGPIO_Config_pinpos_L0+0
; end of ?ICSGPIO_Config_pinpos_L0
;__Lib_GPIO_32F051xx.c,0 :: ?ICSGPIO_Config_pos_L0 [4]
0x23D0	0x00000000 ;?ICSGPIO_Config_pos_L0+0
; end of ?ICSGPIO_Config_pos_L0
;__Lib_GPIO_32F051xx.c,0 :: ?ICSGPIO_Config_mode_L0 [4]
0x23D4	0x00000000 ;?ICSGPIO_Config_mode_L0+0
; end of ?ICSGPIO_Config_mode_L0
;__Lib_GPIO_32F051xx.c,0 :: ?ICSGPIO_Config_speed_L0 [4]
0x23D8	0x00000000 ;?ICSGPIO_Config_speed_L0+0
; end of ?ICSGPIO_Config_speed_L0
;__Lib_GPIO_32F051xx.c,0 :: ?ICSGPIO_Config_otype_L0 [4]
0x23DC	0x00000000 ;?ICSGPIO_Config_otype_L0+0
; end of ?ICSGPIO_Config_otype_L0
;__Lib_GPIO_32F051xx.c,0 :: ?ICSGPIO_Config_pull_L0 [4]
0x23E0	0x00000000 ;?ICSGPIO_Config_pull_L0+0
; end of ?ICSGPIO_Config_pull_L0
;__Lib_CMath.c,264 :: sin_coeff_a_L0 [20]
0x23E4	0x484AF3EC ;sin_coeff_a_L0+0
0x23E8	0xC7959535 ;sin_coeff_a_L0+4
0x23EC	0x45DCC117 ;sin_coeff_a_L0+8
0x23F0	0xC36DDBFD ;sin_coeff_a_L0+12
0x23F4	0x4033B372 ;sin_coeff_a_L0+16
; end of sin_coeff_a_L0
;__Lib_CMath.c,271 :: sin_coeff_b_L0 [16]
0x23F8	0x4801342B ;sin_coeff_b_L0+0
0x23FC	0x45B09D7F ;sin_coeff_b_L0+4
0x2400	0x42D9FFE7 ;sin_coeff_b_L0+8
0x2404	0x3F800000 ;sin_coeff_b_L0+12
; end of sin_coeff_b_L0
;OLED_Demo.c,0 :: ?ICSDraw_Circle_a_L0 [4]
0x2408	0x00000000 ;?ICSDraw_Circle_a_L0+0
; end of ?ICSDraw_Circle_a_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x00C0      [20]    __Lib_MathDouble___Fp
0x00D4     [170]    __Add_FP
0x0180     [128]    _GPIO_Clk_Enable
0x0200      [76]    _OLED_fill
0x024C     [684]    _GPIO_Config
0x04F8      [68]    __Div_32x32_U
0x053C     [104]    _Draw_Pixel
0x05A4      [86]    __Compare_FP
0x05FC      [10]    _OLED_clear_screen
0x0608      [28]    __SignedIntegralToFloat
0x0624      [56]    __FloatToSignedIntegral
0x065C      [14]    __Sub_FP
0x066C      [36]    _OLED_clear_buffer
0x0690      [44]    _setup_GPIOs
0x06BC      [72]    __Div_32x32_S
0x0704      [68]    _OLED_print_char
0x0748      [80]    _OLED_reset_sequence
0x0798     [104]    _OLED_write
0x0800      [52]    _OLED_gotoxy
0x0834     [216]    _OLED_print_decimal
0x090C      [72]    __Lib_CMath_eval_poly
0x0954     [162]    __Div_FP
0x09F8     [872]    _OLED_print_int
0x0D60     [124]    __Lib_MathDouble___Float_Aux
0x0DDC     [350]    _Draw_Line
0x0F3C     [228]    _OLED_init
0x1020     [120]    _floor
0x1098       [8]    _setup
0x10A0     [452]    _OLED_print_float
0x1264     [404]    _OLED_print_chr
0x13F8     [152]    __Lib_System_SystemClockSetDefault
0x1490      [42]    ___FillZeros
0x14BC      [18]    ___CC2DW
0x14D0     [140]    _OLED_print_string
0x155C      [18]    __UnsignedIntegralToFloat
0x1570     [130]    __Mul_FP
0x15F4     [248]    _sin
0x16EC     [380]    _Draw_Rectangle
0x1868      [46]    __FloatToUnsignedIntegral
0x1898      [72]    _cos
0x18E0     [608]    _Draw_Circle
0x1B40      [20]    __Lib_System_InitialSetUpFosc
0x1B54       [6]    ___GenExcept
0x1B5C    [1292]    _main
0x2068     [284]    __Lib_System_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [11]    ?lstr1_OLED_Demo
0x2000000B      [18]    ?lstr2_OLED_Demo
0x2000001D    [1024]    _buffer
0x20000420       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2184     [552]    _font_regular
0x23AC      [11]    ?ICS?lstr1_OLED_Demo
0x23B7      [18]    ?ICS?lstr2_OLED_Demo
0x23CC       [4]    ?ICSGPIO_Config_pinpos_L0
0x23D0       [4]    ?ICSGPIO_Config_pos_L0
0x23D4       [4]    ?ICSGPIO_Config_mode_L0
0x23D8       [4]    ?ICSGPIO_Config_speed_L0
0x23DC       [4]    ?ICSGPIO_Config_otype_L0
0x23E0       [4]    ?ICSGPIO_Config_pull_L0
0x23E4      [20]    sin_coeff_a_L0
0x23F8      [16]    sin_coeff_b_L0
0x2408       [4]    ?ICSDraw_Circle_a_L0
